{
    "modules": {
        "BrAPI": {
            "Calls": {
                "calls": {
                    "/calls": true
                }
            },
            "Crops": {
                "calls": {
                    "/commoncropnames": true,
                    "/crops": true
                }
            },
            "Programs": {
                "calls": {
                    "/programs": true,
                    "/programs-search": true,
                    "/search/programs": true,
                    "/search/programs/{searchResultsDbId}": true
                }
            },
            "Locations": {
                "calls": {
                    "/locations": true,
                    "/locations/{locationDbId}": true
                }
            },
            "Trials": {
                "calls": {
                    "/trials": true,
                    "/trials/{trialDbId}": true
                }
            },
            "Studies": {
                "calls": {
                    "/search/studies": true,
                    "/search/studies/{searchResultsDbId}": true,
                    "/seasons": true,
                    "/studies": true,
                    "/studies-search": true,
                    "/studies/{studyDbId}": true,
                    "/studies/{studyDbId}/germplasm": true,
                    "/studies/{studyDbId}/layout": true,
                    "/studies/{studyDbId}/layouts": true,
                    "/studies/{studyDbId}/observationVariables": true,
                    "/studies/{studyDbId}/observations": true,
                    "/studies/{studyDbId}/observationunits": true,
                    "/studies/{studyDbId}/observationunits/zip": true,
                    "/studies/{studyDbId}/observationvariables": true,
                    "/studies/{studyDbId}/table": true,
                    "/studyTypes": true,
                    "/studytypes": true
                }
            },
            "Observations": {
                "calls": {
                    "/observationLevels": true,
                    "/observationlevels": true,
                    "/observationunits": true,
                    "/phenotypes": true,
                    "/search/observationtables": true,
                    "/search/observationtables/{searchResultsDbId}": true,
                    "/search/observationunits": true,
                    "/search/observationunits/{searchResultsDbId}": true,
                    "/studies/{studyDbId}/observations": true,
                    "/studies/{studyDbId}/observationunits": true,
                    "/studies/{studyDbId}/observationunits/zip": true,
                    "/studies/{studyDbId}/table": true
                }
            },
            "Observation Variables": {
                "calls": {
                    "/methods": true,
                    "/methods/{methodDbId}": true,
                    "/ontologies": true,
                    "/scales": true,
                    "/scales/{scaleDbId}": true,
                    "/search/variables": true,
                    "/search/variables/{searchResultsDbId}": true,
                    "/studies/{studyDbId}/observationVariables": true,
                    "/studies/{studyDbId}/observationvariables": true,
                    "/traits": true,
                    "/traits/{traitDbId}": true,
                    "/variables": true,
                    "/variables-search": true,
                    "/variables/datatypes": true,
                    "/variables/{observationVariableDbId}": true
                }
            },
            "Phenotypes": {
                "calls": {
                    "/phenotypes": true,
                    "/phenotypes-search": true,
                    "/phenotypes-search/csv": true,
                    "/phenotypes-search/table": true,
                    "/phenotypes-search/tsv": true
                }
            },
            "Germplasm": {
                "calls": {
                    "/breedingmethods": true,
                    "/breedingmethods/{breedingMethodDbId}": true,
                    "/germplasm": true,
                    "/germplasm-search": true,
                    "/germplasm/{germplasmDbId}": true,
                    "/germplasm/{germplasmDbId}/attributes": true,
                    "/germplasm/{germplasmDbId}/markerprofiles": true,
                    "/germplasm/{germplasmDbId}/mcpd": true,
                    "/germplasm/{germplasmDbId}/pedigree": true,
                    "/germplasm/{germplasmDbId}/progeny": true,
                    "/search/germplasm": true,
                    "/search/germplasm/{searchResultsDbId}": true,
                    "/studies/{studyDbId}/germplasm": true
                }
            },
            "Germplasm Attributes": {
                "calls": {
                    "/attributes": true,
                    "/attributes/categories": true,
                    "/germplasm/{germplasmDbId}/attributes": true
                }
            },
            "Markers": {
                "calls": {
                    "/markers": true,
                    "/markers-search": true,
                    "/markers/{markerDbId}": true,
                    "/search/markers": true,
                    "/search/markers/{searchResultsDbId}": true
                }
            },
            "Marker Profiles": {
                "calls": {
                    "/allelematrices": true,
                    "/allelematrices-search": true,
                    "/allelematrix-search": true,
                    "/markerprofiles": true,
                    "/markerprofiles/{markerProfileDbId}": true
                }
            },
            "Genome Maps": {
                "calls": {
                    "/maps": true,
                    "/maps/{mapDbId}": true,
                    "/maps/{mapDbId}/positions": true,
                    "/maps/{mapDbId}/positions/{linkageGroupName}": true
                }
            },
            "Samples": {
                "calls": {
                    "/samples": true,
                    "/samples-search": true,
                    "/samples/{sampleDbId}": true,
                    "/search/samples": true,
                    "/search/samples/{searchResultsDbId}": true
                }
            },
            "Vendor": {
                "calls": {
                    "/vendor/orders": true,
                    "/vendor/orders/{orderId}/plates": true,
                    "/vendor/orders/{orderId}/results": true,
                    "/vendor/orders/{orderId}/status": true,
                    "/vendor/plates": true,
                    "/vendor/plates/{submissionId}": true,
                    "/vendor/specifications": true
                }
            },
            "Lists": {
                "calls": {
                    "/lists": true,
                    "/lists/{listDbId}": true,
                    "/lists/{listDbId}/items": true
                }
            },
            "Images": {
                "calls": {
                    "/images": true,
                    "/images/{imageDbId}": true,
                    "/images/{imageDbId}/imagecontent": true,
                    "/search/images": true,
                    "/search/images/{searchResultsDbId}": true
                }
            },
            "People": {
                "calls": {
                    "/people": true,
                    "/people/{personDbId}": true
                }
            },
            "Search Services": {
                "calls": {
                    "/germplasm-search": true,
                    "/phenotypes-search": true,
                    "/phenotypes-search/csv": true,
                    "/phenotypes-search/table": true,
                    "/phenotypes-search/tsv": true,
                    "/programs-search": true,
                    "/samples-search": true,
                    "/search/germplasm": true,
                    "/search/germplasm/{searchResultsDbId}": true,
                    "/search/images": true,
                    "/search/images/{searchResultsDbId}": true,
                    "/search/markers": true,
                    "/search/markers/{searchResultsDbId}": true,
                    "/search/observationtables": true,
                    "/search/observationtables/{searchResultsDbId}": true,
                    "/search/observationunits": true,
                    "/search/observationunits/{searchResultsDbId}": true,
                    "/search/programs": true,
                    "/search/programs/{searchResultsDbId}": true,
                    "/search/samples": true,
                    "/search/samples/{searchResultsDbId}": true,
                    "/search/studies": true,
                    "/search/studies/{searchResultsDbId}": true,
                    "/search/variables": true,
                    "/search/variables/{searchResultsDbId}": true,
                    "/studies-search": true
                }
            },
            "Authentication": {
                "calls": {
                    "/login": true,
                    "/logout": true
                }
            },
            "Deprecated": {
                "calls": {
                    "/allelematrix-search": true,
                    "/crops": true,
                    "/login": true,
                    "/logout": true,
                    "/observationLevels": true,
                    "/studies/{studyDbId}/observationVariables": true,
                    "/studies/{studyDbId}/observationunits": true,
                    "/studyTypes": true
                }
            },
            "1": {
                "data_types": {
                    "alleleMatrixDetails": true,
                    "alleleMatrixValues": true,
                    "germplasmAttributeDef": true,
                    "germplasmAttributeCategory": true,
                    "breedingMethod": true,
                    "WSMIMEDataTypes": true,
                    "call": true,
                    "commonCropNamesResponse_result": true,
                    "cropsResponse_result": true,
                    "germplasm": true,
                    "germplasmAttribute": true,
                    "germplasmMarkerprofilesList": true,
                    "germplasmMCPD": true,
                    "pedigree": true,
                    "progeny": true,
                    "image": true,
                    "listTypes": true,
                    "listSummary": true,
                    "listDetails": true,
                    "location": true,
                    "genomeMap": true,
                    "linkageGroup": true,
                    "markerSummaryMap": true,
                    "markerSummaryLinkageGroup": true,
                    "markerProfileDescription": true,
                    "markerProfile": true,
                    "marker": true,
                    "method": true,
                    "observationLevelsResponse_result": true,
                    "observationLevelsResponse_1_result": true,
                    "observationUnitPhenotype": true,
                    "ontology": true,
                    "person": true,
                    "newObservationDbIds": true,
                    "observationUnitsTableResponse": true,
                    "program": true,
                    "sample": true,
                    "newSampleDbId_result": true,
                    "scale": true,
                    "successfulSearchResponse_result": true,
                    "observationUnit": true,
                    "studySummary": true,
                    "observationVariable": true,
                    "season": true,
                    "study": true,
                    "germplasmSummary": true,
                    "observationUnitPosition": true,
                    "observation": true,
                    "newObservationUnitDbIds": true,
                    "observationsTable": true,
                    "studyType": true,
                    "traitSummary": true,
                    "trait": true,
                    "trialSummary": true,
                    "trial": true,
                    "dataTypesResponseResult": true,
                    "vendorOrder": true,
                    "vendorOrderResponse_result": true,
                    "vendorPlate": true,
                    "vendorResultFile": true,
                    "vendorOrderStatusResponse_result": true,
                    "vendorPlatesSubmissionResponse": true,
                    "vendorPlateGetResponse": true,
                    "vendorSpecification": true
                }
            }
        }
    },
    "calls": {
        "/allelematrices": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Get the Allele Matrix summaries",
                    "description": "This resource is used for reading and writing genomic matrices\n\nGET provides a list of available matrices, optionally filtered by study;",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "restricts the list of matrices to a specific study.",
                            "required": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/alleleMatrixDetailsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 1,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "description": "example matrix",
                                                    "lastUpdated": "2018-05-03T11:03:56-04:00",
                                                    "matrixDbId": "mat1",
                                                    "matrixName": "Example Matrix",
                                                    "name": "Example Matrix",
                                                    "studyDbId": "1001"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "alleleMatrixDetails": true
            }
        },
        "/allelematrices-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Get the a Matrix of Allele data",
                    "description": "See Search Services for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nSee Search Services for additional implementation details.\n\nUse GET when parameter size is less than 2K bytes.\n\nThis method may support asynchronous processing.",
                    "parameters": [
                        {
                            "name": "markerprofileDbId",
                            "in": "query",
                            "description": "DEPRECATED in v1.3 - see \"markerProfileDbId\" (camel case)",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "markerProfileDbId",
                            "in": "query",
                            "description": "The marker Profile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "markerDbId",
                            "in": "query",
                            "description": "ids of the markers. if none are specified, results are returned for all markers in the database. Not Required if 'markerProfileDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "matrixDbId",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "format for the datafile to be downloaded. tsv and csv currently supported; flapjack may be supported.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "expandHomozygotes",
                            "in": "query",
                            "description": "Should homozygotes NOT be collapsed into a single occurrence?",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "unknownString",
                            "in": "query",
                            "description": "The string to use as a representation for missing data or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sepPhased",
                            "in": "query",
                            "description": "The string to use as a separator for phased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sepUnphased",
                            "in": "query",
                            "description": "The string to use as a separator for unphased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/alleleMatrixValuesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 280,
                                                "totalPages": 140
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                [
                                                    "mr01",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr02",
                                                    "P1",
                                                    "C"
                                                ]
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Submit a request to get a Matrix of Allele data",
                    "description": "See Search Services for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nUse POST when parameter size is greater than 2K bytes.\n\n- If no format is specified, this call returns the data in JSON form.\n\n- If a format (other than JSON) is specified and the server supports this format, it will return the link to the exported data file in the \"datafiles\" field of the \"metadata\".\n\n- If more than one format is requested at a time, the server will throw a \"501 Not Implemented\" error.\n\nThe format of the tsv response can be found on GitHub (https://github.com/plantbreeding/Documentation/wiki/BrAPI-TSV-Expected-Formats)'",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "description": "The marker profile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alleleMatrixSearchRequest"
                                }
                            }
                        },
                        "required": true
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/alleleMatrixValuesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "asynchStatus": {
                                                "asynchId": "",
                                                "endTime": "2018-12-05",
                                                "percentComplete": 100,
                                                "startTime": "2018-12-05",
                                                "status": "FINISHED"
                                            },
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 280,
                                                "totalPages": 140
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                [
                                                    "mr01",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr02",
                                                    "P1",
                                                    "C"
                                                ]
                                            ]
                                        }
                                    }
                                },
                                "application/tsv": {
                                    "example": {
                                        "metadata": {
                                            "datafiles": [
                                                "https://my-fancy-server/files/allelematrix-1234.tsv"
                                            ],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": []
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "alleleMatrixValues": true
            }
        },
        "/allelematrix-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles",
                        "Deprecated"
                    ],
                    "summary": "Scores through GET",
                    "description": "Status: ACCEPTED.\n\nImplemented by: Germinate (POST only), Cassavabase\n\nUsed by: Flapjack (POST only)\n\nSee Search Services for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nSee Search Services for additional implementation details.\n\n\n\nThis uses a more efficient data structure and pagination for large number of markers. \n\n\n\nUse GET when parameter size is less than 2K bytes.\nThis method may support asynchronous processing.",
                    "parameters": [
                        {
                            "name": "markerprofileDbId",
                            "in": "query",
                            "description": "The marker profile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "markerDbId",
                            "in": "query",
                            "description": "ids of the markers. if none are specified, results are returned for all markers in the database. Not Required if 'markerprofileDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "matrixDbId",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "format for the datafile to be downloaded. tsv and csv currently supported; flapjack may be supported.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "expandHomozygotes",
                            "in": "query",
                            "description": "Should homozygotes NOT be collapsed into a single occurrence?",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "unknownString",
                            "in": "query",
                            "description": "The string to use as a representation for missing data or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sepPhased",
                            "in": "query",
                            "description": "The string to use as a separator for phased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sepUnphased",
                            "in": "query",
                            "description": "The string to use as a separator for unphased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/alleleMatrixValuesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "asynchStatus": {
                                                "asynchId": "",
                                                "endTime": "2018-12-05",
                                                "percentComplete": 100,
                                                "startTime": "2018-12-05",
                                                "status": "FINISHED"
                                            },
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 280,
                                                "totalPages": 140
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                [
                                                    "mr01",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr02",
                                                    "P1",
                                                    "C"
                                                ]
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                },
                "post": {
                    "tags": [
                        "Marker Profiles",
                        "Deprecated"
                    ],
                    "summary": "Scores through POST",
                    "description": "Status: ACCEPTED.\n\nImplemented by: Germinate (POST only), Cassavabase\n\nUsed by: Flapjack (POST only)\n\nSee Search Services for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nUse POST when parameter size is greater than 2K bytes.\n\n- If no format is specified, this call returns the data in JSON form.\n\n- If a format (other than JSON) is specified and the server supports this format, it will return the link to the exported data file in the \"datafiles\" field of the \"metadata\".\n\n- If more than one format is requested at a time, the server will throw a \"501 Not Implemented\" error.\n\nThe format of the tsv response can be found on GitHub (https://github.com/plantbreeding/Documentation/wiki/BrAPI-TSV-Expected-Formats)",
                    "requestBody": {
                        "description": "The markerprofile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alleleMatrixSearchRequest"
                                }
                            }
                        },
                        "required": true
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/alleleMatrixValuesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 1000,
                                                "totalCount": 280,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                [
                                                    "mr01",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr02",
                                                    "P1",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr04",
                                                    "P1",
                                                    "G"
                                                ],
                                                [
                                                    "mr05",
                                                    "P1",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr07",
                                                    "P1",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "P1",
                                                    "G"
                                                ],
                                                [
                                                    "mr09",
                                                    "P1",
                                                    "T"
                                                ],
                                                [
                                                    "mr10",
                                                    "P1",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "P1",
                                                    "G"
                                                ],
                                                [
                                                    "mr12",
                                                    "P1",
                                                    "C"
                                                ],
                                                [
                                                    "mr13",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "P1",
                                                    "G"
                                                ],
                                                [
                                                    "mr15",
                                                    "P1",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "P1",
                                                    "C"
                                                ],
                                                [
                                                    "mr17",
                                                    "P1",
                                                    "A"
                                                ],
                                                [
                                                    "mr18",
                                                    "P1",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "P1",
                                                    "T"
                                                ],
                                                [
                                                    "mr20",
                                                    "P1",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "P2",
                                                    "C"
                                                ],
                                                [
                                                    "mr02",
                                                    "P2",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "P2",
                                                    "C"
                                                ],
                                                [
                                                    "mr04",
                                                    "P2",
                                                    "C"
                                                ],
                                                [
                                                    "mr05",
                                                    "P2",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "P2",
                                                    "G"
                                                ],
                                                [
                                                    "mr07",
                                                    "P2",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "P2",
                                                    "A"
                                                ],
                                                [
                                                    "mr09",
                                                    "P2",
                                                    "A"
                                                ],
                                                [
                                                    "mr10",
                                                    "P2",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "P2",
                                                    "C"
                                                ],
                                                [
                                                    "mr12",
                                                    "P2",
                                                    "A"
                                                ],
                                                [
                                                    "mr13",
                                                    "P2",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "P2",
                                                    "T"
                                                ],
                                                [
                                                    "mr15",
                                                    "P2",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "P2",
                                                    "T"
                                                ],
                                                [
                                                    "mr17",
                                                    "P2",
                                                    "G"
                                                ],
                                                [
                                                    "mr18",
                                                    "P2",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "P2",
                                                    "A"
                                                ],
                                                [
                                                    "mr20",
                                                    "P2",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-02",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-02",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-02",
                                                    "-"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-02",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-02",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-02",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-02",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-02",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-02",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-02",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-03",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-03",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-03",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-03",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-03",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-03",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-03",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-03",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-03",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-03",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-03",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-03",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-03",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-03",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-03",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-03",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-03",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-03",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-03",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-03",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-04",
                                                    "A"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-04",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-04",
                                                    "A"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-04",
                                                    "G"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-04",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-04",
                                                    "A"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-04",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-04",
                                                    "G"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-04",
                                                    "T"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-04",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-04",
                                                    "G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-04",
                                                    "C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-04",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-04",
                                                    "G"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-04",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-04",
                                                    "C"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-04",
                                                    "A"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-04",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-04",
                                                    "T"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-04",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-05",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-05",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-05",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-05",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-05",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-05",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-05",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-05",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-05",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-05",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-05",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-05",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-05",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-05",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-05",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-05",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-05",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-05",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-05",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-05",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-06",
                                                    "C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-06",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-06",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-06",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-06",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-06",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-06",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-06",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-06",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-06",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-06",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-06",
                                                    "-"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-06",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-06",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-06",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-06",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-06",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-06",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-06",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-06",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-07",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-07",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-07",
                                                    "A"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-07",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-07",
                                                    "G"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-07",
                                                    "A"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-07",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-07",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-07",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-07",
                                                    "G"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-07",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-07",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-07",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-07",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-07",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-07",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-07",
                                                    "A"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-07",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-07",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-07",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-08",
                                                    "-"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-08",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-08",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-09",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-09",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-09",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-09",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-09",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-09",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-09",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-09",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-09",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-09",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-09",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-09",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-09",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-09",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-09",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-09",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-09",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-09",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-09",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-09",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-10",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-10",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-10",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-10",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-10",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-10",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-10",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-10",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-10",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-10",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-10",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-10",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-10",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-10",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-10",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-10",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-10",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-10",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-10",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-10",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-11",
                                                    "A"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-11",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-11",
                                                    "A"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-11",
                                                    "G"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-11",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-11",
                                                    "A"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-11",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-11",
                                                    "G"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-11",
                                                    "T"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-11",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-11",
                                                    "G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-11",
                                                    "C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-11",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-11",
                                                    "G"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-11",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-11",
                                                    "C"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-11",
                                                    "A"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-11",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-11",
                                                    "T"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-11",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-12",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-12",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-12",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-12",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-12",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-12",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-12",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-12",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-12",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-12",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-12",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-12",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-12",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-12",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-12",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-12",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-12",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-12",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-12",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-12",
                                                    "T"
                                                ],
                                                [
                                                    "mr01",
                                                    "F1-13",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr02",
                                                    "F1-13",
                                                    "C"
                                                ],
                                                [
                                                    "mr03",
                                                    "F1-13",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr04",
                                                    "F1-13",
                                                    "G/C"
                                                ],
                                                [
                                                    "mr05",
                                                    "F1-13",
                                                    "C"
                                                ],
                                                [
                                                    "mr06",
                                                    "F1-13",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr07",
                                                    "F1-13",
                                                    "G"
                                                ],
                                                [
                                                    "mr08",
                                                    "F1-13",
                                                    "G/A"
                                                ],
                                                [
                                                    "mr09",
                                                    "F1-13",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr10",
                                                    "F1-13",
                                                    "C"
                                                ],
                                                [
                                                    "mr11",
                                                    "F1-13",
                                                    "C/G"
                                                ],
                                                [
                                                    "mr12",
                                                    "F1-13",
                                                    "A/C"
                                                ],
                                                [
                                                    "mr13",
                                                    "F1-13",
                                                    "A"
                                                ],
                                                [
                                                    "mr14",
                                                    "F1-13",
                                                    "G/T"
                                                ],
                                                [
                                                    "mr15",
                                                    "F1-13",
                                                    "T"
                                                ],
                                                [
                                                    "mr16",
                                                    "F1-13",
                                                    "C/T"
                                                ],
                                                [
                                                    "mr17",
                                                    "F1-13",
                                                    "A/G"
                                                ],
                                                [
                                                    "mr18",
                                                    "F1-13",
                                                    "G"
                                                ],
                                                [
                                                    "mr19",
                                                    "F1-13",
                                                    "T/A"
                                                ],
                                                [
                                                    "mr20",
                                                    "F1-13",
                                                    "T"
                                                ]
                                            ]
                                        }
                                    }
                                },
                                "application/tsv": {
                                    "examples": {
                                        "response": {
                                            "value": {
                                                "metadata": {
                                                    "datafiles": [
                                                        "https://my-fancy-server/files/allelematrix-1234.tsv"
                                                    ],
                                                    "pagination": {
                                                        "currentPage": 0,
                                                        "pageSize": 0,
                                                        "totalCount": 0,
                                                        "totalPages": 0
                                                    },
                                                    "status": []
                                                },
                                                "result": {
                                                    "data": []
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "alleleMatrixValues": true
            }
        },
        "/attributes": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "summary": "Get the Germplasm Attributes",
                    "description": "List available attributes.",
                    "parameters": [
                        {
                            "name": "attributeCategoryDbId",
                            "in": "query",
                            "description": "Unique identifier for the general category for the attribute. very similar to Trait class.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmAttributeDefsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 5,
                                                "totalPages": 3
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "attributeCategoryDbId": "2",
                                                    "attributeDbId": "ATT01",
                                                    "attributeName": "Rht-B1b",
                                                    "code": "RHT",
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "datatype": "Categorical",
                                                    "defaultValue": "10",
                                                    "description": "Allele of marker 11_4769",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Numeric",
                                                        "description": "Standard rolled measuring tape",
                                                        "formula": "a^2 + b^2 = c^2",
                                                        "methodDbId": "m1",
                                                        "methodName": "Tape Measure",
                                                        "name": "Tape Measure",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m1",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/m1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Rht-B1b",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Numerical",
                                                        "decimalPlaces": 1,
                                                        "name": "Centimeter",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s1",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/s1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s1",
                                                        "scaleName": "Centimeter",
                                                        "validValues": {
                                                            "categories": [],
                                                            "max": 99999,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "plant height",
                                                        "class": "Numeric",
                                                        "description": "plant height",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "H",
                                                        "name": "Plant Height",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t1",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/t1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t1",
                                                        "traitName": "Plant Height",
                                                        "xref": "xref"
                                                    },
                                                    "uri": "http://www.brapi.org/ontology/MO_123:1000001",
                                                    "values": "Present",
                                                    "xref": "MO_123:100002"
                                                },
                                                {
                                                    "attributeCategoryDbId": "3",
                                                    "attributeDbId": "ATT02",
                                                    "attributeName": "Weevil Resistance",
                                                    "code": "WEV",
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "datatype": "Categorical",
                                                    "defaultValue": "10",
                                                    "description": "Resistance allele",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Categorical",
                                                        "description": "Comparing sample color to standard color palette",
                                                        "formula": "NA",
                                                        "methodDbId": "m3",
                                                        "methodName": "Standard Color Palette",
                                                        "name": "Standard Color Palette",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m3",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/m3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Weevil Resistance",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Nominal",
                                                        "decimalPlaces": 0,
                                                        "name": "Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s3",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/s3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s3",
                                                        "scaleName": "Color",
                                                        "validValues": {
                                                            "categories": [
                                                                "dark red",
                                                                "red",
                                                                "dark blue",
                                                                "blue",
                                                                "black"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "leaf color",
                                                        "class": "Categorical",
                                                        "description": "color of leaf sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "LC",
                                                        "name": "Leaf Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t3",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/t3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t3",
                                                        "traitName": "Leaf Color",
                                                        "xref": "xref"
                                                    },
                                                    "uri": "http://www.brapi.org/ontology/MO_123:1000002",
                                                    "values": "Absent",
                                                    "xref": "MO_123:100003"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasmAttributeDef": true
            }
        },
        "/attributes/categories": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "summary": "Get the Categories of Germplasm Attributes",
                    "description": "List all available attribute categories.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmAttributeCategoriesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 0,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "attributeCategoryDbId": "1",
                                                    "attributeCategoryName": "Morphological",
                                                    "name": "Morphological"
                                                },
                                                {
                                                    "attributeCategoryDbId": "2",
                                                    "attributeCategoryName": "Agronomic",
                                                    "name": "Agronomic"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasmAttributeCategory": true
            }
        },
        "/breedingmethods": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the Breeding Methods",
                    "description": "Get the list of germplasm breeding methods available in a system.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/breedingMethodsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "abbreviation": "MBCR",
                                                    "breedingMethodDbId": "bm1",
                                                    "breedingMethodName": "Male Backcross",
                                                    "description": "Backcross to recover a specific gene.",
                                                    "name": "Male Backcross"
                                                },
                                                {
                                                    "abbreviation": "FBCR",
                                                    "breedingMethodDbId": "bm2",
                                                    "breedingMethodName": "Female Backcross",
                                                    "description": "Backcross to recover a specific gene.",
                                                    "name": "Female Backcross"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "breedingMethod": true
            }
        },
        "/breedingmethods/{breedingMethodDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the details of a specific Breeding Method",
                    "description": "Get the details of a specific Breeding Method used to produce Germplasm",
                    "parameters": [
                        {
                            "name": "breedingMethodDbId",
                            "in": "path",
                            "description": "Internal database identifier for a breeding method",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/breedingMethodResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "abbreviation": "MBCR",
                                            "breedingMethodDbId": "bm1",
                                            "breedingMethodName": "Male Backcross",
                                            "description": "Backcross to recover a specific gene.",
                                            "name": "Male Backcross"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "breedingMethod": true
            }
        },
        "/calls": {
            "definition": {
                "get": {
                    "tags": [
                        "Calls"
                    ],
                    "summary": "Get the list of implemented Calls",
                    "description": " Implementation Notes\nHaving a consistent structure for the path string of each call is very important for teams to be able to connect and find errors. Read more on Github.\nHere are the rules for the path of each call that should be returned\n\n\n\nEvery word in the call path should match the documentation exactly, both in spelling and capitalization. Note that path strings are all lower case, but path parameters are camel case.\n\nEach path should start relative to \"/\" and therefore should not include \"/\"\n\nNo leading or trailing slashes (\"/\") \n\nPath parameters are wrapped in curly braces (\"{}\"). The name of the path parameter should be spelled exactly as it is specified in the documentation.\n\n\n\n\nExamples GOOD    \"call\": \"germplasm/{germplasmDbId}/markerprofiles\" BAD    \"call\": \"germplasm/{id}/markerprofiles\" BAD    \"call\": \"germplasm/{germplasmDbId}/markerProfiles\" BAD    \"call\": \"germplasm/{germplasmdbid}/markerprofiles\" BAD    \"call\": \"brapi/v1/germplasm/{germplasmDbId}/markerprofiles\" BAD    \"call\": \"/germplasm/{germplasmDbId}/markerprofiles/\" BAD    \"call\": \"germplasm/<germplasmDbId>/markerprofiles\"\n\n\n\ntest-server.brapi.org/brapi/v1/calls",
                    "parameters": [
                        {
                            "name": "datatype",
                            "in": "query",
                            "description": "DEPRECATED in v1.3 - see dataType (camel case)",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "dataType",
                            "in": "query",
                            "description": "The data format supported by the call. Example: `json`",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "$ref": "#/components/schemas/WSMIMEDataTypes"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/callsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 103,
                                                "totalPages": 52
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "call": "allelematrices",
                                                    "dataTypes": [
                                                        "application/json"
                                                    ],
                                                    "datatypes": [
                                                        "application/json"
                                                    ],
                                                    "methods": [
                                                        "GET"
                                                    ],
                                                    "versions": [
                                                        "1.0",
                                                        "1.1",
                                                        "1.2",
                                                        "1.3"
                                                    ]
                                                },
                                                {
                                                    "call": "allelematrices-search",
                                                    "dataTypes": [
                                                        "application/json"
                                                    ],
                                                    "datatypes": [
                                                        "application/json"
                                                    ],
                                                    "methods": [
                                                        "GET",
                                                        "POST"
                                                    ],
                                                    "versions": [
                                                        "1.2",
                                                        "1.3"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "WSMIMEDataTypes": true,
                "call": true
            }
        },
        "/commoncropnames": {
            "definition": {
                "get": {
                    "tags": [
                        "Crops"
                    ],
                    "summary": "Get the Common Crop Names",
                    "description": "List the common crop names for the crops available in a database server. \n\nThis call is **required** for multi-crop systems where data from multiple crops may be stored in the same database server. A distinct database server is defined by everything in the URL before \"/brapi/v1\", including host name and base path.  \n\nThis call is recommended for single crop systems to be compatible with multi-crop clients. For a single crop system the response should contain an array with exactly 1 element. \n\nThe common crop name can be used as a search parameter for Programs, Studies, and Germplasm.\n\n\ntest-server.brapi.org/brapi/v1/commonCropNames",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/commonCropNamesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "Tomatillo",
                                                "Paw Paw"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "commonCropNamesResponse_result": true
            }
        },
        "/crops": {
            "definition": {
                "get": {
                    "tags": [
                        "Crops",
                        "Deprecated"
                    ],
                    "summary": "List supported crops",
                    "description": "For multi crop systems this is a useful call to list all the supported crops.\n\n\ntest-server.brapi.org/brapi/v1/crops",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/cropsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 2,
                                                "pageSize": 1000,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "cropsResponse_result": true
            }
        },
        "/germplasm": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the Germplasm",
                    "description": "Addresses these needs\n\n- General germplasm search mechanism that accepts POST for complex queries \n\n- Possibility to search germplasm by more parameters than those allowed by the existing germplasm search \n\n- Possibility to get MCPD details by PUID rather than dbId",
                    "parameters": [
                        {
                            "name": "germplasmPUI",
                            "in": "query",
                            "description": "Permanent unique identifier (DOI, URI, etc.)",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "Internal database identifier",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmName",
                            "in": "query",
                            "description": "Name of the germplasm",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "commonCropName",
                            "in": "query",
                            "description": "The common crop name related to this germplasm",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "accessionNumber": "A000003",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000003",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000003",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "3",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name003",
                                                    "germplasmPUI": "http://pui.per/accession/A000003",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000002",
                                                    "seedSource": "A000001/A000002",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 1"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                },
                                                {
                                                    "accessionNumber": "A000004",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000004",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000004",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "4",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name004",
                                                    "germplasmPUI": "http://pui.per/accession/A000004",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000003",
                                                    "seedSource": "open pollination",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 4"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasm": true
            }
        },
        "/germplasm-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm",
                        "Search Services"
                    ],
                    "summary": "Germplasm search through GET",
                    "description": "DEPRECATED in V1.3 - see GET /germplasm",
                    "parameters": [
                        {
                            "name": "germplasmPUI",
                            "in": "query",
                            "description": "Permanent unique identifier (DOI, URI, etc.)",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "Internal database identifier",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmName",
                            "in": "query",
                            "description": "Name of the germplasm",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "commonCropName",
                            "in": "query",
                            "description": "The common crop name related to this germplasm",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "accessionNumber": "A000003",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000003",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000003",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "3",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name003",
                                                    "germplasmPUI": "http://pui.per/accession/A000003",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000002",
                                                    "seedSource": "A000001/A000002",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 1"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                },
                                                {
                                                    "accessionNumber": "A000004",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000004",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000004",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "4",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name004",
                                                    "germplasmPUI": "http://pui.per/accession/A000004",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000003",
                                                    "seedSource": "open pollination",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 4"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                },
                "post": {
                    "tags": [
                        "Germplasm",
                        "Search Services"
                    ],
                    "summary": "Germplasm search through POST",
                    "description": "DEPRECATED in V1.3 - see POST /search/germplasm",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/germplasmSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "accessionNumber": "A000003",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000003",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000003",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "3",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name003",
                                                    "germplasmPUI": "http://pui.per/accession/A000003",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000002",
                                                    "seedSource": "A000001/A000002",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 1"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                },
                                                {
                                                    "accessionNumber": "A000004",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000004",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000004",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "4",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name004",
                                                    "germplasmPUI": "http://pui.per/accession/A000004",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000003",
                                                    "seedSource": "open pollination",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 4"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "germplasm": true
            }
        },
        "/germplasm/{germplasmDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the details of a specific Germplasm",
                    "description": "Germplasm Details by germplasmDbId was merged with Germplasm Multi Crop Passport Data. The MCPD fields are optional and marked with the prefix [MCPD].",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "The internal id of the germplasm",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmResponse_2"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "accessionNumber": "A000003",
                                            "acquisitionDate": "2001-01-01",
                                            "biologicalStatusOfAccessionCode": 500,
                                            "breedingMethodDbId": "bm1",
                                            "commonCropName": "G000003",
                                            "countryOfOriginCode": "COUNTRY1",
                                            "defaultDisplayName": "G000003",
                                            "documentationURL": "https://brapi.org",
                                            "donors": [],
                                            "genus": "Fructus",
                                            "germplasmDbId": "3",
                                            "germplasmGenus": "Fructus",
                                            "germplasmName": "Name003",
                                            "germplasmPUI": "http://pui.per/accession/A000003",
                                            "germplasmSpecies": "novus",
                                            "instituteCode": "PER001",
                                            "instituteName": "INST1",
                                            "pedigree": "A000001/A000002",
                                            "seedSource": "A000001/A000002",
                                            "species": "novus",
                                            "speciesAuthority": "L",
                                            "subtaxa": "subtaxa",
                                            "subtaxaAuthority": "N",
                                            "synonyms": [
                                                "variety 1"
                                            ],
                                            "taxonIds": [
                                                {
                                                    "sourceName": "ncbiTaxon",
                                                    "taxonId": "2340"
                                                },
                                                {
                                                    "sourceName": "ciradTaxon",
                                                    "taxonId": "E312"
                                                }
                                            ],
                                            "typeOfGermplasmStorageCode": []
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasm": true
            }
        },
        "/germplasm/{germplasmDbId}/attributes": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm"
                    ],
                    "summary": "Get the Germplasm Attributes associated with a specific Germplasm",
                    "description": "Values for all attributes by default.",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "The germplasm characterized",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "attributeDbIds",
                            "in": "query",
                            "description": "Restrict the response to only the listed attributeDbIds.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "attributeList",
                            "in": "query",
                            "description": "**Deprecated** Use \"attributeDbIds\" instead",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmAttributeListResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 5,
                                                "totalPages": 3
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "attributeCode": "RHT",
                                                    "attributeDbId": "ATT01",
                                                    "attributeName": "Rht-B1b",
                                                    "determinedDate": "2017-03-17",
                                                    "value": "Heterozygous"
                                                },
                                                {
                                                    "attributeCode": "WEV",
                                                    "attributeDbId": "ATT02",
                                                    "attributeName": "Weevil Resistance",
                                                    "determinedDate": "2017-03-17",
                                                    "value": "Present"
                                                }
                                            ],
                                            "germplasmDbId": "3"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasmAttribute": true
            }
        },
        "/germplasm/{germplasmDbId}/markerprofiles": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the Marker Profiles associated with a specific Germplasm",
                    "description": "Retrieve the markerProfileDbIds for a given Germplasm ID",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "the internal id of the germplasm",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmMarkerprofilesListResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "germplasmDbId": "3",
                                            "markerProfileDbIds": [
                                                "G3-P2"
                                            ],
                                            "markerprofileDbIds": [
                                                "G3-P2"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasmMarkerprofilesList": true
            }
        },
        "/germplasm/{germplasmDbId}/mcpd": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the details of a specifc Germplasm in MCPD format",
                    "description": "Get all MCPD details of a germplasm\n\n<a target=\"_blank\" href=\"https://www.bioversityinternational.org/fileadmin/user_upload/online_library/publications/pdfs/FAOBIOVERSITY_MULTI-CROP_PASSPORT_DESCRIPTORS_V.2.1_2015_2020.pdf\"> MCPD v2.1 spec can be found here </a>\n\nImplementation Notes\n\n- When the MCPD spec identifies a field which can have multiple values returned, the JSON response should be an array instead of a semi-colon seperated string.",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "the internal id of the germplasm",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmMCPDResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "accessionNames": [
                                                "Name003"
                                            ],
                                            "accessionNumber": "A000003",
                                            "acquisitionDate": "2001-01-01",
                                            "acquisitionSourceCode": "11",
                                            "alternateIDs": [
                                                "3",
                                                "http://pui.per/accession/A000003",
                                                "A000003"
                                            ],
                                            "ancestralData": "A000001/A000002",
                                            "biologicalStatusOfAccessionCode": "500",
                                            "breedingInstitutes": [
                                                {
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1"
                                                }
                                            ],
                                            "collectingInfo": {
                                                "collectingDate": "2001-01-01",
                                                "collectingInstitutes": [
                                                    {
                                                        "instituteAddress": "INST1",
                                                        "instituteCode": "PER001",
                                                        "instituteName": "INST1"
                                                    }
                                                ],
                                                "collectingMissionIdentifier": "3",
                                                "collectingNumber": "A000003",
                                                "collectingSite": {
                                                    "coordinateUncertainty": "20m",
                                                    "elevation": "20m",
                                                    "georeferencingMethod": "WGS84",
                                                    "latitudeDecimal": "+42.445295",
                                                    "latitudeDegrees": "42 26 43.1 N",
                                                    "locationDescription": "INST1",
                                                    "longitudeDecimal": "-076.471934",
                                                    "longitudeDegrees": "76 28 19.0 W",
                                                    "spatialReferenceSystem": "WGS84"
                                                }
                                            },
                                            "commonCropName": "G000003",
                                            "countryOfOrigin": "COUNTRY1",
                                            "donorInfo": {
                                                "donorAccessionNumber": "A000003",
                                                "donorInstitute": {
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1"
                                                }
                                            },
                                            "genus": "Fructus",
                                            "germplasmDbId": "3",
                                            "germplasmPUI": "http://pui.per/accession/A000003",
                                            "instituteCode": "PER001",
                                            "mlsStatus": "0",
                                            "remarks": "G000003",
                                            "safetyDuplicateInstitues": [
                                                {
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1"
                                                }
                                            ],
                                            "species": "novus",
                                            "speciesAuthority": "L",
                                            "storageTypeCodes": [],
                                            "subtaxon": "subtaxa",
                                            "subtaxonAuthority": "N"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "/germplasm/{germplasmDbId}/pedigree": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the pedigree details of a specific Germplasm",
                    "description": "Get the parentage information of a specific Germplasm",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "the internal id of the germplasm",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "notation",
                            "in": "query",
                            "description": "text representation of the pedigree",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "includeSiblings",
                            "in": "query",
                            "description": "include array of siblings in response",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/pedigreeResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "crossingPlan": "OPEN_POLLINATION",
                                            "crossingYear": "2018",
                                            "defaultDisplayName": "G000003",
                                            "familyCode": "Cree_x_Bonanza_2018",
                                            "germplasmDbId": "3",
                                            "parent1DbId": "1",
                                            "parent1Id": "1",
                                            "parent1Name": "G000001",
                                            "parent1Type": "FEMALE",
                                            "parent2DbId": "2",
                                            "parent2Id": "2",
                                            "parent2Name": "G000002",
                                            "parent2Type": "MALE",
                                            "pedigree": "A000001/A000002",
                                            "siblings": []
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "pedigree": true
            }
        },
        "/germplasm/{germplasmDbId}/progeny": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Get the progeny details of a specific Germplasm",
                    "description": "Get the germplasmDbIds for all the Progeny of a particular germplasm.\n\nImplementation Notes\n\n- Regarding the 'parentType' field in the progeny object. Given a germplasm A having a progeny B and C, 'parentType' for progeny B refers to the 'parentType' of A toward B.",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "the internal id of the germplasm",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/progenyResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "defaultDisplayName": "G000002",
                                            "germplasmDbId": "3",
                                            "progeny": [
                                                {
                                                    "defaultDisplayName": "G000004",
                                                    "germplasmDbId": "4",
                                                    "parentType": "MALE"
                                                },
                                                {
                                                    "defaultDisplayName": "G000005",
                                                    "germplasmDbId": "5",
                                                    "parentType": "MALE"
                                                },
                                                {
                                                    "defaultDisplayName": "G000006",
                                                    "germplasmDbId": "6",
                                                    "parentType": "MALE"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "progeny": true
            }
        },
        "/images": {
            "definition": {
                "get": {
                    "tags": [
                        "Images"
                    ],
                    "summary": "Get the image meta data summaries",
                    "description": "Get filtered set of image meta data\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.  ",
                    "parameters": [
                        {
                            "name": "imageDbId",
                            "in": "query",
                            "description": "The unique identifier for a image",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "imageName",
                            "in": "query",
                            "description": "The human readable name of an image",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationUnitDbId",
                            "in": "query",
                            "description": "The unique identifier of the observation unit an image is portraying",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationDbId",
                            "in": "query",
                            "description": "The unique identifier of the observation an image is accosiated with",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "descriptiveOntologyTerm",
                            "in": "query",
                            "description": "A descriptive term associated with an image",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/imagesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "additionalInfo": [],
                                                    "copyright": "Copyright 2018",
                                                    "description": "BrAPI Logo",
                                                    "descriptiveOntologyTerms": [
                                                        "brapi",
                                                        "logo"
                                                    ],
                                                    "imageDbId": "img1",
                                                    "imageFileName": "brapi-logo.svg",
                                                    "imageFileSize": 3676,
                                                    "imageHeight": 56,
                                                    "imageLocation": {
                                                        "geometry": {
                                                            "coordinates": [
                                                                -110.11301,
                                                                50.010082
                                                            ],
                                                            "type": "Point"
                                                        },
                                                        "type": "Feature"
                                                    },
                                                    "imageName": "brapiLogo",
                                                    "imageTimeStamp": "2011-06-14T01:02:03Z",
                                                    "imageURL": "https://brapi.org/assets/images/brapi-logo.svg",
                                                    "imageWidth": 258,
                                                    "mimeType": "image/svg",
                                                    "observationDbIds": [
                                                        "1",
                                                        "2"
                                                    ],
                                                    "observationUnitDbId": "1"
                                                },
                                                {
                                                    "additionalInfo": [],
                                                    "copyright": "Copyright 2018",
                                                    "description": "BrAPI Logo",
                                                    "descriptiveOntologyTerms": [
                                                        "brapi",
                                                        "logo"
                                                    ],
                                                    "imageDbId": "img2",
                                                    "imageFileName": "brapi-logo.svg",
                                                    "imageFileSize": 3676,
                                                    "imageHeight": 56,
                                                    "imageLocation": {
                                                        "geometry": {
                                                            "coordinates": [
                                                                -110.11301,
                                                                50.010082
                                                            ],
                                                            "type": "Point"
                                                        },
                                                        "type": "Feature"
                                                    },
                                                    "imageName": "brapiLogo",
                                                    "imageTimeStamp": "2011-06-14T01:02:03Z",
                                                    "imageURL": "https://brapi.org/assets/images/brapi-logo.svg",
                                                    "imageWidth": 258,
                                                    "mimeType": "image/svg",
                                                    "observationDbIds": [
                                                        "1",
                                                        "2"
                                                    ],
                                                    "observationUnitDbId": "1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Images"
                    ],
                    "summary": "Create a new image meta data object",
                    "description": "Create a new image meta data object\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.\n\n- The `/images` calls support a GeoJSON object structure for describing their location. The BrAPI spec for GeoJSON only supports two of the possible geometries: Points and Polygons.\n\n- With most images, the Point geometry should be used, and it should indicate the longitude and latitude of the camera.\n\n- For top down images (ie from drones, cranes, etc), the Point geometry may be used to indicate the longitude and latitude of the centroid of the image content, and the Polygon geometry may be used to indicate the border of the image content. ",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newImageRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/imageResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "additionalInfo": [],
                                            "copyright": "Copyright 2019",
                                            "description": "BrAPI Logo",
                                            "descriptiveOntologyTerms": [
                                                "brapi",
                                                "logo"
                                            ],
                                            "imageDbId": "ce15937e-093e-4624-8950-00dab3172e4c",
                                            "imageFileName": "brapi-logo.svg",
                                            "imageFileSize": 3676,
                                            "imageHeight": 56,
                                            "imageLocation": {
                                                "geometry": {
                                                    "coordinates": [
                                                        -110.11301,
                                                        50.010082
                                                    ],
                                                    "type": "Point"
                                                },
                                                "type": "Feature"
                                            },
                                            "imageName": "brapiLogo",
                                            "imageTimeStamp": "1969-12-31T01:02:03Z",
                                            "imageURL": "",
                                            "imageWidth": 258,
                                            "mimeType": "image/svg",
                                            "observationDbIds": [
                                                "1",
                                                "2"
                                            ],
                                            "observationUnitDbId": "11"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "image": true
            }
        },
        "/images/{imageDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Images"
                    ],
                    "summary": "Get the an image meta data summary",
                    "description": "Get one image meta data object\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's. ",
                    "parameters": [
                        {
                            "name": "imageDbId",
                            "in": "path",
                            "description": "The unique identifier for a image",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/imageResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "additionalInfo": [],
                                            "copyright": "Copyright 2018",
                                            "description": "BrAPI Logo",
                                            "descriptiveOntologyTerms": [
                                                "brapi",
                                                "logo"
                                            ],
                                            "imageDbId": "img1",
                                            "imageFileName": "brapi-logo.svg",
                                            "imageFileSize": 3676,
                                            "imageHeight": 56,
                                            "imageLocation": {
                                                "geometry": {
                                                    "coordinates": [
                                                        -110.11301,
                                                        50.010082
                                                    ],
                                                    "type": "Point"
                                                },
                                                "type": "Feature"
                                            },
                                            "imageName": "brapiLogo",
                                            "imageTimeStamp": "2011-06-14T01:02:03Z",
                                            "imageURL": "https://brapi.org/assets/images/brapi-logo.svg",
                                            "imageWidth": 258,
                                            "mimeType": "image/svg",
                                            "observationDbIds": [
                                                "1",
                                                "2"
                                            ],
                                            "observationUnitDbId": "1"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Images"
                    ],
                    "summary": "Update an image meta data",
                    "description": "Update an image meta data object\n\nImplementation Notes\n\n- This call should be paired with 'PUT /images/{imageDbId}/imagecontent' for full capability\n\n- A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n\n- Image data may be stored in a database or file system. Servers should generate and provide the \\\"imageURL\\\" as an absolute path for retrieving the image, wherever it happens to live. \n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's. \n\n- The `/images` calls support a GeoJSON object structure for describing their location. The BrAPI spec for GeoJSON only supports two of the possible geometries: Points and Polygons. \n        \n- With most images, the Point geometry should be used, and it should indicate the longitude and latitude of the camera. \n        \n- For top down images (ie from drones, cranes, etc), the Point geometry may be used to indicate the longitude and latitude of the centroid of the image content, and the Polygon geometry may be used to indicate the border of the image content. '",
                    "parameters": [
                        {
                            "name": "imageDbId",
                            "in": "path",
                            "description": "The unique identifier for a image",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newImageRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/imageResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "additionalInfo": [],
                                            "copyright": "Copyright 2019",
                                            "description": "BrAPI Logo",
                                            "descriptiveOntologyTerms": [
                                                "brapi",
                                                "logo"
                                            ],
                                            "imageDbId": "img1",
                                            "imageFileName": "brapi-logo.svg",
                                            "imageFileSize": 3676,
                                            "imageHeight": 56,
                                            "imageLocation": {
                                                "geometry": {
                                                    "coordinates": [
                                                        -110.11301,
                                                        50.010082
                                                    ],
                                                    "type": "Point"
                                                },
                                                "type": "Feature"
                                            },
                                            "imageName": "brapiLogo",
                                            "imageTimeStamp": "1969-12-31T01:02:03Z",
                                            "imageURL": "",
                                            "imageWidth": 258,
                                            "mimeType": "image/svg",
                                            "observationDbIds": [
                                                "1",
                                                "2"
                                            ],
                                            "observationUnitDbId": "11"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "image": true
            }
        },
        "/images/{imageDbId}/imagecontent": {
            "definition": {
                "put": {
                    "tags": [
                        "Images"
                    ],
                    "summary": "Update an image with the image file content",
                    "description": "Update an image with the image file content\n\nImplementation Notes\n\n- This call should be paired with 'PUT /images/{imageDbId}' for full capability\n\n- A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n\n- Image data may be stored in a database or file system. Servers should generate and provide the \"imageURL\" for retrieving the image, wherever it happens to live.  ",
                    "parameters": [
                        {
                            "name": "imageDbId",
                            "in": "path",
                            "description": "The unique identifier for a image",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "image/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/imageResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "additionalInfo": [],
                                            "copyright": "Copyright 2019",
                                            "description": "BrAPI Logo",
                                            "descriptiveOntologyTerms": [
                                                "brapi",
                                                "logo"
                                            ],
                                            "imageDbId": "img1",
                                            "imageFileName": "brapi-logo.svg",
                                            "imageFileSize": 3676,
                                            "imageHeight": 56,
                                            "imageLocation": {
                                                "geometry": {
                                                    "coordinates": [
                                                        -110.11301,
                                                        50.010082
                                                    ],
                                                    "type": "Point"
                                                },
                                                "type": "Feature"
                                            },
                                            "imageName": "brapiLogo",
                                            "imageTimeStamp": "1969-12-31T01:02:03Z",
                                            "imageURL": "http://localhost:8080/brapi/v1/images/img1/brapi-logo.svg",
                                            "imageWidth": 258,
                                            "mimeType": "image/svg",
                                            "observationDbIds": [
                                                "1",
                                                "2"
                                            ],
                                            "observationUnitDbId": "11"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "image": true
            }
        },
        "/lists": {
            "definition": {
                "get": {
                    "tags": [
                        "Lists"
                    ],
                    "summary": "Get the List Summaries",
                    "description": "Get filtered set of generic lists",
                    "parameters": [
                        {
                            "name": "listType",
                            "in": "query",
                            "description": "The type of objects contained by this generic list",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "$ref": "#/components/schemas/listTypes"
                            }
                        },
                        {
                            "name": "listName",
                            "in": "query",
                            "description": "The human readable name of this generic list",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "listDbId",
                            "in": "query",
                            "description": "The unique ID of this generic list",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "listSource",
                            "in": "query",
                            "description": "The source tag of this generic list",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/listSummaryResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "dateCreated": "2011-06-14T22:12:51-04:00",
                                                    "dateModified": "2011-06-14T22:12:51-04:00",
                                                    "description": "Example List of germplasm",
                                                    "listDbId": "list1",
                                                    "listName": "Example List 1",
                                                    "listOwnerName": "Bob Robertson",
                                                    "listOwnerPersonDbId": "person1",
                                                    "listSize": 3,
                                                    "listSource": "User Created",
                                                    "listType": "germplasm"
                                                },
                                                {
                                                    "dateCreated": "2011-06-14T22:12:51-04:00",
                                                    "dateModified": "2011-06-14T22:12:51-04:00",
                                                    "description": "Example List of germplasm",
                                                    "listDbId": "list2",
                                                    "listName": "Example List 2",
                                                    "listOwnerName": "Rob Robertson",
                                                    "listOwnerPersonDbId": "person2",
                                                    "listSize": 3,
                                                    "listSource": "User Created",
                                                    "listType": "germplasm"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Lists"
                    ],
                    "summary": "Create a New List",
                    "description": "Create a new list",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newListRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/listResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "string"
                                            ],
                                            "dateCreated": "2018-12-05T14:36:04-05:00",
                                            "dateModified": "2018-12-05T14:36:04-05:00",
                                            "description": "string",
                                            "listDbId": "d93d6bb6-dfc3-4d15-8d2e-654c618ce12e",
                                            "listName": "string",
                                            "listOwnerName": "string",
                                            "listOwnerPersonDbId": "string",
                                            "listSize": 1,
                                            "listSource": "string",
                                            "listType": "germplasm"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "listTypes": true,
                "listSummary": true,
                "listDetails": true
            }
        },
        "/lists/{listDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Lists"
                    ],
                    "summary": "Get the details of a specific List",
                    "description": "Get a specific generic lists",
                    "parameters": [
                        {
                            "name": "listDbId",
                            "in": "path",
                            "description": "The unique ID of this generic list",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/listResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "1",
                                                "2",
                                                "3"
                                            ],
                                            "dateCreated": "2011-06-14T22:12:51-04:00",
                                            "dateModified": "2011-06-14T22:12:51-04:00",
                                            "description": "Example List of germplasm",
                                            "listDbId": "list1",
                                            "listName": "Example List 1",
                                            "listOwnerName": "Bob Robertson",
                                            "listOwnerPersonDbId": "person1",
                                            "listSize": 3,
                                            "listSource": "User Created",
                                            "listType": "germplasm"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Lists"
                    ],
                    "summary": "Update a specific List",
                    "description": "Update an existing generic list",
                    "parameters": [
                        {
                            "name": "listDbId",
                            "in": "path",
                            "description": "The unique ID of this generic list",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newListRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/listResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "string"
                                            ],
                                            "dateCreated": "2011-06-14T22:12:51-04:00",
                                            "dateModified": "2018-12-05T14:36:04-05:00",
                                            "description": "string",
                                            "listDbId": "list1",
                                            "listName": "string",
                                            "listOwnerName": "string",
                                            "listOwnerPersonDbId": "string",
                                            "listSize": 1,
                                            "listSource": "string",
                                            "listType": "germplasm"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "listDetails": true
            }
        },
        "/lists/{listDbId}/items": {
            "definition": {
                "post": {
                    "tags": [
                        "Lists"
                    ],
                    "summary": "Add Items to a specific List",
                    "description": "Add new data to a specific generic lists",
                    "parameters": [
                        {
                            "name": "listDbId",
                            "in": "path",
                            "description": "The unique ID of this generic list",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/listResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "1",
                                                "2",
                                                "3"
                                            ],
                                            "dateCreated": "2011-06-14T22:12:51-04:00",
                                            "dateModified": "2018-12-05T14:36:04-05:00",
                                            "description": "string",
                                            "listDbId": "list1",
                                            "listName": "string",
                                            "listOwnerName": "string",
                                            "listOwnerPersonDbId": "string",
                                            "listSize": 3,
                                            "listSource": "string",
                                            "listType": "germplasm"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "listDetails": true
            }
        },
        "/locations": {
            "definition": {
                "get": {
                    "tags": [
                        "Locations"
                    ],
                    "summary": "Get the Locations",
                    "description": "Implemented by: Germinate\n\nGet a list of locations.\n\n* The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.\n\n* `altitude` is in meters.\n\n**Note**: Consider revising to describe polygon lat/lan points and check if adopting http://geojson.org/ is worth doing for v1.",
                    "parameters": [
                        {
                            "name": "locationType",
                            "in": "query",
                            "description": "Filter by location type specified.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/locationsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 17,
                                                "totalPages": 9
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "abbreviation": "L1",
                                                    "abreviation": "L1",
                                                    "additionalInfo": {
                                                        "adm1": "Junin",
                                                        "adm2": "Chanchamayo",
                                                        "adm3": "San Ramon",
                                                        "annualMeanTemperature": "23",
                                                        "annualTotalPrecipitation": "360",
                                                        "cont": "South America",
                                                        "creg": "LAC",
                                                        "local": "San Ramon"
                                                    },
                                                    "altitude": 828,
                                                    "countryCode": "PER",
                                                    "countryName": "Peru",
                                                    "documentationURL": "https://brapi.org",
                                                    "instituteAddress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                                    "instituteAdress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                                    "instituteName": "Plant Science Institute",
                                                    "latitude": -11.1274995803833,
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "locationType": "Storage location",
                                                    "longitude": -75.35639190673828,
                                                    "name": "Location 1"
                                                },
                                                {
                                                    "abbreviation": "L2",
                                                    "abreviation": "L2",
                                                    "additionalInfo": [],
                                                    "altitude": 964,
                                                    "countryCode": "PER",
                                                    "countryName": "Peru",
                                                    "documentationURL": "https://brapi.org",
                                                    "instituteAddress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                                    "instituteAdress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                                    "instituteName": "Plant Science Institute",
                                                    "latitude": -11.161160469055176,
                                                    "locationDbId": "2",
                                                    "locationName": "Location 2",
                                                    "locationType": "Breeding location",
                                                    "longitude": -75.34171295166016,
                                                    "name": "Location 2"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "location": true
            }
        },
        "/locations/{locationDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Locations"
                    ],
                    "summary": "Get the details of a specific Location",
                    "description": "Get details for a location.\n\n- The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.\n\n- `altitude` is in meters.",
                    "parameters": [
                        {
                            "name": "locationDbId",
                            "in": "path",
                            "description": "The internal DB id for a location",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/locationResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "abbreviation": "L1",
                                            "abreviation": "L1",
                                            "additionalInfo": {
                                                "adm1": "Junin",
                                                "adm2": "Chanchamayo",
                                                "adm3": "San Ramon",
                                                "annualMeanTemperature": "23",
                                                "annualTotalPrecipitation": "360",
                                                "cont": "South America",
                                                "creg": "LAC",
                                                "local": "San Ramon"
                                            },
                                            "altitude": 828,
                                            "countryCode": "PER",
                                            "countryName": "Peru",
                                            "documentationURL": "https://brapi.org",
                                            "instituteAddress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                            "instituteAdress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                            "instituteName": "Plant Science Institute",
                                            "latitude": -11.1274995803833,
                                            "locationDbId": "1",
                                            "locationName": "Location 1",
                                            "locationType": "Storage location",
                                            "longitude": -75.35639190673828,
                                            "name": "Location 1"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "location": true
            }
        },
        "/login": {
            "definition": {
                "post": {
                    "tags": [
                        "Authentication",
                        "Deprecated"
                    ],
                    "summary": "Login",
                    "description": "Implemented by: Tripal Brapi module, Cassavabase, Germinate, BMS\n\nUsed by: Flapjack, BMS\n\nResponse data types\nException: the result is not embeded in a \"result\" structure in order to be (one day) OAuth2 compliant. It's also why the anwser mixes snake_case and camelCase.\nFor login, returns a hash with the user name and the token as the value. A metadata key is also present (but usually set to null, unless an error condition occurs).\n\nFor logout, returns an empty resource. A token to remove could be provided (amdin interface) but it is not required. By default, current user token will be removed.\n\n|Variable|Datatype|Description|Required|  \n|------|------|------|:-----:|\n| userDisplayName| string| the display name of the user | Y |\n| access_token | string | the access token for the session | Y |\n| expires_in | integer | The lifetime in seconds of the access token | Y | ",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/login_body"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Created",
                            "content": {
                                "application/json": {
                                    "example": {
                                        "access_token": "R6gKDBRxM4HLj6eGi4u5HkQjYoIBTPfvtZzUD8TUzg4",
                                        "expires_in": "The lifetime in seconds of the access token",
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "userDisplayName": "John Smith"
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": []
        },
        "/logout": {
            "definition": {
                "delete": {
                    "tags": [
                        "Authentication",
                        "Deprecated"
                    ],
                    "summary": "Logout",
                    "description": "Implemented by: Tripal Brapi module, Cassavabase, Germinate, BMS\n\nUsed by: Flapjack, BMS\n\nFor logout, returns an empty resource. A token to remove could be provided (amdin interface) but it is not required. By default, current user token will be removed.",
                    "responses": {
                        "201": {
                            "description": "Created",
                            "content": {
                                "application/json": {
                                    "example": []
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": []
        },
        "/maps": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get the Genomic Maps",
                    "description": "Get list of maps",
                    "parameters": [
                        {
                            "name": "species",
                            "in": "query",
                            "description": "DEPRECATED in v1.3 - See \"scientificName\"",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "commonCropName",
                            "in": "query",
                            "description": "The common name of the crop, found from \"GET /commoncropnames\"",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "scientificName",
                            "in": "query",
                            "description": "Full scientific binomial format name. This includes Genus, Species, and Sub-species",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "type",
                            "in": "query",
                            "description": "Type of map",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/genomeMapsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "comments": "comments",
                                                    "commonCropName": "Paw Paw",
                                                    "documentationURL": "https://brapi.org",
                                                    "linkageGroupCount": 1,
                                                    "mapDbId": "gm1",
                                                    "mapName": "Genome Map 1",
                                                    "markerCount": 11,
                                                    "name": "Genome Map 1",
                                                    "publishedDate": "2018-01-01",
                                                    "scientificName": "Asimina triloba",
                                                    "species": "triloba",
                                                    "type": "Genetic",
                                                    "unit": "cM"
                                                },
                                                {
                                                    "comments": "comments",
                                                    "commonCropName": "Paw Paw",
                                                    "documentationURL": "https://brapi.org",
                                                    "linkageGroupCount": 2,
                                                    "mapDbId": "gm2",
                                                    "mapName": "Genome Map 2",
                                                    "markerCount": 11,
                                                    "name": "Genome Map 2",
                                                    "publishedDate": "2018-01-01",
                                                    "scientificName": "Asimina triloba",
                                                    "species": "triloba",
                                                    "type": "Genetic",
                                                    "unit": "cM"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "genomeMap": true
            }
        },
        "/maps/{mapDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get the details of a specific Genomic Map",
                    "description": "Provides the number of markers on each linkageGroup and the max position on the linkageGroup",
                    "parameters": [
                        {
                            "name": "mapDbId",
                            "in": "path",
                            "description": "The internal db id of a selected map",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/mapDetailsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 1,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "linkageGroupName": "1",
                                                    "markerCount": 11,
                                                    "maxPosition": 1110
                                                }
                                            ],
                                            "documentationURL": "https://brapi.org",
                                            "linkageGroups": [
                                                {
                                                    "linkageGroupName": "1",
                                                    "markerCount": 11,
                                                    "maxPosition": 1110
                                                }
                                            ],
                                            "mapDbId": "gm1",
                                            "mapName": "Genome Map 1",
                                            "name": "Genome Map 1",
                                            "type": "Genetic",
                                            "unit": "cM"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "linkageGroup": true
            }
        },
        "/maps/{mapDbId}/positions": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get the positions of Markers inside a specific Genomic Map",
                    "description": "All the markers in a given Map, ordered by linkageGroup and position.",
                    "parameters": [
                        {
                            "name": "mapDbId",
                            "in": "path",
                            "description": "unique id of the map",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "linkageGroupId",
                            "in": "query",
                            "description": "Deprecated Use linkageGroupName instead",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "linkageGroupName",
                            "in": "query",
                            "description": "The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markerSummaryMapResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 11,
                                                "totalPages": 6
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "linkageGroupName": "1",
                                                    "location": "1000",
                                                    "markerDbId": "mr01",
                                                    "markerName": "marker1-1"
                                                },
                                                {
                                                    "linkageGroupName": "1",
                                                    "location": "1020",
                                                    "markerDbId": "mr02",
                                                    "markerName": "marker1-2"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "markerSummaryMap": true
            }
        },
        "/maps/{mapDbId}/positions/{linkageGroupName}": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get the positions of Markers inside a specific Linkage Group",
                    "description": "All the markers in a specific Linkage Group (aka Chromasome) inside a particular Map, ordered by position.",
                    "parameters": [
                        {
                            "name": "mapDbId",
                            "in": "path",
                            "description": "unique id of the map",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "linkageGroupName",
                            "in": "path",
                            "description": "The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "min",
                            "in": "query",
                            "description": "minimum position on linkage group",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            }
                        },
                        {
                            "name": "max",
                            "in": "query",
                            "description": "maximum position on linkage group",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markerSummaryLinkageGroupResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 11,
                                                "totalPages": 6
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "location": "1000",
                                                    "markerDbId": "mr01",
                                                    "markerName": "marker1-1"
                                                },
                                                {
                                                    "location": "1020",
                                                    "markerDbId": "mr02",
                                                    "markerName": "marker1-2"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "markerSummaryLinkageGroup": true
            }
        },
        "/markerprofiles": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Get the Marker Profiles",
                    "description": "For the requested Germplasm Id and/or Extract Id, returns the Markerprofile Id and number of non-missing allele calls (marker/allele pairs).",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "The server's internal ids for the Germplasm IDs, as returned by the Find marker profile by Germplasm service.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "The server's internal id for the StudyDbId",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sampleDbId",
                            "in": "query",
                            "description": "The server's internal id for the SampleDbId",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "extractDbId",
                            "in": "query",
                            "description": "The server's internal id for the ExtractDbId",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markerProfileDescriptionsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 14,
                                                "totalPages": 7
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "analysisMethod": "GBS",
                                                    "extractDbId": "extract1",
                                                    "germplasmDbId": "1",
                                                    "markerProfileDbId": "P1",
                                                    "markerprofileDbId": "P1",
                                                    "resultCount": 20,
                                                    "sampleDbId": "sam00",
                                                    "uniqueDisplayName": "My Fancy Germplasm"
                                                },
                                                {
                                                    "analysisMethod": "GBS",
                                                    "extractDbId": "extract2",
                                                    "germplasmDbId": "1",
                                                    "markerProfileDbId": "P2",
                                                    "markerprofileDbId": "P2",
                                                    "resultCount": 20,
                                                    "sampleDbId": "sam01",
                                                    "uniqueDisplayName": "My Fancy Germplasm"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "markerProfileDescription": true
            }
        },
        "/markerprofiles/{markerProfileDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Get the details for a specific Marker Profile",
                    "description": "For the requested marker profile ID, returns the allele call for each marker. \n        \nAllele encodings\n\n- Unknown data will by default be encoded by \\\"N\\\"\n\n- Homozygotes are returned as a single occurance, e.g. AA -> A, GG -> G\n\n- Phased heterozygotes are by default separated by a pipe (\\\"|\\\") and unphased heterozygotes are by default separated by a forward slash (\\\"/\\\")\n\n- Dominant markers such as DArTs: 1 for present, 0 for absent\n        \n- If the user would like to use an empty string (\\\"\\\") for any of the parameters, the value should be set to the reserved word \\\"empty_string\\\", e.g. sepUnphased=empty_string.\n\nOpen issue: The pages of data will need to be sorted sensibly in order for the requested page to be delivered consistently.  By map or genome position? Alphabetically?'\"",
                    "parameters": [
                        {
                            "name": "markerProfileDbId",
                            "in": "path",
                            "description": "The server's internal id for the marker profile",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "expandHomozygotes",
                            "in": "query",
                            "description": "Should homozygotes NOT be collapsed into a single orrucance?",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "unknownString",
                            "in": "query",
                            "description": "The string to use as a representation for missing data or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sepPhased",
                            "in": "query",
                            "description": "The string to use as a separator for phased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sepUnphased",
                            "in": "query",
                            "description": "The string to use as a separator for unphased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markerProfilesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 20,
                                                "totalPages": 10
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "analysisMethod": "GBS",
                                            "data": [
                                                {
                                                    "marker1-1": "A"
                                                },
                                                {
                                                    "marker1-2": "C"
                                                }
                                            ],
                                            "extractDbId": "extract1",
                                            "germplasmDbId": "1",
                                            "markerProfileDbId": "P1",
                                            "markerprofileDbId": "P1",
                                            "uniqueDisplayName": "My Fancy Germplasm"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "markerProfile": true
            }
        },
        "/markers": {
            "definition": {
                "get": {
                    "tags": [
                        "Markers"
                    ],
                    "summary": "Get the Markers",
                    "description": "Other service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria.\nIf there is none, an empty array is returned. If there is one or more than one match, returns an array of all marker records that match the search criteria.",
                    "parameters": [
                        {
                            "name": "markerDbId",
                            "in": "query",
                            "description": "The database ID of the markers to search for",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "markerName",
                            "in": "query",
                            "description": "The search paramater for a marker name or synonym.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "name",
                            "in": "query",
                            "description": "DEPRECAED in v1.3 - see \"markerName\"",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "matchMethod",
                            "in": "query",
                            "description": "DEPRECAED in v1.3 - see /search/markers",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "case_insensitive",
                                    "exact",
                                    "wildcard"
                                ]
                            }
                        },
                        {
                            "name": "includeSynonyms",
                            "in": "query",
                            "description": "Whether to include synonyms in the output.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "include",
                            "in": "query",
                            "description": "DEPRECATED in v1.1 - see \"includeSynonyms\"",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "type",
                            "in": "query",
                            "description": "The type of the marker.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markersResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "analysisMethods": [
                                                        "illumina"
                                                    ],
                                                    "defaultDisplayName": "marker1-1",
                                                    "markerDbId": "mr01",
                                                    "markerName": "marker1-1",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10010"
                                                    ],
                                                    "type": "marker"
                                                },
                                                {
                                                    "analysisMethods": [
                                                        "kasp"
                                                    ],
                                                    "defaultDisplayName": "marker1-2",
                                                    "markerDbId": "mr02",
                                                    "markerName": "marker1-2",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10020"
                                                    ],
                                                    "type": "marker"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "marker": true
            }
        },
        "/markers-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Markers"
                    ],
                    "summary": "Markers Search (GET)",
                    "description": " Scope: CORE.  Status: ACCEPTED.\nImplemented by: Germinate\nSee Search Services for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. ",
                    "parameters": [
                        {
                            "name": "markerDbIds",
                            "in": "query",
                            "description": "The database IDs of the markers to search for",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "name",
                            "in": "query",
                            "description": "The search pattern for a marker name or synonym. Examples: \"11_10002\" \"11_1%\" \"11_1*\" \"11_10?02\"",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "matchMethod",
                            "in": "query",
                            "description": "Possible values are 'case_insensitive', 'exact'\n(case sensitive), 'wildcard' (which is case insensitive). Wildcard uses both '*' and '%' for any number of characters\nand '?' for one character matching. Default is exact.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "includeSynonyms",
                            "in": "query",
                            "description": "Whether to include synonyms in the output.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "type",
                            "in": "query",
                            "description": "The type of the marker.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markersResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "analysisMethods": [
                                                        "illumina"
                                                    ],
                                                    "defaultDisplayName": "marker1-1",
                                                    "markerDbId": "mr01",
                                                    "markerName": "marker1-1",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10010"
                                                    ],
                                                    "type": "marker"
                                                },
                                                {
                                                    "analysisMethods": [
                                                        "kasp"
                                                    ],
                                                    "defaultDisplayName": "marker1-2",
                                                    "markerDbId": "mr02",
                                                    "markerName": "marker1-2",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10020"
                                                    ],
                                                    "type": "marker"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                },
                "post": {
                    "tags": [
                        "Markers"
                    ],
                    "summary": "Markers Search (POST)",
                    "description": " Scope: CORE.  Status: ACCEPTED.\nImplemented by: Germinate\nSee Search Services for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. ",
                    "requestBody": {
                        "description": "The database IDs of the markers to search for",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/markersSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markersResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "analysisMethods": [
                                                        "illumina"
                                                    ],
                                                    "defaultDisplayName": "marker1-1",
                                                    "markerDbId": "mr01",
                                                    "markerName": "marker1-1",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10010"
                                                    ],
                                                    "type": "marker"
                                                },
                                                {
                                                    "analysisMethods": [
                                                        "kasp"
                                                    ],
                                                    "defaultDisplayName": "marker1-2",
                                                    "markerDbId": "mr02",
                                                    "markerName": "marker1-2",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10020"
                                                    ],
                                                    "type": "marker"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "marker": true
            }
        },
        "/markers/{markerDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Markers"
                    ],
                    "summary": "Get the details for a specific Marker",
                    "description": "Status: ACCEPTED \nImplemented By:",
                    "parameters": [
                        {
                            "name": "markerDbId",
                            "in": "path",
                            "description": "the internal id of the marker",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markerResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "analysisMethods": [
                                                "kasp"
                                            ],
                                            "defaultDisplayName": "marker1-2",
                                            "markerDbId": "mr02",
                                            "markerName": "marker1-2",
                                            "refAlt": [
                                                "A",
                                                "T"
                                            ],
                                            "synonyms": [
                                                "i_11_10020"
                                            ],
                                            "type": "marker"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "marker": true
            }
        },
        "/methods": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the Methods",
                    "description": "Returns a list of Methods available on a server.\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/MethodsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 4,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "class": "Numeric",
                                                    "description": "Standard rolled measuring tape",
                                                    "formula": "a^2 + b^2 = c^2",
                                                    "methodDbId": "m1",
                                                    "methodName": "Tape Measure",
                                                    "name": "Tape Measure",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org/m1",
                                                                "type": "RDF",
                                                                "url": "https://ontology.org/m1"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "reference": "google.com"
                                                },
                                                {
                                                    "class": "Numeric",
                                                    "description": "Dried sample on electric scale",
                                                    "formula": "NA",
                                                    "methodDbId": "m2",
                                                    "methodName": "Dry Electric Scale",
                                                    "name": "Dry Electric Scale",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org/m2",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org/m2"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "reference": "google.com"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Add a new Method",
                    "description": "Create a new method object in the database",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newMethodRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/MethodResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "class": "string",
                                            "description": "string",
                                            "formula": "string",
                                            "methodDbId": "8175d7ac-6221-4e1d-8023-91ddb8b30fd8",
                                            "methodName": "string",
                                            "name": "string",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "string",
                                                        "type": "OBO",
                                                        "url": "string"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "reference": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "method": true
            }
        },
        "/methods/{methodDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the details for a specific Method",
                    "description": "Retrieve details about a specific method\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.",
                    "parameters": [
                        {
                            "name": "methodDbId",
                            "in": "path",
                            "description": "Id of the method to retrieve details of.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/MethodResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "class": "Numeric",
                                            "description": "Standard rolled measuring tape",
                                            "formula": "a^2 + b^2 = c^2",
                                            "methodDbId": "m1",
                                            "methodName": "Tape Measure",
                                            "name": "Tape Measure",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "https://ontology.org/m1",
                                                        "type": "RDF",
                                                        "url": "https://ontology.org/m1"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "reference": "google.com"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Update an existing Method",
                    "description": "Update the details of an existing method",
                    "parameters": [
                        {
                            "name": "methodDbId",
                            "in": "path",
                            "description": "Id of the method to retrieve details of.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newMethodRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/MethodResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "class": "string",
                                            "description": "string",
                                            "formula": "string",
                                            "methodDbId": "m1",
                                            "methodName": "string",
                                            "name": "string",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "string",
                                                        "type": "OBO",
                                                        "url": "string"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "reference": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "method": true
            }
        },
        "/observationLevels": {
            "definition": {
                "get": {
                    "tags": [
                        "Observations",
                        "Deprecated"
                    ],
                    "summary": "Deprecated List observation levels",
                    "description": " ** DEPRECATED ** Use /observationlevels\nCall to retrieve the list of supported observation levels. Observation levels indicate the granularity level at which the measurements are taken. The values are used to supply the `observationLevel` parameter in the observation unit details call. ",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationLevelsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 11,
                                                "totalPages": 6
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "plot",
                                                "plant"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "observationLevelsResponse_result": true
            }
        },
        "/observationlevels": {
            "definition": {
                "get": {
                    "tags": [
                        "Observations"
                    ],
                    "summary": "Get the Observation Levels",
                    "description": "Call to retrieve the list of supported observation levels. \nObservation levels indicate the granularity level at which the measurements are taken. \nThe values are used to supply the `observationLevel` parameter in the observation unit details call.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationLevelsResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 11,
                                                "totalPages": 6
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "plot",
                                                "plant"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationLevelsResponse_1_result": true
            }
        },
        "/observationunits": {
            "definition": {
                "get": {
                    "tags": [
                        "Observations"
                    ],
                    "summary": "Get the Observation Units",
                    "description": "Get a set of observation units",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "The unique ID of a germplasm (accession) to filter on",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationVariableDbId",
                            "in": "query",
                            "description": "The unique ID of an observation variable",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "The unique ID of a studies to filter on",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "The unique ID of a location where these observations were collected",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "trialDbId",
                            "in": "query",
                            "description": "The unique ID of a trial to filter on",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "The unique ID of a program to filter on",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "seasonDbId",
                            "in": "query",
                            "description": "The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationLevel",
                            "in": "query",
                            "description": "The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationTimeStampRangeStart",
                            "in": "query",
                            "description": "Timestamp range start",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        {
                            "name": "observationTimeStampRangeEnd",
                            "in": "query",
                            "description": "Timestamp range end",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "1",
                                                    "entryNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationLevel": "plot",
                                                    "observationLevels": "block:1;plot:1",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "observationUnitXref": [
                                                        {
                                                            "id": "SAMEA179865230",
                                                            "source": "ebi.biosample"
                                                        },
                                                        {
                                                            "id": "INRA:CoeSt6 _SMH03",
                                                            "source": "gnpis.lot"
                                                        },
                                                        {
                                                            "id": "239865",
                                                            "source": "kernelDB"
                                                        }
                                                    ],
                                                    "observations": [
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "1",
                                                            "observationTimeStamp": "2013-06-14T22:03:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": "fall 2011",
                                                            "value": "1.2"
                                                        },
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "2",
                                                            "observationTimeStamp": "2013-06-14T22:04:51-04:00",
                                                            "observationVariableDbId": "MO_123:100006",
                                                            "observationVariableName": "Virus severity",
                                                            "season": "fall 2011",
                                                            "value": "4.5"
                                                        }
                                                    ],
                                                    "plantNumber": "null",
                                                    "plotNumber": "1",
                                                    "programName": "Program 1",
                                                    "replicate": "0",
                                                    "studyDbId": "1001",
                                                    "studyLocation": "Peru",
                                                    "studyLocationDbId": "1",
                                                    "studyName": "Study 1",
                                                    "treatments": [
                                                        {
                                                            "factor": "water regimen",
                                                            "modality": "deficit"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "101",
                                                    "entryNumber": "1",
                                                    "entryType": "FILLER",
                                                    "germplasmDbId": "4",
                                                    "germplasmName": "Name004",
                                                    "observationLevel": "plant",
                                                    "observationLevels": "block:101;plot:5;plant:5",
                                                    "observationUnitDbId": "10",
                                                    "observationUnitName": "Plant 5",
                                                    "observationUnitXref": [],
                                                    "observations": [
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "16",
                                                            "observationTimeStamp": "2011-06-14T22:06:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": "winter 2012",
                                                            "value": "100"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "17",
                                                            "observationTimeStamp": "2011-06-14T22:07:51-04:00",
                                                            "observationVariableDbId": "MO_123:100003",
                                                            "observationVariableName": "Carotenoid",
                                                            "season": "winter 2012",
                                                            "value": "9"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "18",
                                                            "observationTimeStamp": "2011-06-14T22:08:51-04:00",
                                                            "observationVariableDbId": "MO_123:100004",
                                                            "observationVariableName": "Root weight",
                                                            "season": "winter 2012",
                                                            "value": "2"
                                                        }
                                                    ],
                                                    "plantNumber": "5",
                                                    "plotNumber": "5",
                                                    "programName": "Program 1",
                                                    "replicate": "1",
                                                    "studyDbId": "1003",
                                                    "studyLocation": "Peru",
                                                    "studyLocationDbId": "2",
                                                    "studyName": "Study 3",
                                                    "treatments": []
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationUnitPhenotype": true
            }
        },
        "/ontologies": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the Ontologies",
                    "description": "Call to retrieve a list of observation variable ontologies available in the system.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ontologiesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 1,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "authors": "Bob",
                                                    "copyright": "2017 Ontology.org",
                                                    "description": "Ontology.org",
                                                    "documentationURL": "https://ontology.org",
                                                    "licence": "Apache",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "version": "17"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "ontology": true
            }
        },
        "/people": {
            "definition": {
                "get": {
                    "tags": [
                        "People"
                    ],
                    "summary": "Get the People",
                    "description": "Get filtered list of people",
                    "parameters": [
                        {
                            "name": "firstName",
                            "in": "query",
                            "description": "A persons first name",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "lastName",
                            "in": "query",
                            "description": "A persons last name",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "personDbId",
                            "in": "query",
                            "description": "The unique ID of a person",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "userID",
                            "in": "query",
                            "description": "A systems user ID ascociated with this person. Different from personDbId because you could have a person who is not a user of the system.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/personsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "description": "Example Person",
                                                    "emailAddress": "bob@bob.com",
                                                    "firstName": "Bob",
                                                    "lastName": "Robertson",
                                                    "mailingAddress": "123 Road Street, City, State, Country, 98765",
                                                    "middleName": "Danger",
                                                    "personDbId": "person1",
                                                    "phoneNumber": "+19876543210",
                                                    "userID": "bdr45"
                                                },
                                                {
                                                    "description": "Example Person",
                                                    "emailAddress": "rob@bob.com",
                                                    "firstName": "Rob",
                                                    "lastName": "Robertson",
                                                    "mailingAddress": "123 Road Street, City, State, Country, 98765",
                                                    "middleName": "Danger",
                                                    "personDbId": "person2",
                                                    "phoneNumber": "+19876543210",
                                                    "userID": "rdr45"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "People"
                    ],
                    "summary": "Create a new Person",
                    "description": "Create a new person",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newPersonRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/personResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "description": "string",
                                            "emailAddress": "string",
                                            "firstName": "Name",
                                            "lastName": "Smith",
                                            "mailingAddress": "string",
                                            "middleName": "string",
                                            "personDbId": "4f67d1b5-d95e-4bf5-b719-79a64b619f00",
                                            "phoneNumber": "string",
                                            "userID": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "person": true
            }
        },
        "/people/{personDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "People"
                    ],
                    "summary": "Get the details for a specific Person",
                    "description": "Get a specific person",
                    "parameters": [
                        {
                            "name": "personDbId",
                            "in": "path",
                            "description": "The unique ID of a person",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/personResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "description": "Example Person",
                                            "emailAddress": "bob@bob.com",
                                            "firstName": "Bob",
                                            "lastName": "Robertson",
                                            "mailingAddress": "123 Road Street, City, State, Country, 98765",
                                            "middleName": "Danger",
                                            "personDbId": "person1",
                                            "phoneNumber": "+19876543210",
                                            "userID": "bdr45"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "People"
                    ],
                    "summary": "Update a Person",
                    "description": "Update an existing Person",
                    "parameters": [
                        {
                            "name": "personDbId",
                            "in": "path",
                            "description": "The unique ID of a person",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newPersonRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/personResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "description": "string",
                                            "emailAddress": "string",
                                            "firstName": "Name",
                                            "lastName": "Nameson",
                                            "mailingAddress": "string",
                                            "middleName": "string",
                                            "personDbId": "person1",
                                            "phoneNumber": "string",
                                            "userID": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "person": true
            }
        },
        "/phenotypes": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Observations"
                    ],
                    "summary": "Add new Observation Unit Phenotypes",
                    "description": "Notes: \n\nAlong with the study specific phenotype saving calls (in the observationUnit and table formats), this call allows phenotypes to be saved and images to optionally be transferred as well.\n\nCall to invoke for saving the measurements (observations) collected\\nfrom field for all the observation units.\n\nObservation timestamp should be ISO 8601 https://www.w3.org/TR/NOTE-datetime \n\nIn case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call. In this case a format parameter should be passed as well. \n\nImages can be optionally be uploaded using this call by providing a zipfile of all images in the datafiles, along with the actual zipfile in multi-part form data.\"",
                    "parameters": [
                        {
                            "name": "format",
                            "in": "query",
                            "description": "In case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "$ref": "#/components/schemas/WSMIMEDataTypes"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/phenotypesRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/newObservationDbIdsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "observations": [
                                                {
                                                    "observationDbId": "bb989815-86bf-430b-9d87-054df8919767",
                                                    "observationUnitDbId": "1",
                                                    "observationVariableDbId": "MO_123:100002"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "WSMIMEDataTypes": true,
                "newObservationDbIds": true
            }
        },
        "/phenotypes-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search",
                    "description": "DEPRECATED in v1.3 - See GET /observationunits",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "The name or synonym of external genebank accession identifiers",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationVariableDbId",
                            "in": "query",
                            "description": "The ID of traits, could be ontology ID, database ID or PUI",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "The database ID / PK of the studies search parameter",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "locations these traits were collected",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "trialDbId",
                            "in": "query",
                            "description": "trial to search across",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "program that have phenotyped this trait",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "seasonDbId",
                            "in": "query",
                            "description": "The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationLevel",
                            "in": "query",
                            "description": "The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationTimeStampRangeStart",
                            "in": "query",
                            "description": "Timestamp range start",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        {
                            "name": "observationTimeStampRangeEnd",
                            "in": "query",
                            "description": "Timestamp range end",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitsResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "1",
                                                    "entryNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationLevel": "plot",
                                                    "observationLevels": "block:1;plot:1",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "observationUnitXref": [
                                                        {
                                                            "id": "SAMEA179865230",
                                                            "source": "ebi.biosample"
                                                        },
                                                        {
                                                            "id": "INRA:CoeSt6 _SMH03",
                                                            "source": "gnpis.lot"
                                                        },
                                                        {
                                                            "id": "239865",
                                                            "source": "kernelDB"
                                                        }
                                                    ],
                                                    "observations": [
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "1",
                                                            "observationTimeStamp": "2013-06-14T22:03:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": "fall 2011",
                                                            "value": "1.2"
                                                        },
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "2",
                                                            "observationTimeStamp": "2013-06-14T22:04:51-04:00",
                                                            "observationVariableDbId": "MO_123:100006",
                                                            "observationVariableName": "Virus severity",
                                                            "season": "fall 2011",
                                                            "value": "4.5"
                                                        }
                                                    ],
                                                    "plantNumber": "null",
                                                    "plotNumber": "1",
                                                    "programName": "Program 1",
                                                    "replicate": "0",
                                                    "studyDbId": "1001",
                                                    "studyLocation": "Peru",
                                                    "studyLocationDbId": "1",
                                                    "studyName": "Study 1",
                                                    "treatments": [
                                                        {
                                                            "factor": "water regimen",
                                                            "modality": "deficit"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "101",
                                                    "entryNumber": "1",
                                                    "entryType": "FILLER",
                                                    "germplasmDbId": "4",
                                                    "germplasmName": "Name004",
                                                    "observationLevel": "plant",
                                                    "observationLevels": "block:101;plot:5;plant:5",
                                                    "observationUnitDbId": "10",
                                                    "observationUnitName": "Plant 5",
                                                    "observationUnitXref": [],
                                                    "observations": [
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "16",
                                                            "observationTimeStamp": "2011-06-14T22:06:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": "winter 2012",
                                                            "value": "100"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "17",
                                                            "observationTimeStamp": "2011-06-14T22:07:51-04:00",
                                                            "observationVariableDbId": "MO_123:100003",
                                                            "observationVariableName": "Carotenoid",
                                                            "season": "winter 2012",
                                                            "value": "9"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "18",
                                                            "observationTimeStamp": "2011-06-14T22:08:51-04:00",
                                                            "observationVariableDbId": "MO_123:100004",
                                                            "observationVariableName": "Root weight",
                                                            "season": "winter 2012",
                                                            "value": "2"
                                                        }
                                                    ],
                                                    "plantNumber": "5",
                                                    "plotNumber": "5",
                                                    "programName": "Program 1",
                                                    "replicate": "1",
                                                    "studyDbId": "1003",
                                                    "studyLocation": "Peru",
                                                    "studyLocationDbId": "2",
                                                    "studyName": "Study 3",
                                                    "treatments": []
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                },
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search",
                    "description": "DEPRECATED in v1.3 - See /search/observationunits",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/phenotypesSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitsResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "1",
                                                    "entryNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationLevel": "plot",
                                                    "observationLevels": "block:1;plot:1",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "observationUnitXref": [
                                                        {
                                                            "id": "SAMEA179865230",
                                                            "source": "ebi.biosample"
                                                        },
                                                        {
                                                            "id": "INRA:CoeSt6 _SMH03",
                                                            "source": "gnpis.lot"
                                                        },
                                                        {
                                                            "id": "239865",
                                                            "source": "kernelDB"
                                                        }
                                                    ],
                                                    "observations": [
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "1",
                                                            "observationTimeStamp": "2013-06-14T22:03:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": "fall 2011",
                                                            "value": "1.2"
                                                        },
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "2",
                                                            "observationTimeStamp": "2013-06-14T22:04:51-04:00",
                                                            "observationVariableDbId": "MO_123:100006",
                                                            "observationVariableName": "Virus severity",
                                                            "season": "fall 2011",
                                                            "value": "4.5"
                                                        }
                                                    ],
                                                    "plantNumber": "null",
                                                    "plotNumber": "1",
                                                    "programName": "Program 1",
                                                    "replicate": "0",
                                                    "studyDbId": "1001",
                                                    "studyLocation": "Peru",
                                                    "studyLocationDbId": "1",
                                                    "studyName": "Study 1",
                                                    "treatments": [
                                                        {
                                                            "factor": "water regimen",
                                                            "modality": "deficit"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "101",
                                                    "entryNumber": "1",
                                                    "entryType": "FILLER",
                                                    "germplasmDbId": "4",
                                                    "germplasmName": "Name004",
                                                    "observationLevel": "plant",
                                                    "observationLevels": "block:101;plot:5;plant:5",
                                                    "observationUnitDbId": "10",
                                                    "observationUnitName": "Plant 5",
                                                    "observationUnitXref": [],
                                                    "observations": [
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "16",
                                                            "observationTimeStamp": "2011-06-14T22:06:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": "winter 2012",
                                                            "value": "100"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "17",
                                                            "observationTimeStamp": "2011-06-14T22:07:51-04:00",
                                                            "observationVariableDbId": "MO_123:100003",
                                                            "observationVariableName": "Carotenoid",
                                                            "season": "winter 2012",
                                                            "value": "9"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "18",
                                                            "observationTimeStamp": "2011-06-14T22:08:51-04:00",
                                                            "observationVariableDbId": "MO_123:100004",
                                                            "observationVariableName": "Root weight",
                                                            "season": "winter 2012",
                                                            "value": "2"
                                                        }
                                                    ],
                                                    "plantNumber": "5",
                                                    "plotNumber": "5",
                                                    "programName": "Program 1",
                                                    "replicate": "1",
                                                    "studyDbId": "1003",
                                                    "studyLocation": "Peru",
                                                    "studyLocationDbId": "2",
                                                    "studyName": "Study 3",
                                                    "treatments": []
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "observationUnitPhenotype": true
            }
        },
        "/phenotypes-search/csv": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search CSV",
                    "description": "DEPRECATED in v1.3 - See /search/observationtables",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/phenotypesSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "examples": {
                                        "response": {
                                            "value": []
                                        }
                                    }
                                },
                                "text/csv": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "examples": {
                                        "response": {
                                            "value": "\"year\",\"studyDbId\",\"studyName\",\"locationDbId\",\"locationName\",\"germplasmDbId\",\"germplasmName\",\"observationUnitDbId\",\"plotNumber\",\"replicate\",\"blockNumber\", \"entryType\", \"X\", \"Y\", \"variableDbId1\", \"variableDbId2\", \"variableDbId3\"\n\"2015\", \"YieldStudy2015-5\", \"Yield wheat 2015\", \"mtp-north-32\", \"Montpellier\", \"doi:10.155454/12349537E12\", \"IR-8\", \"2016-Maugio-34-575-abc-123\", \"120\", \"\", \"2\", \"\", \"5\", \"15\", \"45\", \"3\", \"10\"\n\"2016\", \"YieldStudy2016-5\", \"Yield wheat 2016\", \"mtp-north-32\", \"Montpellier\", \"doi:10.155454/12349537E13\", \"IR-8\", \"2016-Maugio-34-575-abc-124\", \"120\", \"\", \"2\", \"\", \"5\", \"15\", \"47\", \"4\", \"11\""
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": []
        },
        "/phenotypes-search/table": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search Table",
                    "description": "DEPRECATED in v1.3 - See /search/observationtables",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/phenotypesSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitsTableResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                [
                                                    "2013",
                                                    "1001",
                                                    "Study 1",
                                                    "1",
                                                    "Location 1",
                                                    "1",
                                                    "Name001",
                                                    "1",
                                                    "1",
                                                    "0",
                                                    "1",
                                                    "TEST",
                                                    "1",
                                                    "1",
                                                    "1.2",
                                                    "4.5",
                                                    "",
                                                    ""
                                                ],
                                                [
                                                    "2011",
                                                    "1003",
                                                    "Study 3",
                                                    "2",
                                                    "Location 2",
                                                    "4",
                                                    "Name004",
                                                    "10",
                                                    "5",
                                                    "1",
                                                    "101",
                                                    "FILLER",
                                                    "1",
                                                    "1",
                                                    "100",
                                                    "",
                                                    "9",
                                                    "2"
                                                ]
                                            ],
                                            "headerRow": [
                                                "year",
                                                "studyDbId",
                                                "studyName",
                                                "locationDbId",
                                                "locationName",
                                                "germplasmDbId",
                                                "germplasmName",
                                                "observationUnitDbId",
                                                "plotNumber",
                                                "replicate",
                                                "blockNumber",
                                                "entryType",
                                                "X",
                                                "Y"
                                            ],
                                            "observationVariableDbIds": [
                                                "MO_123:100002",
                                                "MO_123:100006",
                                                "MO_123:100003",
                                                "MO_123:100004"
                                            ],
                                            "observationVariableNames": [
                                                "Plant height",
                                                "Virus severity",
                                                "Carotenoid",
                                                "Root weight"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "observationUnitsTableResponse": true
            }
        },
        "/phenotypes-search/tsv": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search TSV",
                    "description": "DEPRECATED in v1.3 - See /search/observationtables",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/phenotypesSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "examples": {
                                        "response": {
                                            "value": []
                                        }
                                    }
                                },
                                "text/csv": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "examples": {
                                        "response": {
                                            "value": "\"year\"    \"studyDbId\"    \"studyName\"    \"locationDbId\"    \"locationName\"    \"germplasmDbId\"    \"germplasmName\"    \"observationUnitDbId\"    \"plotNumber\"    \"replicate\"    \"blockNumber\"    \"entryType\"    \"X\"    \"Y\"     \"variableDbId1\"    \"variableDbId2\"    \"variableDbId3\"\n\"2015\"    \"YieldStudy2015-5\"    \"Yield wheat 2015\"    \"mtp-north-32\"    \"Montpellier\"    \"doi:10.155454/12349537E12\"    \"IR-8\"    \"2016-Maugio-34-575-abc-123\"    \"120\"    \"\"    \"2\"    \"\"    \"5\"    \"15\"    \"45\"    \"3\"    \"10\"\n\"2016\"    \"YieldStudy2016-5\"    \"Yield wheat 2016\"    \"mtp-north-32\"    \"Montpellier\"    \"doi:10.155454/12349537E13\"    \"IR-8\"    \"2016-Maugio-34-575-abc-124\"    \"120\"    \"\"    \"2\"    \"\"    \"5\"    \"15\"    \"47\"    \"4\"    \"11\""
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": []
        },
        "/programs": {
            "definition": {
                "get": {
                    "tags": [
                        "Programs"
                    ],
                    "summary": "Get the breeding Programs",
                    "description": "Call to retrieve a list of programs.",
                    "parameters": [
                        {
                            "name": "commonCropName",
                            "in": "query",
                            "description": "Filter by the common crop name. Exact match.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "programName",
                            "in": "query",
                            "description": "Filter by program name. Exact match.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "abbreviation",
                            "in": "query",
                            "description": "Filter by program abbreviation. Exact match.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/programsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "abbreviation": "P1",
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "leadPerson": "Name Nameson",
                                                    "leadPersonDbId": "person1",
                                                    "leadPersonName": "Name Nameson",
                                                    "name": "Program 1",
                                                    "objective": "Global Population Improvement",
                                                    "programDbId": "1",
                                                    "programName": "Program 1"
                                                },
                                                {
                                                    "abbreviation": "P2",
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "leadPerson": "Name Nameson",
                                                    "leadPersonDbId": "person1",
                                                    "leadPersonName": "Name Nameson",
                                                    "name": "Program 2",
                                                    "objective": "XYZ",
                                                    "programDbId": "2",
                                                    "programName": "Program 2"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "program": true
            }
        },
        "/programs-search": {
            "definition": {
                "post": {
                    "tags": [
                        "Programs",
                        "Search Services"
                    ],
                    "summary": "Search Programs",
                    "description": "DEPRECATED in v1.3 - see /search/programs",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/programsSearchRequest_Deprecated"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/programsResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "abbreviation": "P1",
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "leadPerson": "Name Nameson",
                                                    "leadPersonDbId": "person1",
                                                    "leadPersonName": "Name Nameson",
                                                    "name": "Program 1",
                                                    "objective": "Global Population Improvement",
                                                    "programDbId": "1",
                                                    "programName": "Program 1"
                                                },
                                                {
                                                    "abbreviation": "P2",
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "leadPerson": "Name Nameson",
                                                    "leadPersonDbId": "person1",
                                                    "leadPersonName": "Name Nameson",
                                                    "name": "Program 2",
                                                    "objective": "XYZ",
                                                    "programDbId": "2",
                                                    "programName": "Program 2"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "program": true
            }
        },
        "/samples": {
            "definition": {
                "get": {
                    "tags": [
                        "Samples"
                    ],
                    "summary": "Get the Samples",
                    "description": "Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.",
                    "parameters": [
                        {
                            "name": "sampleDbId",
                            "in": "query",
                            "description": "the internal DB id for a sample",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationUnitDbId",
                            "in": "query",
                            "description": "the internal DB id for an observation unit where a sample was taken from",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "plateDbId",
                            "in": "query",
                            "description": "the internal DB id for a plate of samples",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "the internal DB id for a germplasm",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/samplesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "1",
                                                    "plantDbId": "null",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 0,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam00",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                },
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "2",
                                                    "plantDbId": "1",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 1,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam01",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Samples"
                    ],
                    "summary": "Add a new Sample",
                    "description": "Call to register the event of a sample being taken. Sample ID is assigned as a result of the operation and returned in response.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sample"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/newSampleDbId"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "sampleDbId": "d3636ed9-f0d5-47fd-90ea-278d95043411",
                                            "sampleId": "d3636ed9-f0d5-47fd-90ea-278d95043411"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "sample": true,
                "newSampleDbId_result": true
            }
        },
        "/samples-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Samples",
                        "Search Services"
                    ],
                    "summary": "Get the Sample Search",
                    "description": "DEPRECATED in v1.3 - see GET /samples",
                    "parameters": [
                        {
                            "name": "sampleDbId",
                            "in": "query",
                            "description": "the internal DB id for a sample",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationUnitDbId",
                            "in": "query",
                            "description": "the internal DB id for an observation unit where a sample was taken from",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "plateDbId",
                            "in": "query",
                            "description": "the internal DB id for a plate of samples",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "the internal DB id for a germplasm",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/samplesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "1",
                                                    "plantDbId": "null",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 0,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam00",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                },
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "2",
                                                    "plantDbId": "1",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 1,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam01",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                },
                "post": {
                    "tags": [
                        "Samples",
                        "Search Services"
                    ],
                    "summary": "Post Sample Search",
                    "description": "DEPRECATED in v1.3 - see GET /search/samples",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sampleSearchRequest_Dep"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/samplesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "1",
                                                    "plantDbId": "null",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 0,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam00",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                },
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "2",
                                                    "plantDbId": "1",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 1,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam01",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "sample": true
            }
        },
        "/samples/{sampleDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Samples"
                    ],
                    "summary": "Get the details of a specific Sample",
                    "description": "Used to retrieve the details of a single Sample from a Sample Tracking system.",
                    "parameters": [
                        {
                            "name": "sampleDbId",
                            "in": "path",
                            "description": "the internal DB id for a sample",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/sampleResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "germplasmDbId": "1",
                                            "notes": "Example Sample",
                                            "observationUnitDbId": "2",
                                            "plantDbId": "1",
                                            "plateDbId": "pl1",
                                            "plateIndex": 1,
                                            "plotDbId": "1",
                                            "sampleDbId": "sam01",
                                            "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                            "sampleType": "DNA",
                                            "studyDbId": "1001",
                                            "takenBy": "Bob",
                                            "tissueType": "Leaf"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "sample": true
            }
        },
        "/scales": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the Scales",
                    "description": "Returns a list of Scales available on a server.\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ScalesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 4,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "dataType": "Numerical",
                                                    "decimalPlaces": 1,
                                                    "name": "Centimeter",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org/s1",
                                                                "type": "OBO",
                                                                "url": "https://ontology.org/s1"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scaleDbId": "s1",
                                                    "scaleName": "Centimeter",
                                                    "validValues": {
                                                        "categories": [],
                                                        "max": 99999,
                                                        "min": 0
                                                    },
                                                    "xref": "xref"
                                                },
                                                {
                                                    "dataType": "Numerical",
                                                    "decimalPlaces": 3,
                                                    "name": "Kilogram",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org/s2",
                                                                "type": "RDF",
                                                                "url": "https://ontology.org/s2"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scaleDbId": "s2",
                                                    "scaleName": "Kilogram",
                                                    "validValues": {
                                                        "categories": [],
                                                        "max": 99999,
                                                        "min": 0
                                                    },
                                                    "xref": "xref"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Add a new Scale",
                    "description": "Create a new scale object in the database",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newScaleRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ScaleResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "dataType": "Code",
                                            "decimalPlaces": 0,
                                            "name": "string",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "string",
                                                        "type": "OBO",
                                                        "url": "string"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "scaleDbId": "90fdedbc-6412-47ac-877b-81dd466fe6d2",
                                            "scaleName": "string",
                                            "validValues": {
                                                "categories": [
                                                    "string"
                                                ],
                                                "max": 0,
                                                "min": 0
                                            },
                                            "xref": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "scale": true
            }
        },
        "/scales/{scaleDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the details of a specific Scale",
                    "description": "Retrieve details about a specific scale\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.",
                    "parameters": [
                        {
                            "name": "scaleDbId",
                            "in": "path",
                            "description": "Id of the scale to retrieve details of.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ScaleResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "dataType": "Numerical",
                                            "decimalPlaces": 1,
                                            "name": "Centimeter",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "https://ontology.org/s1",
                                                        "type": "OBO",
                                                        "url": "https://ontology.org/s1"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "scaleDbId": "s1",
                                            "scaleName": "Centimeter",
                                            "validValues": {
                                                "categories": [],
                                                "max": 99999,
                                                "min": 0
                                            },
                                            "xref": "xref"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Update an existing Scale",
                    "description": "Update the details of an existing scale",
                    "parameters": [
                        {
                            "name": "scaleDbId",
                            "in": "path",
                            "description": "Id of the scale to retrieve details of.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newScaleRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ScaleResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "dataType": "Code",
                                            "decimalPlaces": 0,
                                            "name": "string",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "string",
                                                        "type": "OBO",
                                                        "url": "string"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "scaleDbId": "s1",
                                            "scaleName": "string",
                                            "validValues": {
                                                "categories": [
                                                    "string"
                                                ],
                                                "max": 0,
                                                "min": 0
                                            },
                                            "xref": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "scale": true
            }
        },
        "/search/germplasm": {
            "definition": {
                "post": {
                    "tags": [
                        "Germplasm",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Germplasm",
                    "description": "Search for a set of germplasm based on some criteria\n\nAddresses these needs \n\n- General germplasm search mechanism that accepts POST for complex queries \n\n- Possibility to search germplasm by more parameters than those allowed by the existing germplasm search \n\n- Possibility to get MCPD details by PUID rather than dbId\n\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/germplasmSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/germplasm/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm",
                        "Search Services"
                    ],
                    "summary": "Get the results of a Germplasm search request",
                    "description": "See Search Services for additional implementation details.\nAddresses these needs: 1. General germplasm search mechanism that accepts POST for complex queries 2. possibility to search germplasm by more parameters than those allowed by the existing germplasm search 3. possibility to get MCPD details by PUID rather than dbId",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "accessionNumber": "A000003",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000003",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000003",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "3",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name003",
                                                    "germplasmPUI": "http://pui.per/accession/A000003",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000002",
                                                    "seedSource": "A000001/A000002",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 1"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                },
                                                {
                                                    "accessionNumber": "A000004",
                                                    "acquisitionDate": "2001-01-01",
                                                    "biologicalStatusOfAccessionCode": 500,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000004",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000004",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [],
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "4",
                                                    "germplasmGenus": "Fructus",
                                                    "germplasmName": "Name004",
                                                    "germplasmPUI": "http://pui.per/accession/A000004",
                                                    "germplasmSpecies": "novus",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001/A000003",
                                                    "seedSource": "open pollination",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "variety 4"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasm": true
            }
        },
        "/search/images": {
            "definition": {
                "post": {
                    "tags": [
                        "Images",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Images",
                    "description": "Get filtered set of image meta data\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.  \n\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/imagesSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/images/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Images",
                        "Search Services"
                    ],
                    "summary": "Get the results of an Images search request",
                    "description": "Get filtered set of image meta data\n\nImplementation Notes\n\n- 'imageURL' should be a complete URL decribing the location of the image. There is no BrAPI call for retireiving the image content, so it could be on a different path, or a different host.\n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.  ",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/imagesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "additionalInfo": [],
                                                    "copyright": "Copyright 2018",
                                                    "description": "BrAPI Logo",
                                                    "descriptiveOntologyTerms": [
                                                        "brapi",
                                                        "logo"
                                                    ],
                                                    "imageDbId": "img2",
                                                    "imageFileName": "brapi-logo.svg",
                                                    "imageFileSize": 3676,
                                                    "imageHeight": 56,
                                                    "imageLocation": {
                                                        "geometry": {
                                                            "coordinates": [
                                                                -110.11301,
                                                                50.010082
                                                            ],
                                                            "type": "Point"
                                                        },
                                                        "type": "Feature"
                                                    },
                                                    "imageName": "brapiLogo",
                                                    "imageTimeStamp": "2011-06-14T01:02:03Z",
                                                    "imageURL": "https://brapi.org/assets/images/brapi-logo.svg",
                                                    "imageWidth": 258,
                                                    "mimeType": "image/svg",
                                                    "observationDbIds": [
                                                        "1",
                                                        "2"
                                                    ],
                                                    "observationUnitDbId": "1"
                                                },
                                                {
                                                    "additionalInfo": [],
                                                    "copyright": "Copyright 2019",
                                                    "description": "BrAPI Logo",
                                                    "descriptiveOntologyTerms": [
                                                        "brapi",
                                                        "logo"
                                                    ],
                                                    "imageDbId": "ce15937e-093e-4624-8950-00dab3172e4c",
                                                    "imageFileName": "brapi-logo.svg",
                                                    "imageFileSize": 3676,
                                                    "imageHeight": 56,
                                                    "imageLocation": {
                                                        "geometry": {
                                                            "coordinates": [
                                                                -110.11301,
                                                                50.010082
                                                            ],
                                                            "type": "Point"
                                                        },
                                                        "type": "Feature"
                                                    },
                                                    "imageName": "brapiLogo",
                                                    "imageTimeStamp": "1969-12-31T01:02:03Z",
                                                    "imageURL": "",
                                                    "imageWidth": 258,
                                                    "mimeType": "image/svg",
                                                    "observationDbIds": [
                                                        "1",
                                                        "2"
                                                    ],
                                                    "observationUnitDbId": "11"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "image": true
            }
        },
        "/search/markers": {
            "definition": {
                "post": {
                    "tags": [
                        "Markers",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Markers",
                    "description": "See Search Services for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. \nIf there is none, an empty array is returned. If there is one or more than one match, returns an array of all marker records that match the search criteria. '",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "description": "The database IDs of the markers to search for",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/markersSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/markers/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Markers",
                        "Search Services"
                    ],
                    "summary": "Get the results of a Markers search request",
                    "description": "See Search Services for additional implementation details. Other service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. '",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/markersResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "analysisMethods": [
                                                        "illumina"
                                                    ],
                                                    "defaultDisplayName": "marker1-1",
                                                    "markerDbId": "mr01",
                                                    "markerName": "marker1-1",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10010"
                                                    ],
                                                    "type": "marker"
                                                },
                                                {
                                                    "analysisMethods": [
                                                        "kasp"
                                                    ],
                                                    "defaultDisplayName": "marker1-2",
                                                    "markerDbId": "mr02",
                                                    "markerName": "marker1-2",
                                                    "refAlt": [
                                                        "A",
                                                        "T"
                                                    ],
                                                    "synonyms": [
                                                        "i_11_10020"
                                                    ],
                                                    "type": "marker"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "marker": true
            }
        },
        "/search/observationtables": {
            "definition": {
                "post": {
                    "tags": [
                        "Observations",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for a table of Observations",
                    "description": "Returns a list of observationUnit with the observed Phenotypes.\n\nobservationTimeStamp - Iso Standard 8601.\n\nobservationValue data type inferred from the ontology",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/phenotypesSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/observationtables/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observations",
                        "Search Services"
                    ],
                    "summary": "Get the results of a Observation table search request",
                    "description": "Returns a list of observationUnit with the observed Phenotypes.\n\nobservationTimeStamp - Iso Standard 8601.\n\nobservationValue data type inferred from the ontology\n",
                    "parameters": [
                        {
                            "name": "Accept",
                            "in": "header",
                            "description": "The requested content type which should be returned by the server",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "$ref": "#/components/schemas/WSMIMEDataTypes"
                            },
                            "example": "application/json"
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        },
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitsTableResponse_2"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                [
                                                    "2013",
                                                    "1001",
                                                    "Study 1",
                                                    "1",
                                                    "Location 1",
                                                    "1",
                                                    "Name001",
                                                    "1",
                                                    "1",
                                                    "0",
                                                    "1",
                                                    "TEST",
                                                    "1",
                                                    "1",
                                                    "1.2",
                                                    "4.5",
                                                    "",
                                                    ""
                                                ],
                                                [
                                                    "2011",
                                                    "1003",
                                                    "Study 3",
                                                    "2",
                                                    "Location 2",
                                                    "4",
                                                    "Name004",
                                                    "10",
                                                    "5",
                                                    "1",
                                                    "101",
                                                    "FILLER",
                                                    "1",
                                                    "1",
                                                    "100",
                                                    "",
                                                    "9",
                                                    "2"
                                                ]
                                            ],
                                            "headerRow": [
                                                "year",
                                                "studyDbId",
                                                "studyName",
                                                "locationDbId",
                                                "locationName",
                                                "germplasmDbId",
                                                "germplasmName",
                                                "observationUnitDbId",
                                                "plotNumber",
                                                "replicate",
                                                "blockNumber",
                                                "entryType",
                                                "X",
                                                "Y"
                                            ],
                                            "observationVariableDbIds": [
                                                "MO_123:100002",
                                                "MO_123:100006",
                                                "MO_123:100003",
                                                "MO_123:100004"
                                            ],
                                            "observationVariableNames": [
                                                "Plant height",
                                                "Virus severity",
                                                "Carotenoid",
                                                "Root weight"
                                            ]
                                        }
                                    }
                                },
                                "text/csv": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "\"year\", \"studyDbId\", \"studyName\", \"locationDbId\", \"locationName\", \"germplasmDbId\", \"germplasmName\", \"observationUnitDbId\", \"plotNumber\", \"replicate\", \"blockNumber\", \"entryType\", \"X\", \"Y\", \"MO_123:100002\", \"MO_123:100006\", \"MO_123:100003\", \"MO_123:100004\", \"MO_123:100005\"\n\"2013\", \"1001\", \"Study 1\", \"1\", \"Location 1\", \"1\", \"Name001\", \"1\", \"1\", \"0\", \"1\", \"TEST\", \"1\", \"1\", \"1.2\", \"4.5\", \"\", \"\", \"\"\n\"2011\", \"1003\", \"Study 3\", \"2\", \"Location 2\", \"4\", \"Name004\", \"10\", \"5\", \"1\", \"101\", \"FILLER\", \"1\", \"1\", \"100\", \"\", \"9\", \"2\", \"\"\n\"2011\", \"1003\", \"Study 3\", \"2\", \"Location 2\", \"2\", \"Name002\", \"11\", \"6\", \"1\", \"101\", \"FILLER\", \"1\", \"1\", \"11\", \"\", \"12\", \"5\", \"black\"\n\"2013\", \"1001\", \"Study 1\", \"1\", \"Location 1\", \"1\", \"Name001\", \"2\", \"1\", \"0\", \"1\", \"TEST\", \"1\", \"1\", \"1.1\", \"5.1\", \"\", \"\", \"\""
                                },
                                "text/tsv": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "\"year\"\t\"studyDbId\"\t\"studyName\"\t\"locationDbId\"\t\"locationName\"\t\"germplasmDbId\"\t\"germplasmName\"\t\"observationUnitDbId\"\t\"plotNumber\"\t\"replicate\"\t\"blockNumber\"\t\"entryType\"\t\"X\"\t\"Y\"\t\"MO_123:100002\"\t\"MO_123:100006\"\t\"MO_123:100003\"\t\"MO_123:100004\"\t\"MO_123:100005\"\n\"2013\"\t\"1001\"\t\"Study 1\"\t\"1\"\t\"Location 1\"\t\"1\"\t\"Name001\"\t\"1\"\t\"1\"\t\"0\"\t\"1\"\t\"TEST\"\t\"1\"\t\"1\"\t\"1.2\"\t\"4.5\"\t\"\"\t\"\"\t\"\"\n\"2011\"\t\"1003\"\t\"Study 3\"\t\"2\"\t\"Location 2\"\t\"4\"\t\"Name004\"\t\"10\"\t\"5\"\t\"1\"\t\"101\"\t\"FILLER\"\t\"1\"\t\"1\"\t\"100\"\t\"\"\t\"9\"\t\"2\"\t\"\"\n\"2011\"\t\"1003\"\t\"Study 3\"\t\"2\"\t\"Location 2\"\t\"2\"\t\"Name002\"\t\"11\"\t\"6\"\t\"1\"\t\"101\"\t\"FILLER\"\t\"1\"\t\"1\"\t\"11\"\t\"\"\t\"12\"\t\"5\"\t\"black\"\n\"2013\"\t\"1001\"\t\"Study 1\"\t\"1\"\t\"Location 1\"\t\"1\"\t\"Name001\"\t\"2\"\t\"1\"\t\"0\"\t\"1\"\t\"TEST\"\t\"1\"\t\"1\"\t\"1.1\"\t\"5.1\"\t\"\"\t\"\"\t\"\""
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "WSMIMEDataTypes": true,
                "observationUnitsTableResponse": true
            }
        },
        "/search/observationunits": {
            "definition": {
                "post": {
                    "tags": [
                        "Observations",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Observation Units",
                    "description": "Returns a list of observationUnit with the observed Phenotypes.\n\nSee Search Services for additional implementation details.\n\nUse case - this section allows to get a dataset from multiple studies. It allows to integrate data from several databases.\n\nRefactor note - This call allows to get and integrate portions of multiple phenotyping data matrixes. A proposed evolution allowed to get a list of single observations, this functionality is still possible with this call by specifybing the observation variable, see below.\n\nExample Use cases \n\n- Study a panel of germplasm accross multiple studies\n\n    '{\"germplasmDbIds\": [\"Syrah\", \"34Mtp362\"]}'\n\n- Get all data for a specific study (same as \"/studies/{studyDbId}/observationunits\")\n\n    '{\"studyDbIds\" : [\"383\"]}'\n\n- Get simple atomic phenotyping values \n\n    '{\n\n       \"germplasmDbIds\" : [ \"Syrah\", \"34Mtp362\" ], \n\n       \"observationVariableDbIds\" : [ \"CO_345:0000043\"]\n\n     }'\n\n- Study Locations for adaptation to climate change\n\n    '{\n\n       \"locationDbIds\" : [\"383838\", \"MONTPELLIER\"], \n\n       \"germplasmDbIds\" : [ \"14Mtp361\", \"24Mtp362\", \"34Mtp363\", \"44Mtp364\"]\n\n     }'\n\n- Find phenotypes that are from after a certain timestamp\n\n    '{\n\n       \"observationTimeStampRangeStart\" : \"2013-06-14T23:59:59-04:00\", \n\n       \"observationTimeStampRangeEnd\" : \"2013-06-15T23:59:59-04:00\"\n\n     }'\n     \nobservationTimeStampRangeStart and observationTimeStampRangeEnd use Iso Standard 8601.\n\nobservationValue data type inferred from the ontology",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/phenotypesSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/observationunits/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observations",
                        "Search Services"
                    ],
                    "summary": "Observation Unit Search",
                    "description": "Returns a list of observationUnit with the observed Phenotypes.\n\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitsResponse_2"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "1",
                                                    "entryNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "observationUnitXref": [
                                                        {
                                                            "id": "SAMEA179865230",
                                                            "source": "ebi.biosample"
                                                        },
                                                        {
                                                            "id": "INRA:CoeSt6 _SMH03",
                                                            "source": "gnpis.lot"
                                                        },
                                                        {
                                                            "id": "239865",
                                                            "source": "kernelDB"
                                                        }
                                                    ],
                                                    "observations": [
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "1",
                                                            "observationTimeStamp": "2013-06-14T22:03:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "1.2"
                                                        },
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "2",
                                                            "observationTimeStamp": "2013-06-14T22:04:51-04:00",
                                                            "observationVariableDbId": "MO_123:100006",
                                                            "observationVariableName": "Virus severity",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "4.5"
                                                        },
                                                        {
                                                            "collector": "string",
                                                            "observationDbId": "bb989815-86bf-430b-9d87-054df8919767",
                                                            "observationTimeStamp": "1970-01-18T14:02:52-05:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "string"
                                                        }
                                                    ],
                                                    "pedigree": "",
                                                    "plantNumber": "null",
                                                    "plotNumber": "1",
                                                    "replicate": "0"
                                                },
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "101",
                                                    "entryNumber": "1",
                                                    "entryType": "FILLER",
                                                    "germplasmDbId": "4",
                                                    "germplasmName": "Name004",
                                                    "observationUnitDbId": "10",
                                                    "observationUnitName": "Plant 5",
                                                    "observationUnitXref": [],
                                                    "observations": [
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "16",
                                                            "observationTimeStamp": "2011-06-14T22:06:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": {
                                                                "season": "winter",
                                                                "seasonDbId": "2",
                                                                "year": "2012"
                                                            },
                                                            "value": "100"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "17",
                                                            "observationTimeStamp": "2011-06-14T22:07:51-04:00",
                                                            "observationVariableDbId": "MO_123:100003",
                                                            "observationVariableName": "Carotenoid",
                                                            "season": {
                                                                "season": "winter",
                                                                "seasonDbId": "2",
                                                                "year": "2012"
                                                            },
                                                            "value": "9"
                                                        },
                                                        {
                                                            "collector": "B. Tech",
                                                            "observationDbId": "18",
                                                            "observationTimeStamp": "2011-06-14T22:08:51-04:00",
                                                            "observationVariableDbId": "MO_123:100004",
                                                            "observationVariableName": "Root weight",
                                                            "season": {
                                                                "season": "winter",
                                                                "seasonDbId": "2",
                                                                "year": "2012"
                                                            },
                                                            "value": "2"
                                                        }
                                                    ],
                                                    "pedigree": "",
                                                    "plantNumber": "5",
                                                    "plotNumber": "5",
                                                    "replicate": "1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationUnit": true
            }
        },
        "/search/programs": {
            "definition": {
                "post": {
                    "tags": [
                        "Programs",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Programs",
                    "description": "Advanced searching for the programs resource.\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/programsSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/programs/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Programs",
                        "Search Services"
                    ],
                    "summary": "Get the results of a Programs search request",
                    "description": "Advanced searching for the programs resource.\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/programsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "abbreviation": "P1",
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "leadPerson": "Name Nameson",
                                                    "leadPersonDbId": "person1",
                                                    "leadPersonName": "Name Nameson",
                                                    "name": "Program 1",
                                                    "objective": "Global Population Improvement",
                                                    "programDbId": "1",
                                                    "programName": "Program 1"
                                                },
                                                {
                                                    "abbreviation": "P2",
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "leadPerson": "Name Nameson",
                                                    "leadPersonDbId": "person1",
                                                    "leadPersonName": "Name Nameson",
                                                    "name": "Program 2",
                                                    "objective": "XYZ",
                                                    "programDbId": "2",
                                                    "programName": "Program 2"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "program": true
            }
        },
        "/search/samples": {
            "definition": {
                "post": {
                    "tags": [
                        "Samples",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Samples",
                    "description": "Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sampleSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/samples/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Samples",
                        "Search Services"
                    ],
                    "summary": "Get the results of a Samples search request",
                    "description": "Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/samplesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "1",
                                                    "plantDbId": "null",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 0,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam00",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                },
                                                {
                                                    "germplasmDbId": "1",
                                                    "notes": "Example Sample",
                                                    "observationUnitDbId": "2",
                                                    "plantDbId": "1",
                                                    "plateDbId": "pl1",
                                                    "plateIndex": 1,
                                                    "plotDbId": "1",
                                                    "sampleDbId": "sam01",
                                                    "sampleTimestamp": "2018-01-01T00:00:00-05:00",
                                                    "sampleType": "DNA",
                                                    "studyDbId": "1001",
                                                    "takenBy": "Bob",
                                                    "tissueType": "Leaf"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "sample": true
            }
        },
        "/search/studies": {
            "definition": {
                "post": {
                    "tags": [
                        "Studies",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Studies",
                    "description": "Get list of studies\nStartDate and endDate should be ISO8601 format for dates\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "description": "Study Search request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/studySearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/studies/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Search Services"
                    ],
                    "summary": "Get the results of a Studies search request",
                    "description": "Get list of studies\n\nStartDate and endDate should be ISO8601 format for dates\n\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studiesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "studyObjective": "Increase yield"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2014-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 1",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "fall",
                                                            "seasonDbId": "1",
                                                            "year": "2011"
                                                        },
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2013-01-01",
                                                    "studyDbId": "1001",
                                                    "studyName": "Study 1",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                },
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "publications": "pmid:23643517318968"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2015-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 2",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2014-01-01",
                                                    "studyDbId": "1002",
                                                    "studyName": "Study 2",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "studySummary": true
            }
        },
        "/search/variables": {
            "definition": {
                "post": {
                    "tags": [
                        "Observation Variables",
                        "Search Services"
                    ],
                    "summary": "Submit a search request for Observation Variables",
                    "description": "Search observation variables.\n\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/observationVariableSearchRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/successfulSearchResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "searchResultDbId": "551ae08c-4548-4bde-ad70-f23beb25e2ea"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "/search/variables/{searchResultsDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables",
                        "Search Services"
                    ],
                    "summary": "Get the results of a Observation Variable search request",
                    "description": "Search observation variables.\n\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "searchResultsDbId",
                            "in": "path",
                            "description": "Permanent unique identifier which references the search results",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationVariablesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Numeric",
                                                        "description": "Standard rolled measuring tape",
                                                        "formula": "a^2 + b^2 = c^2",
                                                        "methodDbId": "m1",
                                                        "methodName": "Tape Measure",
                                                        "name": "Tape Measure",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m1",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/m1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Plant height",
                                                    "observationVariableDbId": "MO_123:100002",
                                                    "observationVariableName": "Plant height",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Numerical",
                                                        "decimalPlaces": 1,
                                                        "name": "Centimeter",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s1",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/s1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s1",
                                                        "scaleName": "Centimeter",
                                                        "validValues": {
                                                            "categories": [],
                                                            "max": 99999,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "plant height",
                                                        "class": "Numeric",
                                                        "description": "plant height",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "H",
                                                        "name": "Plant Height",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t1",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/t1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t1",
                                                        "traitName": "Plant Height",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100002"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Categorical",
                                                        "description": "Comparing sample color to standard color palette",
                                                        "formula": "NA",
                                                        "methodDbId": "m3",
                                                        "methodName": "Standard Color Palette",
                                                        "name": "Standard Color Palette",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m3",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/m3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Carotenoid",
                                                    "observationVariableDbId": "MO_123:100003",
                                                    "observationVariableName": "Carotenoid",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Nominal",
                                                        "decimalPlaces": 0,
                                                        "name": "Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s3",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/s3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s3",
                                                        "scaleName": "Color",
                                                        "validValues": {
                                                            "categories": [
                                                                "dark red",
                                                                "red",
                                                                "dark blue",
                                                                "blue",
                                                                "black"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "leaf color",
                                                        "class": "Categorical",
                                                        "description": "color of leaf sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "LC",
                                                        "name": "Leaf Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t3",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/t3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t3",
                                                        "traitName": "Leaf Color",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100003"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationVariable": true
            }
        },
        "/seasons": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Get the Seasons",
                    "description": "Call to retrive all seasons in the database.\n\nA season is made of 2 parts\n\n- The primary year \n\n- A term which defines a segment of the year. \nThis could be a traditional season, like \"Spring\" or \"Summer\"; \nthis could be a month, like \"May\" or \"June\"; \nor this could be an arbitrary season name which is meaningful to the breeding program like \"PlantingTime_3\" or \"Season E\"",
                    "parameters": [
                        {
                            "name": "seasonDbId",
                            "in": "query",
                            "description": "The unique identifier for a season",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "season",
                            "in": "query",
                            "description": "The term to describe a given season. Example \"Spring\" OR \"May\" OR \"PlantingTime7\"",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            },
                            "example": "Spring"
                        },
                        {
                            "name": "year",
                            "in": "query",
                            "description": "The 4 digit year of a season. Example \"2017\"",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            },
                            "example": 2017
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/seasonsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 10,
                                                "totalPages": 5
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "season": "fall",
                                                    "seasonDbId": "1",
                                                    "year": "2011"
                                                },
                                                {
                                                    "season": "winter",
                                                    "seasonDbId": "2",
                                                    "year": "2012"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "season": true
            }
        },
        "/studies": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Get the Studies",
                    "description": "Get list of studies\n\nImplementation Notes\n\nStartDate and endDate should be ISO8601 format for dates\n\nSee Search Services for additional implementation details.",
                    "parameters": [
                        {
                            "name": "commonCropName",
                            "in": "query",
                            "description": "Common name for the crop associated with this study",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "studyType",
                            "in": "query",
                            "description": "DEPRECATED in v1.3 - see \"studyTypeDbId\"",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "studyTypeDbId",
                            "in": "query",
                            "description": "Filter based on study type unique identifier",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "Program filter to only return studies associated with given program id.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "Filter by location",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "seasonDbId",
                            "in": "query",
                            "description": "Filter by season or year",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "trialDbId",
                            "in": "query",
                            "description": "Filter by trial",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "Filter by study DbId",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmDbIds",
                            "in": "query",
                            "description": "DEPRECATED in v1.3 - see /search/studies",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "observationVariableDbIds",
                            "in": "query",
                            "description": "DEPRECATED in v1.3 - see /search/studies",
                            "required": false,
                            "deprecated": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "active",
                            "in": "query",
                            "description": "Filter active status true/false.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "sortBy",
                            "in": "query",
                            "description": "Name of the field to sort by.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "studyDbId",
                                    "trialDbId",
                                    "programDbId",
                                    "locationDbId",
                                    "seasonDbId",
                                    "studyTypeDbId",
                                    "studyName",
                                    "studyLocation",
                                    "programName"
                                ]
                            }
                        },
                        {
                            "name": "sortOrder",
                            "in": "query",
                            "description": "Sort order direction. Ascending/Descending.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "ASC",
                                    "desc",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studiesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "studyObjective": "Increase yield"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2014-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 1",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "fall",
                                                            "seasonDbId": "1",
                                                            "year": "2011"
                                                        },
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2013-01-01",
                                                    "studyDbId": "1001",
                                                    "studyName": "Study 1",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                },
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "publications": "pmid:23643517318968"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2015-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 2",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2014-01-01",
                                                    "studyDbId": "1002",
                                                    "studyName": "Study 2",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "studySummary": true
            }
        },
        "/studies-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Search Services"
                    ],
                    "summary": "Search Studies (GET)",
                    "description": "DEPRECATED in v1.3 - see GET /studies",
                    "parameters": [
                        {
                            "name": "studyType",
                            "in": "query",
                            "description": "Filter based on study type e.g. Nursery, Trial or Genotype.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "Program filter to only return studies associated with given program id.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "Filter by location",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "seasonDbId",
                            "in": "query",
                            "description": "Filter by season or year",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "trialDbId",
                            "in": "query",
                            "description": "Filter by trial",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "Filter by study DbId",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "germplasmDbIds",
                            "in": "query",
                            "description": "Filter studies where specified germplasm have been used/tested",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "observationVariableDbIds",
                            "in": "query",
                            "description": "Filter studies where specified observation variables have been measured",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "active",
                            "in": "query",
                            "description": "Filter active status true/false.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "sortBy",
                            "in": "query",
                            "description": "Sort order. Name of the field to sort by.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sortOrder",
                            "in": "query",
                            "description": "Sort order direction. Ascending/Descending.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studiesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "studyObjective": "Increase yield"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2014-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 1",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "fall",
                                                            "seasonDbId": "1",
                                                            "year": "2011"
                                                        },
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2013-01-01",
                                                    "studyDbId": "1001",
                                                    "studyName": "Study 1",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                },
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "publications": "pmid:23643517318968"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2015-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 2",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2014-01-01",
                                                    "studyDbId": "1002",
                                                    "studyName": "Study 2",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                },
                "post": {
                    "tags": [
                        "Studies",
                        "Search Services"
                    ],
                    "summary": "Search Studies (GET)",
                    "description": "DEPRECATED in v1.3 - see /search/studies",
                    "requestBody": {
                        "description": "Study Search request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/studySearchRequest_Dep"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studiesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "studyObjective": "Increase yield"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2014-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 1",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "fall",
                                                            "seasonDbId": "1",
                                                            "year": "2011"
                                                        },
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2013-01-01",
                                                    "studyDbId": "1001",
                                                    "studyName": "Study 1",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                },
                                                {
                                                    "active": "true",
                                                    "additionalInfo": {
                                                        "publications": "pmid:23643517318968"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2015-01-01",
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "name": "Study 2",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "seasons": [
                                                        {
                                                            "season": "winter",
                                                            "seasonDbId": "2",
                                                            "year": "2012"
                                                        }
                                                    ],
                                                    "startDate": "2014-01-01",
                                                    "studyDbId": "1002",
                                                    "studyName": "Study 2",
                                                    "studyType": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study",
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "studySummary": true
            }
        },
        "/studies/{studyDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Get the details for a specific Study",
                    "description": "Retrieve the information of the study required for field data collection\n\nAn additionalInfo field was added to provide a controlled vocabulary for less common data fields.\n\nLinked data\n\n- Observation Variables: ```/brapi/v1/studies/{studyDbId}/observationvariables``` \n\n- Germplasm: ```/brapi/v1/studies/{studyDbId}/germplasm``` \n\n- Observation Units: ```/brapi/v1/studies/{studyDbId}/observationunits``` \n\n- Layout: ```brapi/v1/studies/{studyDbId}/layout```",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studyResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "active": "true",
                                            "additionalInfo": {
                                                "studyObjective": "Increase yield"
                                            },
                                            "commonCropName": "Tomatillo",
                                            "contacts": [
                                                {
                                                    "contactDbId": "1",
                                                    "email": "a.breeder@brapi.org",
                                                    "instituteName": "Plant Science Institute",
                                                    "name": "A. Breeder",
                                                    "orcid": "0000-0002-0607-8728",
                                                    "type": "Breeder"
                                                },
                                                {
                                                    "contactDbId": "2",
                                                    "email": "b.breeder@brapi.org",
                                                    "instituteName": "Plant Science Institute",
                                                    "name": "B. Breeder",
                                                    "orcid": "0000-0002-0607-8729",
                                                    "type": "Breeder"
                                                }
                                            ],
                                            "dataLinks": [
                                                {
                                                    "dataLinkName": "image-archive12.zip",
                                                    "name": "image-archive12.zip",
                                                    "type": "Image archive",
                                                    "url": "http://data.inra.fr/archive/multi-spect-flowering.zip"
                                                },
                                                {
                                                    "dataLinkName": "image-archive13.zip",
                                                    "name": "image-archive13.zip",
                                                    "type": "Image archive",
                                                    "url": "http://data.inra.fr/archive/biomass-img.zip"
                                                }
                                            ],
                                            "documentationURL": "https://brapi.org",
                                            "endDate": "2014-01-01",
                                            "lastUpdate": {
                                                "timestamp": "2015-01-01T00:00:00-05:00",
                                                "version": "1.1"
                                            },
                                            "license": "https://creativecommons.org/licenses/by/4.0",
                                            "location": {
                                                "abbreviation": "L1",
                                                "abreviation": "L1",
                                                "additionalInfo": {
                                                    "adm1": "Junin",
                                                    "adm2": "Chanchamayo",
                                                    "adm3": "San Ramon",
                                                    "annualMeanTemperature": "23",
                                                    "annualTotalPrecipitation": "360",
                                                    "cont": "South America",
                                                    "creg": "LAC",
                                                    "local": "San Ramon"
                                                },
                                                "altitude": 828,
                                                "countryCode": "PER",
                                                "countryName": "Peru",
                                                "documentationURL": "https://brapi.org",
                                                "instituteAddress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                                "instituteAdress": "71 Pilgrim Avenue Chevy Chase MD 20815",
                                                "instituteName": "Plant Science Institute",
                                                "latitude": -11.1274995803833,
                                                "locationDbId": "1",
                                                "locationName": "Location 1",
                                                "locationType": "Storage location",
                                                "longitude": -75.35639190673828,
                                                "name": "Location 1"
                                            },
                                            "seasons": [
                                                "fall 2011",
                                                "winter 2012"
                                            ],
                                            "startDate": "2013-01-01",
                                            "studyDbId": "1001",
                                            "studyDescription": "Field yield phenotyping study",
                                            "studyName": "Study 1",
                                            "studyType": "Yield study",
                                            "studyTypeDbId": "2",
                                            "studyTypeName": "Yield study",
                                            "trialDbId": "101",
                                            "trialName": "Peru Yield Trial 1"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "study": true
            }
        },
        "/studies/{studyDbId}/germplasm": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Germplasm"
                    ],
                    "summary": "Get the Germplasm associated with a specific Study",
                    "description": "Get the available Germplasm which are associated with this study",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/germplasmSummaryListResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 4,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "accessionNumber": "A000001",
                                                    "acquisitionDate": "1984-01-01",
                                                    "biologicalStatusOfAccessionCode": 300,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000001",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000001",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [
                                                        {
                                                            "donorAccessionNumber": "A001230",
                                                            "donorInstituteCode": "INRA",
                                                            "germplasmPUI": "https://doi.org/10.1109/5.771073"
                                                        },
                                                        {
                                                            "donorAccessionNumber": "A004560",
                                                            "donorInstituteCode": "INRA",
                                                            "germplasmPUI": "https://doi.org/10.1109/5.231123"
                                                        }
                                                    ],
                                                    "entryNumber": "2",
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "germplasmPUI": "http://pui.per/accession/A000001",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001",
                                                    "seedSource": "open pollination",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "landrace 1"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                },
                                                {
                                                    "accessionNumber": "A000001",
                                                    "acquisitionDate": "1984-01-01",
                                                    "biologicalStatusOfAccessionCode": 300,
                                                    "breedingMethodDbId": "bm1",
                                                    "commonCropName": "G000001",
                                                    "countryOfOriginCode": "COUNTRY1",
                                                    "defaultDisplayName": "G000001",
                                                    "documentationURL": "https://brapi.org",
                                                    "donors": [
                                                        {
                                                            "donorAccessionNumber": "A001230",
                                                            "donorInstituteCode": "INRA",
                                                            "germplasmPUI": "https://doi.org/10.1109/5.771073"
                                                        },
                                                        {
                                                            "donorAccessionNumber": "A004560",
                                                            "donorInstituteCode": "INRA",
                                                            "germplasmPUI": "https://doi.org/10.1109/5.231123"
                                                        }
                                                    ],
                                                    "entryNumber": "2",
                                                    "genus": "Fructus",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "germplasmPUI": "http://pui.per/accession/A000001",
                                                    "instituteCode": "PER001",
                                                    "instituteName": "INST1",
                                                    "pedigree": "A000001",
                                                    "seedSource": "open pollination",
                                                    "species": "novus",
                                                    "speciesAuthority": "L",
                                                    "subtaxa": "subtaxa",
                                                    "subtaxaAuthority": "N",
                                                    "synonyms": [
                                                        "landrace 1"
                                                    ],
                                                    "taxonIds": [
                                                        {
                                                            "sourceName": "ncbiTaxon",
                                                            "taxonId": "2340"
                                                        },
                                                        {
                                                            "sourceName": "ciradTaxon",
                                                            "taxonId": "E312"
                                                        }
                                                    ],
                                                    "typeOfGermplasmStorageCode": []
                                                }
                                            ],
                                            "studyDbId": "1001",
                                            "trialName": "Peru Yield Trial 1"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "germplasmSummary": true
            }
        },
        "/studies/{studyDbId}/layout": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Get the plot layout details for a specific Study",
                    "description": "DEPRECATED in v1.3 - see `GET /studies/{studyDbId}/layouts` (pluralized)",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitPositionsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 4,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "additionalInfo": [],
                                                    "blockNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationLevel": "plot",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "replicate": "0",
                                                    "studyDbId": "1001"
                                                },
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "additionalInfo": [],
                                                    "blockNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationLevel": "plant",
                                                    "observationUnitDbId": "2",
                                                    "observationUnitName": "Plant 1",
                                                    "replicate": "0",
                                                    "studyDbId": "1001"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    },
                    "deprecated": true
                },
                "put": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Update an existing Study with new layout details",
                    "description": "DEPRECATED in v1.3 - see `PUT /studies/{studyDbId}/layouts` (pluralized)",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "description": "The request body for updateing a study layout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/studyLayoutRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitPositionsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "additionalInfo": [],
                                                    "blockNumber": "0",
                                                    "entryType": "CHECK",
                                                    "germplasmDbId": "2",
                                                    "germplasmName": "Name002",
                                                    "observationLevel": "plot",
                                                    "observationUnitDbId": "11",
                                                    "observationUnitName": "Plot 6",
                                                    "replicate": "0",
                                                    "studyDbId": "1003"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "observationUnitPosition": true
            }
        },
        "/studies/{studyDbId}/layouts": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Get the plot layout details for a specific Study",
                    "description": "Retrive the layout details for a study. Returns an array of observation unit position data which describes where each unit and germplasm is located within the study layout\n\nRetrieve the plot layout of the study with id {id}.\n\nFor each observationUnit within a study, return the `block`, `replicate`, and `entryType` values as well as the `X` and `Y` coordinates. `entryType` can be \"check\", \"test\", or \"filler\".\n\nAlso return some human readable meta data about the observationUnit and germplasm.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitPositionsResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 4,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "additionalInfo": [],
                                                    "blockNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationLevel": "plot",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "replicate": "0",
                                                    "studyDbId": "1001"
                                                },
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "additionalInfo": [],
                                                    "blockNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationLevel": "plant",
                                                    "observationUnitDbId": "2",
                                                    "observationUnitName": "Plant 1",
                                                    "replicate": "0",
                                                    "studyDbId": "1001"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Update an existing Study with new layout details",
                    "description": "Modify a study layout\n\nUpdate the layout data for a set of observation units within a study. Each layout object is a subset of fields within an observationUnit, so it doesnt make sense to create a new layout object by itself.\n\nImplementation Notes:\n\n+ If any of the fields in the request object is missing, that piece of data will not be updated. \n\n+ If an observationUnitDbId can not be found within the given study, an error will be returned. \n\n+ `entryType` can have the values \"check\", \"test\", or \"filler\". \n\n+ The response should match the structure of the response from `GET studies/{studyDbId}/layout`, but it should only contain the layout objects which have been updated by the PUT request. Also, pagination is not available in the response.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "description": "The request body for updateing a study layout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/studyLayoutRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitPositionsResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "additionalInfo": [],
                                                    "blockNumber": "0",
                                                    "entryType": "CHECK",
                                                    "germplasmDbId": "2",
                                                    "germplasmName": "Name002",
                                                    "observationLevel": "plot",
                                                    "observationUnitDbId": "11",
                                                    "observationUnitName": "Plot 6",
                                                    "replicate": "0",
                                                    "studyDbId": "1003"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationUnitPosition": true
            }
        },
        "/studies/{studyDbId}/observationVariables": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observation Variables",
                        "Deprecated"
                    ],
                    "summary": "Deprecated Retrieve study observation variables",
                    "description": "\n\n\ntest-server.brapi.org/brapi/v1/studies/{studyDbId}/observationVariables",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "string database unique identifier",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studyObservationVariablesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 5,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "string",
                                                        "description": "string",
                                                        "formula": "string",
                                                        "methodDbId": "m1",
                                                        "methodName": "string",
                                                        "name": "string",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "string",
                                                                    "type": "OBO",
                                                                    "url": "string"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "string"
                                                    },
                                                    "name": "Plant height",
                                                    "observationVariableDbId": "MO_123:100002",
                                                    "observationVariableName": "Plant height",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Code",
                                                        "decimalPlaces": 0,
                                                        "name": "string",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "string",
                                                                    "type": "OBO",
                                                                    "url": "string"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s1",
                                                        "scaleName": "string",
                                                        "validValues": {
                                                            "categories": [
                                                                "string"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "string"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [
                                                            "string"
                                                        ],
                                                        "attribute": "string",
                                                        "class": "string",
                                                        "description": "string",
                                                        "entity": "string",
                                                        "mainAbbreviation": "string",
                                                        "name": "string",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "string",
                                                                    "type": "OBO",
                                                                    "url": "string"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "string",
                                                        "synonyms": [
                                                            "string"
                                                        ],
                                                        "traitDbId": "t1",
                                                        "traitName": "string",
                                                        "xref": "string"
                                                    },
                                                    "xref": "MO_123:100002"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Categorical",
                                                        "description": "Comparing sample color to standard color palette",
                                                        "formula": "NA",
                                                        "methodDbId": "m3",
                                                        "methodName": "Standard Color Palette",
                                                        "name": "Standard Color Palette",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m3",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/m3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Carotenoid",
                                                    "observationVariableDbId": "MO_123:100003",
                                                    "observationVariableName": "Carotenoid",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Nominal",
                                                        "decimalPlaces": 0,
                                                        "name": "Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s3",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/s3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s3",
                                                        "scaleName": "Color",
                                                        "validValues": {
                                                            "categories": [
                                                                "dark red",
                                                                "red",
                                                                "dark blue",
                                                                "blue",
                                                                "black"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "leaf color",
                                                        "class": "Categorical",
                                                        "description": "color of leaf sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "LC",
                                                        "name": "Leaf Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t3",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/t3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t3",
                                                        "traitName": "Leaf Color",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100003"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Numeric",
                                                        "description": "Dried sample on electric scale",
                                                        "formula": "NA",
                                                        "methodDbId": "m2",
                                                        "methodName": "Dry Electric Scale",
                                                        "name": "Dry Electric Scale",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m2",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/m2"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Root weight",
                                                    "observationVariableDbId": "MO_123:100004",
                                                    "observationVariableName": "Root weight",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Numerical",
                                                        "decimalPlaces": 3,
                                                        "name": "Kilogram",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s2",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/s2"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s2",
                                                        "scaleName": "Kilogram",
                                                        "validValues": {
                                                            "categories": [],
                                                            "max": 99999,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "root weight",
                                                        "class": "Numeric",
                                                        "description": "root weight",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "RW",
                                                        "name": "Root Weight",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t2",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/t2"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t2",
                                                        "traitName": "Root Weight",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100004"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Categorical",
                                                        "description": "Comparing sample color to standard color palette",
                                                        "formula": "NA",
                                                        "methodDbId": "m3",
                                                        "methodName": "Standard Color Palette",
                                                        "name": "Standard Color Palette",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m3",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/m3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Root color",
                                                    "observationVariableDbId": "MO_123:100005",
                                                    "observationVariableName": "Root color",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Nominal",
                                                        "decimalPlaces": 0,
                                                        "name": "Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s3",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/s3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s3",
                                                        "scaleName": "Color",
                                                        "validValues": {
                                                            "categories": [
                                                                "dark red",
                                                                "red",
                                                                "dark blue",
                                                                "blue",
                                                                "black"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "root color",
                                                        "class": "Categorical",
                                                        "description": "color of root sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "RC",
                                                        "name": "Root Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t4",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/t4"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t4",
                                                        "traitName": "Root Color",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100005"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Percentage",
                                                        "description": "Image analysis of sample photo",
                                                        "formula": "Bobs Color Threshold Tool",
                                                        "methodDbId": "m4",
                                                        "methodName": "Image analysis",
                                                        "name": "Image analysis",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m4",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/m4"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "https://bobsimageanalysis.com"
                                                    },
                                                    "name": "Virus severity",
                                                    "observationVariableDbId": "MO_123:100006",
                                                    "observationVariableName": "Virus severity",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Numerical",
                                                        "decimalPlaces": 0,
                                                        "name": "Percentage",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s4",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/s4"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s4",
                                                        "scaleName": "Percentage",
                                                        "validValues": {
                                                            "categories": [],
                                                            "max": 100,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "Virus severity",
                                                        "class": "Percentage",
                                                        "description": "Percentage of contaminated sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "LC",
                                                        "name": "Virus severity",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t5",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/t5"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t5",
                                                        "traitName": "Virus severity",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100006"
                                                }
                                            ],
                                            "studyDbId": "1001",
                                            "trialName": "Peru Yield Trial 1"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "observationVariable": true
            }
        },
        "/studies/{studyDbId}/observations": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Get the Observations associated with a specific Study",
                    "description": "Retrieve all observations where there are measurements for the given observation variables.\n\nobservationTimestamp should be ISO8601 format with timezone -> YYYY-MM-DDThh:mm:ss+hhmm",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationVariableDbIds",
                            "in": "query",
                            "description": "Numeric `id` of that variable (combination of trait, unit and method)",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 9,
                                                "totalPages": 5
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationDbId": "1",
                                                    "observationLevel": "plot",
                                                    "observationTimeStamp": "2013-06-14T22:03:51-04:00",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "observationVariableDbId": "MO_123:100002",
                                                    "observationVariableName": "Plant height",
                                                    "operator": "Bob",
                                                    "season": {
                                                        "season": "fall",
                                                        "seasonDbId": "1",
                                                        "year": "2011"
                                                    },
                                                    "studyDbId": "1001",
                                                    "uploadedBy": "Bob",
                                                    "value": "1.2"
                                                },
                                                {
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationDbId": "2",
                                                    "observationLevel": "plot",
                                                    "observationTimeStamp": "2013-06-14T22:04:51-04:00",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "observationVariableDbId": "MO_123:100006",
                                                    "observationVariableName": "Virus severity",
                                                    "operator": "Bob",
                                                    "season": {
                                                        "season": "fall",
                                                        "seasonDbId": "1",
                                                        "year": "2011"
                                                    },
                                                    "studyDbId": "1001",
                                                    "uploadedBy": "Bob",
                                                    "value": "4.5"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Update the Observations of a specific Study",
                    "description": "Implementation Guidelines: \n\n+ If an `observationDbId` is \"null\" or an empty string in the request, a NEW observation should be created for the given study and observationUnit \n\n+ If an `observationDbId` is populated but not found in the database, a NEW observation should be created for the given study and observationUnit AND an NEW `observationDbId` should be assigned to it. A warning should be returned to the client. \n\n+ If an `observationDbId` is populated and found in the database, but the existing entry is not associated with the given study or observationUnit, a NEW observation should be created for the given study and observationUnit AND an NEW `observationDbId` should be assigned to it. A warning should be returned to the client. \n\n+ If an `observationDbId` is populated and found in the database and is associated with the given study and observationUnit, then it should be updated with the new data given.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newObservationsRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/newObservationDbIdsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "observations": [
                                                {
                                                    "observationDbId": "19",
                                                    "observationUnitDbId": "11",
                                                    "observationVariableDbId": "MO_123:100002"
                                                },
                                                {
                                                    "observationDbId": "20",
                                                    "observationUnitDbId": "11",
                                                    "observationVariableDbId": "MO_123:100003"
                                                },
                                                {
                                                    "observationDbId": "21",
                                                    "observationUnitDbId": "11",
                                                    "observationVariableDbId": "MO_123:100005"
                                                },
                                                {
                                                    "observationDbId": "22",
                                                    "observationUnitDbId": "11",
                                                    "observationVariableDbId": "MO_123:100004"
                                                },
                                                {
                                                    "observationDbId": "1f55443e-c7e1-4b71-bc9c-02ddbca9ab7d",
                                                    "observationUnitDbId": "11",
                                                    "observationVariableDbId": "MO_123:100002"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observation": true,
                "newObservationDbIds": true
            }
        },
        "/studies/{studyDbId}/observationunits": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Get the Observation Units associated with a specific Study",
                    "description": "The main API call for field data collection, to retrieve all the observation units within a study.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "observationLevel",
                            "in": "query",
                            "description": "The granularity level of observation units. Either `plotNumber` or `plantNumber` fields will be relavant depending on whether granularity is plot or plant respectively.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationUnitsResponse_2"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 4,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "1",
                                                    "entryNumber": "1",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationUnitDbId": "1",
                                                    "observationUnitName": "Plot 1",
                                                    "observationUnitXref": [
                                                        {
                                                            "id": "SAMEA179865230",
                                                            "source": "ebi.biosample"
                                                        },
                                                        {
                                                            "id": "INRA:CoeSt6 _SMH03",
                                                            "source": "gnpis.lot"
                                                        },
                                                        {
                                                            "id": "239865",
                                                            "source": "kernelDB"
                                                        }
                                                    ],
                                                    "observations": [
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "1",
                                                            "observationTimeStamp": "2013-06-14T22:03:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "1.2"
                                                        },
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "2",
                                                            "observationTimeStamp": "2013-06-14T22:04:51-04:00",
                                                            "observationVariableDbId": "MO_123:100006",
                                                            "observationVariableName": "Virus severity",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "4.5"
                                                        },
                                                        {
                                                            "collector": "string",
                                                            "observationDbId": "bb989815-86bf-430b-9d87-054df8919767",
                                                            "observationTimeStamp": "1970-01-18T14:02:52-05:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "string"
                                                        }
                                                    ],
                                                    "pedigree": "A000001/A000002",
                                                    "plantNumber": "0",
                                                    "plotNumber": "1",
                                                    "replicate": "0"
                                                },
                                                {
                                                    "X": "1",
                                                    "Y": "1",
                                                    "blockNumber": "1",
                                                    "entryNumber": "2",
                                                    "entryType": "TEST",
                                                    "germplasmDbId": "1",
                                                    "germplasmName": "Name001",
                                                    "observationUnitDbId": "2",
                                                    "observationUnitName": "Plant 1",
                                                    "observationUnitXref": [
                                                        {
                                                            "id": "SAMEA179865815",
                                                            "source": "ebi.biosample"
                                                        },
                                                        {
                                                            "id": "INRA:CoeSt6 _SMH13",
                                                            "source": "gnpis.lot"
                                                        },
                                                        {
                                                            "id": "239167",
                                                            "source": "kernelDB"
                                                        }
                                                    ],
                                                    "observations": [
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "3",
                                                            "observationTimeStamp": "2013-06-14T22:05:51-04:00",
                                                            "observationVariableDbId": "MO_123:100002",
                                                            "observationVariableName": "Plant height",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "1.1"
                                                        },
                                                        {
                                                            "collector": "A. Technician",
                                                            "observationDbId": "4",
                                                            "observationTimeStamp": "2013-06-14T22:06:51-04:00",
                                                            "observationVariableDbId": "MO_123:100006",
                                                            "observationVariableName": "Virus severity",
                                                            "season": {
                                                                "season": "fall",
                                                                "seasonDbId": "1",
                                                                "year": "2011"
                                                            },
                                                            "value": "5.1"
                                                        }
                                                    ],
                                                    "pedigree": "A000001/A000002",
                                                    "plantNumber": "1",
                                                    "plotNumber": "1",
                                                    "replicate": "0"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Update the Observation Units for a specific Study",
                    "description": "Use this call for uploading new Observations as JSON to a system.\n\nNote: If ''observationUnitDbId'' or ''observationDbId'' is populated, they should be considered updates to existing records. \nIf an existing record of that DbId is not found, the document should be treated as new records and assigned new DbIds. \nIf ''observationUnitDbId'' or ''observationDbId'' is un-populated (empty string or null) the document should be treated as new records and assigned new DbIds.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "newObservationUnitRequestList",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/newObservationUnitRequest"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/newObservationUnitDbIdsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": [
                                                {
                                                    "code": "200",
                                                    "message": "Upload Successful",
                                                    "messageType": "INFO"
                                                }
                                            ]
                                        },
                                        "result": {
                                            "observationUnitDbIds": [
                                                "11"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Studies",
                        "Observations",
                        "Deprecated"
                    ],
                    "summary": "Deprecated Save Observation Unit Phenotypes",
                    "description": "This call has been deprecated in V1.1. Use instead: \"PUT /studies/{studyDbId}/observationunits\" and \"PUT /studies/{studyDbId}/observationunits/zip\"",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "(default is JSON, but can be zip) In case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call.",
                            "required": true,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newObservationsRequestWrapperDeprecated"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/newObservationUnitDbIdsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 1,
                                                "totalCount": 1,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "observationUnitDbIds": [
                                                "1"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "observationUnit": true,
                "newObservationUnitDbIds": true
            }
        },
        "/studies/{studyDbId}/observationunits/zip": {
            "definition": {
                "post": {
                    "tags": [
                        "Observations",
                        "Studies"
                    ],
                    "summary": "Use this call for uploading new Observations as a Batched Zip File to a system.",
                    "description": "If ''observationUnitDbId'' or ''observationDbId'' is populated, they should be considered updates to existing records. \n\nIf an existing record of that DbId is not found, the document should be treated as new records and assigned new DbIds. \n\nIf ''observationUnitDbId'' or ''observationDbId'' is un-populated (empty string or null) the document should be treated as new records and assigned new DbIds.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/newObservationUnitDbIdsResponse"
                                    },
                                    "examples": {
                                        "response": {
                                            "value": {
                                                "metadata": {
                                                    "datafiles": [],
                                                    "pagination": [],
                                                    "status": []
                                                },
                                                "result": {
                                                    "observationUnitDbIds": [
                                                        "observationUnitDbIds0",
                                                        "observationUnitDbIds1"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "newObservationUnitDbIds": true
            }
        },
        "/studies/{studyDbId}/observationvariables": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observation Variables"
                    ],
                    "summary": "Get the Observation Variables for a specific Study",
                    "description": "List all the observation variables measured in the study.\n\nRefer to the data type definition of variables in `/Specification/ObservationVariables/README.md`.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "string database unique identifier",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studyObservationVariablesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 5,
                                                "totalPages": 3
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "string",
                                                        "description": "string",
                                                        "formula": "string",
                                                        "methodDbId": "m1",
                                                        "methodName": "string",
                                                        "name": "string",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "string",
                                                                    "type": "OBO",
                                                                    "url": "string"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "string"
                                                    },
                                                    "name": "Plant height",
                                                    "observationVariableDbId": "MO_123:100002",
                                                    "observationVariableName": "Plant height",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Code",
                                                        "decimalPlaces": 0,
                                                        "name": "string",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "string",
                                                                    "type": "OBO",
                                                                    "url": "string"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s1",
                                                        "scaleName": "string",
                                                        "validValues": {
                                                            "categories": [
                                                                "string"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "string"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [
                                                            "string"
                                                        ],
                                                        "attribute": "string",
                                                        "class": "string",
                                                        "description": "string",
                                                        "entity": "string",
                                                        "mainAbbreviation": "string",
                                                        "name": "string",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "string",
                                                                    "type": "OBO",
                                                                    "url": "string"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "string",
                                                        "synonyms": [
                                                            "string"
                                                        ],
                                                        "traitDbId": "t1",
                                                        "traitName": "string",
                                                        "xref": "string"
                                                    },
                                                    "xref": "MO_123:100002"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Categorical",
                                                        "description": "Comparing sample color to standard color palette",
                                                        "formula": "NA",
                                                        "methodDbId": "m3",
                                                        "methodName": "Standard Color Palette",
                                                        "name": "Standard Color Palette",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m3",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/m3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Carotenoid",
                                                    "observationVariableDbId": "MO_123:100003",
                                                    "observationVariableName": "Carotenoid",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Nominal",
                                                        "decimalPlaces": 0,
                                                        "name": "Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s3",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/s3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s3",
                                                        "scaleName": "Color",
                                                        "validValues": {
                                                            "categories": [
                                                                "dark red",
                                                                "red",
                                                                "dark blue",
                                                                "blue",
                                                                "black"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "leaf color",
                                                        "class": "Categorical",
                                                        "description": "color of leaf sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "LC",
                                                        "name": "Leaf Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t3",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/t3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t3",
                                                        "traitName": "Leaf Color",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100003"
                                                }
                                            ],
                                            "studyDbId": "1001",
                                            "trialName": "Peru Yield Trial 1"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationVariable": true
            }
        },
        "/studies/{studyDbId}/table": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Get the Observations for a specific Study in a table format",
                    "description": "Retrieve the details of the study required for field data collection. Includes actual trait data.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "The format parameter will cause the data to be dumped to a file in the specified format. Currently, tsv and csv are supported.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/csv": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "year,studyDbId,studyName,locationDbId,locationName,germplasmDbId,germplasmName,observationUnitDbId,plotNumber,replicate,blockNumber,observationTimestamp,entryType,X,Y,variable1DbId,variable2DbId,variable3DbId\n2017,stu1,Study Name,loc1,Location Name,CIP1,CIP Name,abc123,1,1,1,2017-06-16T00:53:26Z,Test Entry,1,2,25.3,103.4,50.75 \n2017,stu1,Study Name,loc1,Location Name,CIP1,CIP Name,abc124,1,1,1,2017-06-16T00:54:57Z,Test Entry,2,2,27.9,98.65,45.345\n"
                                },
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studyobservationsTableResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                [
                                                    "2011",
                                                    "1001",
                                                    "Study 1",
                                                    "1",
                                                    "Peru",
                                                    "1",
                                                    "Name001",
                                                    "2",
                                                    "1",
                                                    "0",
                                                    "1",
                                                    "2013-06-14T22:05:51-04:00",
                                                    "TEST",
                                                    "1",
                                                    "1",
                                                    "1.1",
                                                    "",
                                                    "",
                                                    "5.1"
                                                ],
                                                [
                                                    "2012",
                                                    "1001",
                                                    "Study 1",
                                                    "1",
                                                    "Peru",
                                                    "2",
                                                    "Name002",
                                                    "3",
                                                    "2",
                                                    "0",
                                                    "1",
                                                    "2013-06-14T22:07:51-04:00",
                                                    "TEST",
                                                    "1",
                                                    "2",
                                                    "",
                                                    "2.1",
                                                    "dark blue",
                                                    ""
                                                ],
                                                [
                                                    "2012",
                                                    "1001",
                                                    "Study 1",
                                                    "1",
                                                    "Peru",
                                                    "2",
                                                    "Name002",
                                                    "4",
                                                    "2",
                                                    "0",
                                                    "1",
                                                    "2013-06-14T22:09:51-04:00",
                                                    "TEST",
                                                    "1",
                                                    "2",
                                                    "",
                                                    "1.8",
                                                    "blue",
                                                    ""
                                                ],
                                                [
                                                    "2011",
                                                    "1001",
                                                    "Study 1",
                                                    "1",
                                                    "Peru",
                                                    "1",
                                                    "Name001",
                                                    "1",
                                                    "1",
                                                    "0",
                                                    "0",
                                                    "2013-06-14T22:03:51-04:00",
                                                    "CHECK",
                                                    "10",
                                                    "12",
                                                    "1.2",
                                                    "",
                                                    "",
                                                    "4.5"
                                                ]
                                            ],
                                            "headerRow": [
                                                "year",
                                                "studyDbId",
                                                "studyName",
                                                "locationDbId",
                                                "locationName",
                                                "germplasmDbId",
                                                "germplasmName",
                                                "observationUnitDbId",
                                                "plotNumber",
                                                "replicate",
                                                "blockNumber",
                                                "observationTimestamp",
                                                "entryType",
                                                "X",
                                                "Y"
                                            ],
                                            "observationVariableDbIds": [
                                                "MO_123:100002",
                                                "MO_123:100003",
                                                "MO_123:100005",
                                                "MO_123:100006"
                                            ],
                                            "observationVariableNames": [
                                                "Plant height",
                                                "Carotenoid",
                                                "Root color",
                                                "Virus severity"
                                            ]
                                        }
                                    }
                                },
                                "application/tsv": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "year\tstudyDbId\tstudyName\tlocationDbId\tlocationName\tgermplasmDbId\tgermplasmName\tobservationUnitDbId\tplotNumber\treplicate\tblockNumber\tobservationTimestamp\tentryType\tX\tY\tvariable1DbId\tvariable2DbId\tvariable3DbId\n 2017\tstu1\tStudy Name\tloc1\tLocation Name\tCIP1\tCIP Name\tabc123\t1\t1\t1\t2017-06-16T00:53:26Z\tTest Entry\t1\t2\t25.3\t103.4\t50.75\n 2017\tstu1\tStudy Name\tloc1\tLocation Name\tCIP1\tCIP Name\tabc124\t1\t1\t1\t2017-06-16T00:54:57Z\tTest Entry\t2\t2\t27.9\t98.65\t45.345\n"
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Submit new Observations in a table format for a specific Study",
                    "description": "This call can be used to create new observations in bulk.\n\nNote: If you need to update any existing observation, please use `PUT /studies/{studyDbId}/observations`. This call should only be used to create NEW observations.\n\nImplementation Guidelines:\n\n+ All observations submitted through this call should create NEW observation records in the database under the given observation unit. \n\n+ Each \"observationUnitDbId\" listed should already exist in the database. If the server can not find a given \"observationUnitDbId\", it should report an error. (see Error Handling) \n\n+ The response of this call should be the set of \"observationDbIds\" created from this call, along with the associated \"observationUnitDbId\" and \"observationVariableDbId\" that each observation is associated with.\n\n+ Images can optionally be saved using this call by providing a zipped file of all images in the datafiles. The physical zipped file should be transferred as well in the mulit-part form data.",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newObservationsTableRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/newObservationDbIdsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 1,
                                                "totalCount": 1,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "observations": [
                                                {
                                                    "observationDbId": "f439cdc6-768f-4d11-b66c-489d980b3d3b",
                                                    "observationUnitDbId": "ee89a58d-b104-437b-9cb4-7b500eaafa11",
                                                    "observationVariableDbId": "MO_123:100002"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationsTable": true,
                "newObservationDbIds": true
            }
        },
        "/studyTypes": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Deprecated"
                    ],
                    "summary": "Deprecated List study types",
                    "description": " ** DEPRECATED ** Use /studytypes\nCall to retrieve the list of study types.\nScope: PHENOTYPING. Implementation target date: PAG2016 ",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studyTypesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 3,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "description": "Description for Nursery study type",
                                                    "name": "Crossing Nursery",
                                                    "studyTypeDbId": "1",
                                                    "studyTypeName": "Crossing Nursery"
                                                },
                                                {
                                                    "description": "Description for yield study type",
                                                    "name": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "studyType": true
            }
        },
        "/studytypes": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Get the Study Types",
                    "description": "Call to retrieve the list of study types.",
                    "parameters": [
                        {
                            "name": "studyTypeDbId",
                            "in": "query",
                            "description": "Filter based on study type unique identifier",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/studyTypesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 3,
                                                "totalPages": 2
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "description": "Description for Nursery study type",
                                                    "name": "Crossing Nursery",
                                                    "studyTypeDbId": "1",
                                                    "studyTypeName": "Crossing Nursery"
                                                },
                                                {
                                                    "description": "Description for yield study type",
                                                    "name": "Yield study",
                                                    "studyTypeDbId": "2",
                                                    "studyTypeName": "Yield study"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "studyType": true
            }
        },
        "/traits": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the Traits",
                    "description": "Call to retrieve a list of traits available in the system and their associated variables.\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TraitsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 5,
                                                "totalPages": 3
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "defaultValue": "0",
                                                    "description": "plant height",
                                                    "name": "Plant Height",
                                                    "observationVariables": [
                                                        "ATT01",
                                                        "MO_123:100002"
                                                    ],
                                                    "traitDbId": "t1",
                                                    "traitId": "t1",
                                                    "traitName": "Plant Height"
                                                },
                                                {
                                                    "defaultValue": "0",
                                                    "description": "root weight",
                                                    "name": "Root Weight",
                                                    "observationVariables": [
                                                        "ATT03",
                                                        "MO_123:100004"
                                                    ],
                                                    "traitDbId": "t2",
                                                    "traitId": "t2",
                                                    "traitName": "Root Weight"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Add a new Trait",
                    "description": "Create a new trait object in the database",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newTraitRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TraitResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "alternativeAbbreviations": [
                                                "string"
                                            ],
                                            "attribute": "string",
                                            "class": "string",
                                            "description": "string",
                                            "entity": "string",
                                            "mainAbbreviation": "string",
                                            "name": "string",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "string",
                                                        "type": "OBO",
                                                        "url": "string"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "status": "string",
                                            "synonyms": [
                                                "string"
                                            ],
                                            "traitDbId": "2d078dee-3d06-4deb-b0bb-2919c021a538",
                                            "traitName": "string",
                                            "xref": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "traitSummary": true,
                "trait": true
            }
        },
        "/traits/{traitDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the details of a specific Trait",
                    "description": "Retrieve the details of a single trait\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.",
                    "parameters": [
                        {
                            "name": "traitDbId",
                            "in": "path",
                            "description": "Id of the trait to retrieve details of.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TraitSummaryResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "defaultValue": "0",
                                            "description": "plant height",
                                            "name": "Plant Height",
                                            "observationVariables": [
                                                "ATT01",
                                                "MO_123:100002"
                                            ],
                                            "traitDbId": "t1",
                                            "traitId": "t1",
                                            "traitName": "Plant Height"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Update an existing Trait",
                    "description": "Update an existing trait",
                    "parameters": [
                        {
                            "name": "traitDbId",
                            "in": "path",
                            "description": "Id of the trait to retrieve details of.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newTraitRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TraitResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "alternativeAbbreviations": [
                                                "string"
                                            ],
                                            "attribute": "string",
                                            "class": "string",
                                            "description": "string",
                                            "entity": "string",
                                            "mainAbbreviation": "string",
                                            "name": "string",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "string",
                                                        "type": "OBO",
                                                        "url": "string"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "status": "string",
                                            "synonyms": [
                                                "string"
                                            ],
                                            "traitDbId": "t1",
                                            "traitName": "string",
                                            "xref": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "traitSummary": true,
                "trait": true
            }
        },
        "/trials": {
            "definition": {
                "get": {
                    "tags": [
                        "Trials"
                    ],
                    "summary": "Get the breeding Trials",
                    "description": "Retrieve a filtered list of Trials. A Trial is a collection of studies",
                    "parameters": [
                        {
                            "name": "commonCropName",
                            "in": "query",
                            "description": "Common name for the crop associated with this trial",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "Program filter to only return trials associated with given program id.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "Filter by location",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "active",
                            "in": "query",
                            "description": "Filter active status true/false.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "sortBy",
                            "in": "query",
                            "description": "Sort order. Name of the field to sorty by.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "trialDbId",
                                    "trialName",
                                    "programDbId",
                                    "programName",
                                    "locationDbId",
                                    "startDate",
                                    "endDate"
                                ]
                            }
                        },
                        {
                            "name": "sortOrder",
                            "in": "query",
                            "description": "Sort order direction: asc/desc",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "ASC",
                                    "desc",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/trialsResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 10,
                                                "totalPages": 5
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "active": false,
                                                    "additionalInfo": {
                                                        "donorName": "Donor1",
                                                        "publications": "doi:10.2345/GEZG3T23535",
                                                        "specialProject": "Project1"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2013-07-05",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "startDate": "2013-01-01",
                                                    "studies": [
                                                        {
                                                            "locationDbId": "1",
                                                            "locationName": "Location 1",
                                                            "studyDbId": "1001",
                                                            "studyName": "Study 1"
                                                        },
                                                        {
                                                            "locationDbId": "1",
                                                            "locationName": "Location 1",
                                                            "studyDbId": "1002",
                                                            "studyName": "Study 2"
                                                        }
                                                    ],
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                },
                                                {
                                                    "active": false,
                                                    "additionalInfo": {
                                                        "donorName": "Donor1",
                                                        "publications": "doi:10.2345/GEZG3T23535",
                                                        "specialProject": "Project1"
                                                    },
                                                    "commonCropName": "Tomatillo",
                                                    "documentationURL": "https://brapi.org",
                                                    "endDate": "2013-07-05",
                                                    "programDbId": "1",
                                                    "programName": "Program 1",
                                                    "startDate": "2013-01-01",
                                                    "studies": [
                                                        {
                                                            "locationDbId": "1",
                                                            "locationName": "Location 1",
                                                            "studyDbId": "1001",
                                                            "studyName": "Study 1"
                                                        },
                                                        {
                                                            "locationDbId": "1",
                                                            "locationName": "Location 1",
                                                            "studyDbId": "1002",
                                                            "studyName": "Study 2"
                                                        }
                                                    ],
                                                    "trialDbId": "101",
                                                    "trialName": "Peru Yield Trial 1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "trialSummary": true
            }
        },
        "/trials/{trialDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Trials"
                    ],
                    "summary": "Get the details of a specific Trial",
                    "description": "Get trial by id.",
                    "parameters": [
                        {
                            "name": "trialDbId",
                            "in": "path",
                            "description": "The internal trialDbId",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/trialResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "active": false,
                                            "additionalInfo": {
                                                "donorName": "Donor1",
                                                "publications": "doi:10.2345/GEZG3T23535",
                                                "specialProject": "Project1"
                                            },
                                            "commonCropName": "Tomatillo",
                                            "contacts": [
                                                {
                                                    "contactDbId": "4",
                                                    "email": "b.technician@brapi.org",
                                                    "instituteName": "Plant Science Institute",
                                                    "name": "B. Technician",
                                                    "orcid": "0000-0002-0607-8732",
                                                    "type": "Technician"
                                                },
                                                {
                                                    "contactDbId": "3",
                                                    "email": "a.technician@brapi.org",
                                                    "instituteName": "Plant Science Institute",
                                                    "name": "A. Technician",
                                                    "orcid": "0000-0002-0607-8731",
                                                    "type": "Technician"
                                                }
                                            ],
                                            "datasetAuthorship": {
                                                "datasetPUI": "doi:10.15454/312953986E3",
                                                "license": "https://creativecommons.org/licenses/by/4.0"
                                            },
                                            "datasetAuthorships": [
                                                {
                                                    "datasetPUI": "doi:10.15454/312953986E3",
                                                    "license": "https://creativecommons.org/licenses/by/4.0"
                                                }
                                            ],
                                            "documentationURL": "https://brapi.org",
                                            "endDate": "2013-07-05",
                                            "programDbId": "1",
                                            "programName": "Program 1",
                                            "publications": [
                                                {
                                                    "publicationPUI": "doi:10.15454/312953986E3",
                                                    "publicationReference": "https://brapi.org"
                                                }
                                            ],
                                            "startDate": "2013-01-01",
                                            "studies": [
                                                {
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "studyDbId": "1001",
                                                    "studyName": "Study 1"
                                                },
                                                {
                                                    "locationDbId": "1",
                                                    "locationName": "Location 1",
                                                    "studyDbId": "1002",
                                                    "studyName": "Study 2"
                                                }
                                            ],
                                            "trialDbId": "101",
                                            "trialName": "Peru Yield Trial 1"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "trial": true
            }
        },
        "/variables": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the Observation Variables",
                    "description": "Call to retrieve a list of observationVariables available in the system.",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        },
                        {
                            "name": "observationVariableDbId",
                            "in": "query",
                            "description": "Variable's unique ID",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "traitClass",
                            "in": "query",
                            "description": "Variable's trait class (phenological, physiological, morphological, etc.)",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationVariablesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 5,
                                                "totalPages": 3
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Numeric",
                                                        "description": "Standard rolled measuring tape",
                                                        "formula": "a^2 + b^2 = c^2",
                                                        "methodDbId": "m1",
                                                        "methodName": "Tape Measure",
                                                        "name": "Tape Measure",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m1",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/m1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Plant height",
                                                    "observationVariableDbId": "MO_123:100002",
                                                    "observationVariableName": "Plant height",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Numerical",
                                                        "decimalPlaces": 1,
                                                        "name": "Centimeter",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s1",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/s1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s1",
                                                        "scaleName": "Centimeter",
                                                        "validValues": {
                                                            "categories": [],
                                                            "max": 99999,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "plant height",
                                                        "class": "Numeric",
                                                        "description": "plant height",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "H",
                                                        "name": "Plant Height",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t1",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/t1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t1",
                                                        "traitName": "Plant Height",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100002"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Categorical",
                                                        "description": "Comparing sample color to standard color palette",
                                                        "formula": "NA",
                                                        "methodDbId": "m3",
                                                        "methodName": "Standard Color Palette",
                                                        "name": "Standard Color Palette",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m3",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/m3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Carotenoid",
                                                    "observationVariableDbId": "MO_123:100003",
                                                    "observationVariableName": "Carotenoid",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Nominal",
                                                        "decimalPlaces": 0,
                                                        "name": "Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s3",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/s3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s3",
                                                        "scaleName": "Color",
                                                        "validValues": {
                                                            "categories": [
                                                                "dark red",
                                                                "red",
                                                                "dark blue",
                                                                "blue",
                                                                "black"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "leaf color",
                                                        "class": "Categorical",
                                                        "description": "color of leaf sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "LC",
                                                        "name": "Leaf Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t3",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/t3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t3",
                                                        "traitName": "Leaf Color",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100003"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationVariable": true
            }
        },
        "/variables-search": {
            "definition": {
                "post": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Variable search",
                    "description": "Search observation variables. \nSee Search Services for additional implementation details.",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/observationVariableSearchRequest_Dep"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationVariablesResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Numeric",
                                                        "description": "Standard rolled measuring tape",
                                                        "formula": "a^2 + b^2 = c^2",
                                                        "methodDbId": "m1",
                                                        "methodName": "Tape Measure",
                                                        "name": "Tape Measure",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m1",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/m1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Plant height",
                                                    "observationVariableDbId": "MO_123:100002",
                                                    "observationVariableName": "Plant height",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Numerical",
                                                        "decimalPlaces": 1,
                                                        "name": "Centimeter",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s1",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/s1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s1",
                                                        "scaleName": "Centimeter",
                                                        "validValues": {
                                                            "categories": [],
                                                            "max": 99999,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "plant height",
                                                        "class": "Numeric",
                                                        "description": "plant height",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "H",
                                                        "name": "Plant Height",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t1",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/t1"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t1",
                                                        "traitName": "Plant Height",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100002"
                                                },
                                                {
                                                    "contextOfUse": [],
                                                    "crop": "maize",
                                                    "date": "2018-12-05",
                                                    "defaultValue": "10",
                                                    "documentationURL": "https://brapi.org",
                                                    "growthStage": "1",
                                                    "institution": "1",
                                                    "language": "English",
                                                    "method": {
                                                        "class": "Categorical",
                                                        "description": "Comparing sample color to standard color palette",
                                                        "formula": "NA",
                                                        "methodDbId": "m3",
                                                        "methodName": "Standard Color Palette",
                                                        "name": "Standard Color Palette",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/m3",
                                                                    "type": "OBO",
                                                                    "url": "https://ontology.org/m3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "reference": "google.com"
                                                    },
                                                    "name": "Carotenoid",
                                                    "observationVariableDbId": "MO_123:100003",
                                                    "observationVariableName": "Carotenoid",
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "ontologyReference": {
                                                        "documentationLinks": [
                                                            {
                                                                "URL": "https://ontology.org",
                                                                "type": "WEBPAGE",
                                                                "url": "https://ontology.org"
                                                            }
                                                        ],
                                                        "ontologyDbId": "MO_123",
                                                        "ontologyName": "Ontology.org",
                                                        "version": "17"
                                                    },
                                                    "scale": {
                                                        "dataType": "Nominal",
                                                        "decimalPlaces": 0,
                                                        "name": "Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/s3",
                                                                    "type": "WEBPAGE",
                                                                    "url": "https://ontology.org/s3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "scaleDbId": "s3",
                                                        "scaleName": "Color",
                                                        "validValues": {
                                                            "categories": [
                                                                "dark red",
                                                                "red",
                                                                "dark blue",
                                                                "blue",
                                                                "black"
                                                            ],
                                                            "max": 0,
                                                            "min": 0
                                                        },
                                                        "xref": "xref"
                                                    },
                                                    "scientist": "Bob",
                                                    "status": "active",
                                                    "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                                    "synonyms": [],
                                                    "trait": {
                                                        "alternativeAbbreviations": [],
                                                        "attribute": "leaf color",
                                                        "class": "Categorical",
                                                        "description": "color of leaf sample",
                                                        "entity": "entity",
                                                        "mainAbbreviation": "LC",
                                                        "name": "Leaf Color",
                                                        "ontologyReference": {
                                                            "documentationLinks": [
                                                                {
                                                                    "URL": "https://ontology.org/t3",
                                                                    "type": "RDF",
                                                                    "url": "https://ontology.org/t3"
                                                                }
                                                            ],
                                                            "ontologyDbId": "MO_123",
                                                            "ontologyName": "Ontology.org",
                                                            "version": "17"
                                                        },
                                                        "status": "active",
                                                        "synonyms": [],
                                                        "traitDbId": "t3",
                                                        "traitName": "Leaf Color",
                                                        "xref": "xref"
                                                    },
                                                    "xref": "MO_123:100003"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "observationVariable": true
            }
        },
        "/variables/datatypes": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Variable data type list",
                    "description": "DEPRECATED in v1.3 - See documentation on BrAPI fixed set of data types, references from the Crop Ontology",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": "0"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "integer"
                            },
                            "example": 1000
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/dataTypesResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 2,
                                                "totalCount": 2,
                                                "totalPages": 1
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "data": [
                                                "Nominal",
                                                "Numerical"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "deprecated": true
                }
            },
            "data_types": {
                "dataTypesResponseResult": true
            }
        },
        "/variables/{observationVariableDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Get the details for a specific Observation Variable",
                    "description": "Retrieve variable details",
                    "parameters": [
                        {
                            "name": "observationVariableDbId",
                            "in": "path",
                            "description": "string id of the variable",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/observationVariableResponse"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        },
                                        "result": {
                                            "contextOfUse": [],
                                            "crop": "maize",
                                            "date": "2018-12-05",
                                            "defaultValue": "10",
                                            "documentationURL": "https://brapi.org",
                                            "growthStage": "1",
                                            "institution": "1",
                                            "language": "English",
                                            "method": {
                                                "class": "Numeric",
                                                "description": "Standard rolled measuring tape",
                                                "formula": "a^2 + b^2 = c^2",
                                                "methodDbId": "m1",
                                                "methodName": "Tape Measure",
                                                "name": "Tape Measure",
                                                "ontologyReference": {
                                                    "documentationLinks": [
                                                        {
                                                            "URL": "https://ontology.org/m1",
                                                            "type": "RDF",
                                                            "url": "https://ontology.org/m1"
                                                        }
                                                    ],
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "version": "17"
                                                },
                                                "reference": "google.com"
                                            },
                                            "name": "Plant height",
                                            "observationVariableDbId": "MO_123:100002",
                                            "observationVariableName": "Plant height",
                                            "ontologyDbId": "MO_123",
                                            "ontologyName": "Ontology.org",
                                            "ontologyReference": {
                                                "documentationLinks": [
                                                    {
                                                        "URL": "https://ontology.org",
                                                        "type": "WEBPAGE",
                                                        "url": "https://ontology.org"
                                                    }
                                                ],
                                                "ontologyDbId": "MO_123",
                                                "ontologyName": "Ontology.org",
                                                "version": "17"
                                            },
                                            "scale": {
                                                "dataType": "Numerical",
                                                "decimalPlaces": 1,
                                                "name": "Centimeter",
                                                "ontologyReference": {
                                                    "documentationLinks": [
                                                        {
                                                            "URL": "https://ontology.org/s1",
                                                            "type": "OBO",
                                                            "url": "https://ontology.org/s1"
                                                        }
                                                    ],
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "version": "17"
                                                },
                                                "scaleDbId": "s1",
                                                "scaleName": "Centimeter",
                                                "validValues": {
                                                    "categories": [],
                                                    "max": 99999,
                                                    "min": 0
                                                },
                                                "xref": "xref"
                                            },
                                            "scientist": "Bob",
                                            "status": "active",
                                            "submissionTimestamp": "2011-06-14T22:12:51-04:00",
                                            "synonyms": [],
                                            "trait": {
                                                "alternativeAbbreviations": [],
                                                "attribute": "plant height",
                                                "class": "Numeric",
                                                "description": "plant height",
                                                "entity": "entity",
                                                "mainAbbreviation": "H",
                                                "name": "Plant Height",
                                                "ontologyReference": {
                                                    "documentationLinks": [
                                                        {
                                                            "URL": "https://ontology.org/t1",
                                                            "type": "WEBPAGE",
                                                            "url": "https://ontology.org/t1"
                                                        }
                                                    ],
                                                    "ontologyDbId": "MO_123",
                                                    "ontologyName": "Ontology.org",
                                                    "version": "17"
                                                },
                                                "status": "active",
                                                "synonyms": [],
                                                "traitDbId": "t1",
                                                "traitName": "Plant Height",
                                                "xref": "xref"
                                            },
                                            "xref": "MO_123:100002"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "observationVariable": true
            }
        },
        "/vendor/orders": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "List current available orders",
                    "description": "List current available orders",
                    "parameters": [
                        {
                            "name": "orderId",
                            "in": "query",
                            "description": "The order id returned by the vendor when the order was successfully submitted. From response of \"POST /vendor/orders\"",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "submissionId",
                            "in": "query",
                            "description": "The submission id returned by the vendor when a set of plates was successfully submitted. From response of \"POST /vendor/plates\"",
                            "required": false,
                            "style": "form",
                            "explode": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorOrdersResponse"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "Submit New Order",
                    "description": "Submit a new order to a vendor",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vendorOrderRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorOrderResponse"
                                    },
                                    "example": []
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "vendorOrder": true,
                "vendorOrderResponse_result": true
            }
        },
        "/vendor/orders/{orderId}/plates": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "Get the Plates for a specific Order",
                    "description": "Retrieve the plate and sample details of an order being processed",
                    "parameters": [
                        {
                            "name": "orderId",
                            "in": "path",
                            "description": "The order id returned by the vendor when the order was successfully submitted.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorPlatesResponse"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "vendorPlate": true
            }
        },
        "/vendor/orders/{orderId}/results": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "Get the results of a specific Order",
                    "description": "Retrieve the data files generated by the vendors analysis",
                    "parameters": [
                        {
                            "name": "orderId",
                            "in": "path",
                            "description": "The order id returned by the vendor when the order was successfully submitted.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorOrderResultsResponse"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "vendorResultFile": true
            }
        },
        "/vendor/orders/{orderId}/status": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "Get the status of a specific Order",
                    "description": "Retrieve the current status of an order being processed",
                    "parameters": [
                        {
                            "name": "orderId",
                            "in": "path",
                            "description": "The order id returned by the vendor when the order was successfully submitted.",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorOrderStatusResponse"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "vendorOrderStatusResponse_result": true
            }
        },
        "/vendor/plates": {
            "definition": {
                "post": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "Submit a new set of Sample data",
                    "description": "Submit a new set of Sample data",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vendorPlatesSubmissionRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorPlateResponse"
                                    },
                                    "example": []
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "vendorPlatesSubmissionResponse": true
            }
        },
        "/vendor/plates/{submissionId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "Get the data for a submitted set of plates",
                    "description": "Get data for a submitted set of plates",
                    "parameters": [
                        {
                            "name": "submissionId",
                            "in": "path",
                            "required": true,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorPlateGetResponse_1"
                                    },
                                    "example": {
                                        "metadata": {
                                            "datafiles": [],
                                            "pagination": {
                                                "currentPage": 0,
                                                "pageSize": 0,
                                                "totalCount": 0,
                                                "totalPages": 0
                                            },
                                            "status": []
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object\nERROR - 2018-10-08T20:15:11Z - Invalid query parameter\nERROR - 2018-10-08T20:15:11Z - Required parameter is missing"
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization token"
                                }
                            }
                        },
                        "403": {
                            "description": "Forbidden",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - User does not have permission to perform this action"
                                }
                            }
                        },
                        "404": {
                            "description": "Not Found",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    },
                                    "example": "ERROR - 2018-10-08T20:15:11Z - The requested object DbId is not found"
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "vendorPlateGetResponse": true
            }
        },
        "/vendor/specifications": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor"
                    ],
                    "summary": "Get the Vendor Specifications",
                    "description": "Defines the plate format specification for the vendor.",
                    "parameters": [
                        {
                            "name": "Authorization",
                            "in": "header",
                            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
                            "required": false,
                            "style": "simple",
                            "explode": false,
                            "schema": {
                                "pattern": "^Bearer .*$",
                                "type": "string"
                            },
                            "example": "Bearer XXXX"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/vendorSpecificationResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "data_types": {
                "vendorSpecification": true
            }
        }
    },
    "data_types": {
        "VariableBaseClass": {
            "type": "object",
            "description": "",
            "fields": {
                "contextOfUse": {
                    "type": "string[]",
                    "required": false
                },
                "crop": {
                    "type": "string",
                    "required": false
                },
                "defaultValue": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "growthStage": {
                    "type": "string",
                    "required": false
                },
                "institution": {
                    "type": "string",
                    "required": false
                },
                "language": {
                    "type": "string",
                    "required": false
                },
                "method": {
                    "type": "method",
                    "required": true
                },
                "ontologyDbId": {
                    "type": "string",
                    "required": false
                },
                "ontologyName": {
                    "type": "string",
                    "required": false
                },
                "ontologyReference": {
                    "type": "ontologyReference",
                    "required": false
                },
                "scale": {
                    "type": "scale",
                    "required": true
                },
                "scientist": {
                    "type": "string",
                    "required": false
                },
                "status": {
                    "type": "string",
                    "required": false
                },
                "submissionTimestamp": {
                    "type": "string",
                    "required": false
                },
                "synonyms": {
                    "type": "string[]",
                    "required": false
                },
                "trait": {
                    "type": "trait",
                    "required": true
                },
                "xref": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "WSMIMEDataTypes": {
            "type": "string",
            "description": "",
            "fields": [],
            "calls": {
                "/calls": true,
                "/phenotypes": true,
                "/search/observationtables/{searchResultsDbId}": true
            },
            "as_field_in": {
                "call": true
            }
        },
        "alleleMatrixDetails": {
            "type": "object",
            "description": "",
            "fields": {
                "description": {
                    "type": "string",
                    "required": false
                },
                "lastUpdated": {
                    "type": "string",
                    "required": false
                },
                "matrixDbId": {
                    "type": "string",
                    "required": false
                },
                "matrixName": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/allelematrices": true
            },
            "as_field_in": []
        },
        "alleleMatrixSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "expandHomozygotes": {
                    "type": "boolean",
                    "required": false
                },
                "format": {
                    "type": "string",
                    "required": false
                },
                "markerDbId": {
                    "type": "string[]",
                    "required": false
                },
                "markerProfileDbId": {
                    "type": "string[]",
                    "required": false
                },
                "markerprofileDbId": {
                    "type": "string[]",
                    "required": false
                },
                "matrixDbId": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "sepPhased": {
                    "type": "string",
                    "required": false
                },
                "sepUnphased": {
                    "type": "string",
                    "required": false
                },
                "unknownString": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "alleleMatrixValues": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "array[]",
                    "required": false
                }
            },
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true
            },
            "as_field_in": []
        },
        "asynchStatusMetadata": {
            "type": "object",
            "description": "",
            "fields": {
                "asynchStatus": {
                    "type": "asynchStatusMetadata_asynchStatus",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "breedingMethod": {
            "type": "object",
            "description": "",
            "fields": {
                "abbreviation": {
                    "type": "string",
                    "required": false
                },
                "breedingMethodDbId": {
                    "type": "string",
                    "required": true
                },
                "breedingMethodName": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/breedingmethods": true,
                "/breedingmethods/{breedingMethodDbId}": true
            },
            "as_field_in": []
        },
        "call": {
            "type": "object",
            "description": "",
            "fields": {
                "call": {
                    "type": "string",
                    "required": true
                },
                "dataTypes": {
                    "type": "WSMIMEDataTypes[]",
                    "required": true
                },
                "datatypes": {
                    "type": "WSMIMEDataTypes[]",
                    "required": false
                },
                "methods": {
                    "type": "string[]",
                    "required": true
                },
                "versions": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/calls": true
            },
            "as_field_in": []
        },
        "contact": {
            "type": "object",
            "description": "",
            "fields": {
                "contactDbId": {
                    "type": "string",
                    "required": true
                },
                "email": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "orcid": {
                    "type": "string",
                    "required": false
                },
                "type": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "study": true,
                "trial": true
            }
        },
        "dataLink": {
            "type": "object",
            "description": "",
            "fields": {
                "dataLinkName": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "type": {
                    "type": "string",
                    "required": false
                },
                "url": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "study": true
            }
        },
        "dataTypesResponseResult": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/variables/datatypes": true
            },
            "as_field_in": []
        },
        "genomeMap": {
            "type": "object",
            "description": "",
            "fields": {
                "comments": {
                    "type": "string",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": true
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "linkageGroupCount": {
                    "type": "integer",
                    "required": false
                },
                "mapDbId": {
                    "type": "string",
                    "required": true
                },
                "mapName": {
                    "type": "string",
                    "required": false
                },
                "markerCount": {
                    "type": "integer",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "publishedDate": {
                    "type": "string",
                    "required": false
                },
                "scientificName": {
                    "type": "string",
                    "required": false
                },
                "species": {
                    "type": "string",
                    "required": false
                },
                "type": {
                    "type": "string",
                    "required": true
                },
                "unit": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/maps": true
            },
            "as_field_in": []
        },
        "geoJSON": {
            "type": "object",
            "description": "One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.",
            "fields": {
                "geometry": {
                    "type": "object",
                    "required": false
                },
                "type": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "image": true,
                "imagesSearchRequest": true,
                "newImageRequest": true
            }
        },
        "germplasm": {
            "type": "object",
            "description": "",
            "fields": {
                "accessionNumber": {
                    "type": "string",
                    "required": false
                },
                "acquisitionDate": {
                    "type": "string",
                    "required": false
                },
                "biologicalStatusOfAccessionCode": {
                    "type": "integer",
                    "required": false
                },
                "breedingMethodDbId": {
                    "type": "string",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "countryOfOriginCode": {
                    "type": "string",
                    "required": false
                },
                "defaultDisplayName": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "donors": {
                    "type": "germplasm_donors[]",
                    "required": false
                },
                "genus": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmGenus": {
                    "type": "string",
                    "required": false
                },
                "germplasmName": {
                    "type": "string",
                    "required": false
                },
                "germplasmPUI": {
                    "type": "string",
                    "required": false
                },
                "germplasmSpecies": {
                    "type": "string",
                    "required": false
                },
                "instituteCode": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                },
                "pedigree": {
                    "type": "string",
                    "required": false
                },
                "seedSource": {
                    "type": "string",
                    "required": false
                },
                "species": {
                    "type": "string",
                    "required": false
                },
                "speciesAuthority": {
                    "type": "string",
                    "required": false
                },
                "subtaxa": {
                    "type": "string",
                    "required": false
                },
                "subtaxaAuthority": {
                    "type": "string",
                    "required": false
                },
                "synonyms": {
                    "type": "string[]",
                    "required": false
                },
                "taxonIds": {
                    "type": "taxonID[]",
                    "required": false
                },
                "typeOfGermplasmStorageCode": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/germplasm": true,
                "/germplasm-search": true,
                "/germplasm/{germplasmDbId}": true,
                "/search/germplasm/{searchResultsDbId}": true
            },
            "as_field_in": []
        },
        "germplasmAttribute": {
            "type": "object",
            "description": "",
            "fields": {
                "attributeCode": {
                    "type": "string",
                    "required": false
                },
                "attributeDbId": {
                    "type": "string",
                    "required": false
                },
                "attributeName": {
                    "type": "string",
                    "required": false
                },
                "determinedDate": {
                    "type": "string",
                    "required": false
                },
                "value": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/germplasm/{germplasmDbId}/attributes": true
            },
            "as_field_in": []
        },
        "germplasmAttributeCategory": {
            "type": "object",
            "description": "",
            "fields": {
                "attributeCategoryDbId": {
                    "type": "string",
                    "required": false
                },
                "attributeCategoryName": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/attributes/categories": true
            },
            "as_field_in": []
        },
        "germplasmAttributeDef": {
            "type": "",
            "description": "",
            "fields": [],
            "calls": {
                "/attributes": true
            },
            "as_field_in": []
        },
        "germplasmMCPD": {
            "type": "object",
            "description": "",
            "fields": {
                "accessionNames": {
                    "type": "string[]",
                    "required": false
                },
                "accessionNumber": {
                    "type": "string",
                    "required": false
                },
                "acquisitionDate": {
                    "type": "string",
                    "required": false
                },
                "acquisitionSourceCode": {
                    "type": "string",
                    "required": false
                },
                "alternateIDs": {
                    "type": "string[]",
                    "required": false
                },
                "ancestralData": {
                    "type": "string",
                    "required": false
                },
                "biologicalStatusOfAccessionCode": {
                    "type": "string",
                    "required": false
                },
                "breedingInstitutes": {
                    "type": "germplasmMCPD_breedingInstitutes[]",
                    "required": false
                },
                "collectingInfo": {
                    "type": "germplasmMCPD_collectingInfo",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "countryOfOrigin": {
                    "type": "string",
                    "required": false
                },
                "donorInfo": {
                    "type": "germplasmMCPD_donorInfo",
                    "required": false
                },
                "genus": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmPUI": {
                    "type": "string",
                    "required": false
                },
                "instituteCode": {
                    "type": "string",
                    "required": false
                },
                "mlsStatus": {
                    "type": "string",
                    "required": false
                },
                "remarks": {
                    "type": "string",
                    "required": false
                },
                "safetyDuplicateInstitues": {
                    "type": "germplasmMCPD_safetyDuplicateInstitues[]",
                    "required": false
                },
                "species": {
                    "type": "string",
                    "required": false
                },
                "speciesAuthority": {
                    "type": "string",
                    "required": false
                },
                "storageTypeCodes": {
                    "type": "string[]",
                    "required": false
                },
                "subtaxon": {
                    "type": "string",
                    "required": false
                },
                "subtaxonAuthority": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/germplasm/{germplasmDbId}/mcpd": true
            },
            "as_field_in": []
        },
        "germplasmMarkerprofilesList": {
            "type": "object",
            "description": "",
            "fields": {
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "markerProfileDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "markerprofileDbIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/germplasm/{germplasmDbId}/markerprofiles": true
            },
            "as_field_in": []
        },
        "germplasmSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "accessionNumbers": {
                    "type": "string[]",
                    "required": false
                },
                "commonCropNames": {
                    "type": "string[]",
                    "required": false
                },
                "germplasmDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "germplasmGenus": {
                    "type": "string[]",
                    "required": false
                },
                "germplasmNames": {
                    "type": "string[]",
                    "required": false
                },
                "germplasmPUIs": {
                    "type": "string[]",
                    "required": false
                },
                "germplasmSpecies": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "germplasmSummary": {
            "type": "object",
            "description": "",
            "fields": {
                "accessionNumber": {
                    "type": "string",
                    "required": false
                },
                "acquisitionDate": {
                    "type": "string",
                    "required": false
                },
                "biologicalStatusOfAccessionCode": {
                    "type": "integer",
                    "required": false
                },
                "breedingMethodDbId": {
                    "type": "string",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "countryOfOriginCode": {
                    "type": "string",
                    "required": false
                },
                "defaultDisplayName": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "donors": {
                    "type": "germplasm_donors[]",
                    "required": false
                },
                "entryNumber": {
                    "type": "string",
                    "required": false
                },
                "genus": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmName": {
                    "type": "string",
                    "required": false
                },
                "germplasmPUI": {
                    "type": "string",
                    "required": false
                },
                "instituteCode": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                },
                "pedigree": {
                    "type": "string",
                    "required": false
                },
                "seedSource": {
                    "type": "string",
                    "required": false
                },
                "species": {
                    "type": "string",
                    "required": false
                },
                "speciesAuthority": {
                    "type": "string",
                    "required": false
                },
                "subtaxa": {
                    "type": "string",
                    "required": false
                },
                "subtaxaAuthority": {
                    "type": "string",
                    "required": false
                },
                "synonyms": {
                    "type": "string[]",
                    "required": false
                },
                "taxonIds": {
                    "type": "taxonID[]",
                    "required": false
                },
                "typeOfGermplasmStorageCode": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/studies/{studyDbId}/germplasm": true
            },
            "as_field_in": []
        },
        "image": {
            "type": "object",
            "description": "",
            "fields": {
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "copyright": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "descriptiveOntologyTerms": {
                    "type": "string[]",
                    "required": false
                },
                "imageDbId": {
                    "type": "string",
                    "required": false
                },
                "imageFileName": {
                    "type": "string",
                    "required": false
                },
                "imageFileSize": {
                    "type": "integer",
                    "required": false
                },
                "imageHeight": {
                    "type": "integer",
                    "required": false
                },
                "imageLocation": {
                    "type": "geoJSON",
                    "required": false
                },
                "imageName": {
                    "type": "string",
                    "required": false
                },
                "imageTimeStamp": {
                    "type": "string",
                    "required": false
                },
                "imageURL": {
                    "type": "string",
                    "required": false
                },
                "imageWidth": {
                    "type": "integer",
                    "required": false
                },
                "mimeType": {
                    "type": "string",
                    "required": false
                },
                "observationDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/images": true,
                "/images/{imageDbId}": true,
                "/images/{imageDbId}/imagecontent": true,
                "/search/images/{searchResultsDbId}": true
            },
            "as_field_in": []
        },
        "imagesSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "descriptiveOntologyTerms": {
                    "type": "string[]",
                    "required": false
                },
                "imageFileNames": {
                    "type": "string[]",
                    "required": false
                },
                "imageFileSizeMax": {
                    "type": "integer",
                    "required": false
                },
                "imageFileSizeMin": {
                    "type": "integer",
                    "required": false
                },
                "imageHeightMax": {
                    "type": "integer",
                    "required": false
                },
                "imageHeightMin": {
                    "type": "integer",
                    "required": false
                },
                "imageLocation": {
                    "type": "geoJSON",
                    "required": false
                },
                "imageNames": {
                    "type": "string[]",
                    "required": false
                },
                "imageTimeStampRangeEnd": {
                    "type": "string",
                    "required": false
                },
                "imageTimeStampRangeStart": {
                    "type": "string",
                    "required": false
                },
                "imageWidthMax": {
                    "type": "integer",
                    "required": false
                },
                "imageWidthMin": {
                    "type": "integer",
                    "required": false
                },
                "mimeTypes": {
                    "type": "string[]",
                    "required": false
                },
                "observationDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationUnitDbIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "linearRing": {
            "type": "array",
            "description": "An array of at least four positions where the first equals the last",
            "fields": [],
            "calls": [],
            "as_field_in": []
        },
        "linkageGroup": {
            "type": "object",
            "description": "",
            "fields": {
                "linkageGroupName": {
                    "type": "string",
                    "required": false
                },
                "markerCount": {
                    "type": "integer",
                    "required": false
                },
                "maxPosition": {
                    "type": "integer",
                    "required": false
                }
            },
            "calls": {
                "/maps/{mapDbId}": true
            },
            "as_field_in": []
        },
        "listDetails": {
            "type": "",
            "description": "",
            "fields": [],
            "calls": {
                "/lists": true,
                "/lists/{listDbId}": true,
                "/lists/{listDbId}/items": true
            },
            "as_field_in": []
        },
        "listSummary": {
            "type": "object",
            "description": "",
            "fields": {
                "dateCreated": {
                    "type": "string",
                    "required": false
                },
                "dateModified": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "listDbId": {
                    "type": "string",
                    "required": true
                },
                "listName": {
                    "type": "string",
                    "required": false
                },
                "listOwnerName": {
                    "type": "string",
                    "required": false
                },
                "listOwnerPersonDbId": {
                    "type": "string",
                    "required": false
                },
                "listSize": {
                    "type": "integer",
                    "required": false
                },
                "listSource": {
                    "type": "string",
                    "required": false
                },
                "listType": {
                    "type": "listTypes",
                    "required": true
                }
            },
            "calls": {
                "/lists": true
            },
            "as_field_in": []
        },
        "listTypes": {
            "type": "string",
            "description": "",
            "fields": [],
            "calls": {
                "/lists": true
            },
            "as_field_in": {
                "listSummary": true,
                "newListRequest": true
            }
        },
        "location": {
            "type": "object",
            "description": "",
            "fields": {
                "abbreviation": {
                    "type": "string",
                    "required": false
                },
                "abreviation": {
                    "type": "string",
                    "required": false
                },
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "altitude": {
                    "type": "number",
                    "required": false
                },
                "countryCode": {
                    "type": "string",
                    "required": false
                },
                "countryName": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "instituteAddress": {
                    "type": "string",
                    "required": false
                },
                "instituteAdress": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                },
                "latitude": {
                    "type": "number",
                    "required": false
                },
                "locationDbId": {
                    "type": "string",
                    "required": false
                },
                "locationName": {
                    "type": "string",
                    "required": false
                },
                "locationType": {
                    "type": "string",
                    "required": false
                },
                "longitude": {
                    "type": "number",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/locations": true,
                "/locations/{locationDbId}": true
            },
            "as_field_in": {
                "study": true
            }
        },
        "marker": {
            "type": "object",
            "description": "",
            "fields": {
                "analysisMethods": {
                    "type": "string[]",
                    "required": false
                },
                "defaultDisplayName": {
                    "type": "string",
                    "required": false
                },
                "markerDbId": {
                    "type": "string",
                    "required": false
                },
                "markerName": {
                    "type": "string",
                    "required": false
                },
                "refAlt": {
                    "type": "string[]",
                    "required": false
                },
                "synonyms": {
                    "type": "string[]",
                    "required": false
                },
                "type": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/markers": true,
                "/markers-search": true,
                "/markers/{markerDbId}": true,
                "/search/markers/{searchResultsDbId}": true
            },
            "as_field_in": []
        },
        "markerProfile": {
            "type": "object",
            "description": "",
            "fields": {
                "analysisMethod": {
                    "type": "string",
                    "required": false
                },
                "data": {
                    "type": "object[]",
                    "required": true
                },
                "extractDbId": {
                    "type": "string",
                    "required": true
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": true
                },
                "markerProfileDbId": {
                    "type": "string",
                    "required": true
                },
                "markerprofileDbId": {
                    "type": "string",
                    "required": false
                },
                "uniqueDisplayName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/markerprofiles/{markerProfileDbId}": true
            },
            "as_field_in": []
        },
        "markerProfileDescription": {
            "type": "object",
            "description": "",
            "fields": {
                "analysisMethod": {
                    "type": "string",
                    "required": false
                },
                "extractDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "markerProfileDbId": {
                    "type": "string",
                    "required": true
                },
                "markerprofileDbId": {
                    "type": "string",
                    "required": false
                },
                "resultCount": {
                    "type": "integer",
                    "required": false
                },
                "sampleDbId": {
                    "type": "string",
                    "required": false
                },
                "uniqueDisplayName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/markerprofiles": true
            },
            "as_field_in": []
        },
        "markerSummaryLinkageGroup": {
            "type": "object",
            "description": "",
            "fields": {
                "location": {
                    "type": "string",
                    "required": false
                },
                "markerDbId": {
                    "type": "string",
                    "required": false
                },
                "markerName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/maps/{mapDbId}/positions/{linkageGroupName}": true
            },
            "as_field_in": []
        },
        "markerSummaryMap": {
            "type": "object",
            "description": "",
            "fields": {
                "linkageGroupName": {
                    "type": "string",
                    "required": false
                },
                "location": {
                    "type": "string",
                    "required": false
                },
                "markerDbId": {
                    "type": "string",
                    "required": false
                },
                "markerName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/maps/{mapDbId}/positions": true
            },
            "as_field_in": []
        },
        "markersSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "includeSynonyms": {
                    "type": "boolean",
                    "required": false
                },
                "markerDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "markerNames": {
                    "type": "string[]",
                    "required": false
                },
                "matchMethod": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "type": {
                    "type": "string",
                    "required": false
                },
                "types": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "measurement": {
            "type": "object",
            "description": "A value with units",
            "fields": {
                "units": {
                    "type": "string",
                    "required": false
                },
                "value": {
                    "type": "number",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "vendorSample": true
            }
        },
        "metadata": {
            "type": "object",
            "description": "",
            "fields": {
                "datafiles": {
                    "type": "string[]",
                    "required": false
                },
                "pagination": {
                    "type": "metadata_pagination",
                    "required": false
                },
                "status": {
                    "type": "status[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "method": {
            "type": "object",
            "description": "Method metadata",
            "fields": {
                "class": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "formula": {
                    "type": "string",
                    "required": false
                },
                "methodDbId": {
                    "type": "string",
                    "required": false
                },
                "methodName": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "ontologyReference": {
                    "type": "ontologyReference",
                    "required": false
                },
                "reference": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/methods": true,
                "/methods/{methodDbId}": true
            },
            "as_field_in": {
                "VariableBaseClass": true
            }
        },
        "newImageRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "copyright": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "descriptiveOntologyTerms": {
                    "type": "string[]",
                    "required": false
                },
                "imageFileName": {
                    "type": "string",
                    "required": false
                },
                "imageFileSize": {
                    "type": "integer",
                    "required": false
                },
                "imageHeight": {
                    "type": "integer",
                    "required": false
                },
                "imageLocation": {
                    "type": "geoJSON",
                    "required": false
                },
                "imageName": {
                    "type": "string",
                    "required": false
                },
                "imageTimeStamp": {
                    "type": "string",
                    "required": false
                },
                "imageWidth": {
                    "type": "integer",
                    "required": false
                },
                "mimeType": {
                    "type": "string",
                    "required": false
                },
                "observationDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newListRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "string[]",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "listName": {
                    "type": "string",
                    "required": false
                },
                "listOwnerName": {
                    "type": "string",
                    "required": false
                },
                "listOwnerPersonDbId": {
                    "type": "string",
                    "required": false
                },
                "listSize": {
                    "type": "integer",
                    "required": false
                },
                "listSource": {
                    "type": "string",
                    "required": false
                },
                "listType": {
                    "type": "listTypes",
                    "required": true
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newMethodRequest": {
            "type": "object",
            "description": "new Method request",
            "fields": {
                "class": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "formula": {
                    "type": "string",
                    "required": false
                },
                "methodName": {
                    "type": "string",
                    "required": false
                },
                "ontologyReference": {
                    "type": "ontologyReference",
                    "required": false
                },
                "reference": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newObservationDbIds": {
            "type": "object",
            "description": "",
            "fields": {
                "observations": {
                    "type": "newObservationDbIds_observations[]",
                    "required": false
                }
            },
            "calls": {
                "/phenotypes": true,
                "/studies/{studyDbId}/observations": true,
                "/studies/{studyDbId}/table": true
            },
            "as_field_in": []
        },
        "newObservationUnitDbIds": {
            "type": "object",
            "description": "",
            "fields": {
                "observationUnitDbIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/studies/{studyDbId}/observationunits": true,
                "/studies/{studyDbId}/observationunits/zip": true
            },
            "as_field_in": []
        },
        "newObservationUnitRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "X": {
                    "type": "string",
                    "required": false
                },
                "Y": {
                    "type": "string",
                    "required": false
                },
                "blockNumber": {
                    "type": "string",
                    "required": false
                },
                "entryNumber": {
                    "type": "string",
                    "required": false
                },
                "entryType": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "observationLevel": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observationUnitName": {
                    "type": "string",
                    "required": false
                },
                "observationUnitXref": {
                    "type": "observationUnitXref[]",
                    "required": false
                },
                "observations": {
                    "type": "observation[]",
                    "required": false
                },
                "plantNumber": {
                    "type": "string",
                    "required": false
                },
                "plotNumber": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateX": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateXType": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateY": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateYType": {
                    "type": "string",
                    "required": false
                },
                "replicate": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "treatments": {
                    "type": "observationTreatment[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newObservationsRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "observations": {
                    "type": "newObservationsRequest_observations[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newPersonRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "description": {
                    "type": "string",
                    "required": false
                },
                "emailAddress": {
                    "type": "string",
                    "required": false
                },
                "firstName": {
                    "type": "string",
                    "required": false
                },
                "lastName": {
                    "type": "string",
                    "required": false
                },
                "mailingAddress": {
                    "type": "string",
                    "required": false
                },
                "middleName": {
                    "type": "string",
                    "required": false
                },
                "phoneNumber": {
                    "type": "string",
                    "required": false
                },
                "userID": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newScaleRequest": {
            "type": "object",
            "description": "New scale request object",
            "fields": {
                "dataType": {
                    "type": "traitDataType",
                    "required": false
                },
                "decimalPlaces": {
                    "type": "integer",
                    "required": false
                },
                "ontologyReference": {
                    "type": "ontologyReference",
                    "required": false
                },
                "scaleName": {
                    "type": "string",
                    "required": false
                },
                "validValues": {
                    "type": "validValues",
                    "required": false
                },
                "xref": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newTraitRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "alternativeAbbreviations": {
                    "type": "string[]",
                    "required": false
                },
                "attribute": {
                    "type": "string",
                    "required": false
                },
                "class": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "entity": {
                    "type": "string",
                    "required": false
                },
                "mainAbbreviation": {
                    "type": "string",
                    "required": false
                },
                "ontologyReference": {
                    "type": "ontologyReference",
                    "required": false
                },
                "status": {
                    "type": "string",
                    "required": false
                },
                "synonyms": {
                    "type": "string[]",
                    "required": false
                },
                "traitName": {
                    "type": "string",
                    "required": false
                },
                "xref": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "observation": {
            "type": "object",
            "description": "",
            "fields": {
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmName": {
                    "type": "string",
                    "required": false
                },
                "observationDbId": {
                    "type": "string",
                    "required": false
                },
                "observationLevel": {
                    "type": "string",
                    "required": false
                },
                "observationTimeStamp": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observationUnitName": {
                    "type": "string",
                    "required": false
                },
                "observationVariableDbId": {
                    "type": "string",
                    "required": false
                },
                "observationVariableName": {
                    "type": "string",
                    "required": false
                },
                "operator": {
                    "type": "string",
                    "required": false
                },
                "season": {
                    "type": "season",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "uploadedBy": {
                    "type": "string",
                    "required": false
                },
                "value": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/studies/{studyDbId}/observations": true
            },
            "as_field_in": {
                "newObservationUnitRequest": true
            }
        },
        "observationSummary": {
            "type": "object",
            "description": "",
            "fields": {
                "collector": {
                    "type": "string",
                    "required": false
                },
                "observationDbId": {
                    "type": "string",
                    "required": false
                },
                "observationTimeStamp": {
                    "type": "string",
                    "required": false
                },
                "observationVariableDbId": {
                    "type": "string",
                    "required": false
                },
                "observationVariableName": {
                    "type": "string",
                    "required": false
                },
                "season": {
                    "type": "season",
                    "required": false
                },
                "value": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "observationUnit": true
            }
        },
        "observationSummaryPhenotype": {
            "type": "object",
            "description": "",
            "fields": {
                "collector": {
                    "type": "string",
                    "required": false
                },
                "observationDbId": {
                    "type": "string",
                    "required": false
                },
                "observationTimeStamp": {
                    "type": "string",
                    "required": false
                },
                "observationVariableDbId": {
                    "type": "string",
                    "required": false
                },
                "observationVariableName": {
                    "type": "string",
                    "required": false
                },
                "season": {
                    "type": "string",
                    "required": false
                },
                "value": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "observationUnitPhenotype": true
            }
        },
        "observationTreatment": {
            "type": "object",
            "description": "",
            "fields": {
                "factor": {
                    "type": "string",
                    "required": false
                },
                "modality": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "observationUnit": {
            "type": "object",
            "description": "",
            "fields": {
                "X": {
                    "type": "string",
                    "required": false
                },
                "Y": {
                    "type": "string",
                    "required": false
                },
                "blockNumber": {
                    "type": "string",
                    "required": false
                },
                "entryNumber": {
                    "type": "string",
                    "required": false
                },
                "entryType": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmName": {
                    "type": "string",
                    "required": false
                },
                "locationDbId": {
                    "type": "string",
                    "required": false
                },
                "locationName": {
                    "type": "string",
                    "required": false
                },
                "observationLevel": {
                    "type": "string",
                    "required": false
                },
                "observationLevels": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observationUnitName": {
                    "type": "string",
                    "required": false
                },
                "observationUnitXref": {
                    "type": "observationUnitXref[]",
                    "required": false
                },
                "observations": {
                    "type": "observationSummary[]",
                    "required": false
                },
                "pedigree": {
                    "type": "string",
                    "required": false
                },
                "plantNumber": {
                    "type": "string",
                    "required": false
                },
                "plotNumber": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateX": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateXType": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateY": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateYType": {
                    "type": "string",
                    "required": false
                },
                "programDbId": {
                    "type": "string",
                    "required": false
                },
                "programName": {
                    "type": "string",
                    "required": false
                },
                "replicate": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "studyLocation": {
                    "type": "string",
                    "required": false
                },
                "studyLocationDbId": {
                    "type": "string",
                    "required": false
                },
                "studyName": {
                    "type": "string",
                    "required": false
                },
                "treatments": {
                    "type": "observationTreatment[]",
                    "required": false
                },
                "trialDbId": {
                    "type": "string",
                    "required": false
                },
                "trialName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/search/observationunits/{searchResultsDbId}": true,
                "/studies/{studyDbId}/observationunits": true
            },
            "as_field_in": []
        },
        "observationUnitPhenotype": {
            "type": "object",
            "description": "",
            "fields": {
                "X": {
                    "type": "string",
                    "required": false
                },
                "Y": {
                    "type": "string",
                    "required": false
                },
                "blockNumber": {
                    "type": "string",
                    "required": false
                },
                "entryNumber": {
                    "type": "string",
                    "required": false
                },
                "entryType": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmName": {
                    "type": "string",
                    "required": false
                },
                "observationLevel": {
                    "type": "string",
                    "required": false
                },
                "observationLevels": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observationUnitName": {
                    "type": "string",
                    "required": false
                },
                "observationUnitXref": {
                    "type": "observationUnitXref[]",
                    "required": false
                },
                "observations": {
                    "type": "observationSummaryPhenotype[]",
                    "required": false
                },
                "plantNumber": {
                    "type": "string",
                    "required": false
                },
                "plotNumber": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateX": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateXType": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateY": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateYType": {
                    "type": "string",
                    "required": false
                },
                "programName": {
                    "type": "string",
                    "required": false
                },
                "replicate": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "studyLocation": {
                    "type": "string",
                    "required": false
                },
                "studyLocationDbId": {
                    "type": "string",
                    "required": false
                },
                "studyName": {
                    "type": "string",
                    "required": false
                },
                "treatments": {
                    "type": "observationTreatment[]",
                    "required": false
                }
            },
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true
            },
            "as_field_in": []
        },
        "observationUnitPosition": {
            "type": "object",
            "description": "",
            "fields": {
                "X": {
                    "type": "string",
                    "required": false
                },
                "Y": {
                    "type": "string",
                    "required": false
                },
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "blockNumber": {
                    "type": "string",
                    "required": false
                },
                "entryType": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "germplasmName": {
                    "type": "string",
                    "required": false
                },
                "observationLevel": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observationUnitName": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateX": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateXType": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateY": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateYType": {
                    "type": "string",
                    "required": false
                },
                "replicate": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/studies/{studyDbId}/layout": true,
                "/studies/{studyDbId}/layouts": true
            },
            "as_field_in": []
        },
        "observationUnitXref": {
            "type": "object",
            "description": "",
            "fields": {
                "id": {
                    "type": "string",
                    "required": false
                },
                "source": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "observationUnitsTableResponse": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "array[]",
                    "required": false
                },
                "headerRow": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableNames": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/phenotypes-search/table": true,
                "/search/observationtables/{searchResultsDbId}": true
            },
            "as_field_in": []
        },
        "observationVariable": {
            "type": "",
            "description": "",
            "fields": [],
            "calls": {
                "/search/variables/{searchResultsDbId}": true,
                "/studies/{studyDbId}/observationVariables": true,
                "/studies/{studyDbId}/observationvariables": true,
                "/variables": true,
                "/variables-search": true,
                "/variables/{observationVariableDbId}": true
            },
            "as_field_in": []
        },
        "observationVariableSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "dataTypes": {
                    "type": "traitDataType[]",
                    "required": false
                },
                "methodDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableNames": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableXrefs": {
                    "type": "string[]",
                    "required": false
                },
                "ontologyDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "scaleDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "scaleXrefs": {
                    "type": "string[]",
                    "required": false
                },
                "traitClasses": {
                    "type": "string[]",
                    "required": false
                },
                "traitDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "traitXrefs": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "observationVariableSearchRequest_Dep": {
            "type": "object",
            "description": "",
            "fields": {
                "datatypes": {
                    "type": "traitDataType[]",
                    "required": false
                },
                "methodDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "names": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "ontologyDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "ontologyXrefs": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "scaleDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "traitClasses": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "observationsTable": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "array[]",
                    "required": false
                },
                "headerRow": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableNames": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/studies/{studyDbId}/table": true
            },
            "as_field_in": []
        },
        "ontology": {
            "type": "object",
            "description": "",
            "fields": {
                "authors": {
                    "type": "string",
                    "required": false
                },
                "copyright": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "licence": {
                    "type": "string",
                    "required": false
                },
                "ontologyDbId": {
                    "type": "string",
                    "required": true
                },
                "ontologyName": {
                    "type": "string",
                    "required": true
                },
                "version": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/ontologies": true
            },
            "as_field_in": []
        },
        "ontologyReference": {
            "type": "object",
            "description": "",
            "fields": {
                "documentationLinks": {
                    "type": "ontologyReference_documentationLinks[]",
                    "required": false
                },
                "ontologyDbId": {
                    "type": "string",
                    "required": false
                },
                "ontologyName": {
                    "type": "string",
                    "required": true
                },
                "version": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "VariableBaseClass": true,
                "method": true,
                "newMethodRequest": true,
                "newScaleRequest": true,
                "newTraitRequest": true,
                "scale": true,
                "trait": true
            }
        },
        "pedigree": {
            "type": "object",
            "description": "",
            "fields": {
                "crossingPlan": {
                    "type": "string",
                    "required": false
                },
                "crossingYear": {
                    "type": "string",
                    "required": false
                },
                "defaultDisplayName": {
                    "type": "string",
                    "required": false
                },
                "familyCode": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "parent1DbId": {
                    "type": "string",
                    "required": false
                },
                "parent1Id": {
                    "type": "string",
                    "required": false
                },
                "parent1Name": {
                    "type": "string",
                    "required": false
                },
                "parent1Type": {
                    "type": "string",
                    "required": false
                },
                "parent2DbId": {
                    "type": "string",
                    "required": false
                },
                "parent2Id": {
                    "type": "string",
                    "required": false
                },
                "parent2Name": {
                    "type": "string",
                    "required": false
                },
                "parent2Type": {
                    "type": "string",
                    "required": false
                },
                "pedigree": {
                    "type": "string",
                    "required": false
                },
                "siblings": {
                    "type": "pedigree_siblings[]",
                    "required": false
                }
            },
            "calls": {
                "/germplasm/{germplasmDbId}/pedigree": true
            },
            "as_field_in": []
        },
        "person": {
            "type": "object",
            "description": "",
            "fields": {
                "description": {
                    "type": "string",
                    "required": false
                },
                "emailAddress": {
                    "type": "string",
                    "required": false
                },
                "firstName": {
                    "type": "string",
                    "required": false
                },
                "lastName": {
                    "type": "string",
                    "required": false
                },
                "mailingAddress": {
                    "type": "string",
                    "required": false
                },
                "middleName": {
                    "type": "string",
                    "required": false
                },
                "personDbId": {
                    "type": "string",
                    "required": true
                },
                "phoneNumber": {
                    "type": "string",
                    "required": false
                },
                "userID": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/people": true,
                "/people/{personDbId}": true
            },
            "as_field_in": []
        },
        "phenotypesRequestObservation": {
            "type": "object",
            "description": "",
            "fields": {
                "collector": {
                    "type": "string",
                    "required": true
                },
                "observationDbId": {
                    "type": "string",
                    "required": false
                },
                "observationTimeStamp": {
                    "type": "string",
                    "required": true
                },
                "observationVariableDbId": {
                    "type": "string",
                    "required": true
                },
                "observationVariableName": {
                    "type": "string",
                    "required": true
                },
                "season": {
                    "type": "string",
                    "required": false
                },
                "value": {
                    "type": "string",
                    "required": true
                }
            },
            "calls": [],
            "as_field_in": {
                "phenotypesRequest_data": true
            }
        },
        "phenotypesSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "germplasmDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "locationDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationLevel": {
                    "type": "string",
                    "required": false
                },
                "observationTimeStampRangeEnd": {
                    "type": "string",
                    "required": false
                },
                "observationTimeStampRangeStart": {
                    "type": "string",
                    "required": false
                },
                "observationVariableDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "programDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "seasonDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "studyDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "trialDbIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "plateFormat": {
            "type": "string",
            "description": "Enum for plate formats, usually \"PLATE_96\" for a 96 well plate or \"TUBES\" for plateless format",
            "fields": [],
            "calls": [],
            "as_field_in": {
                "vendorPlate": true,
                "vendorOrderRequest_plates": true
            }
        },
        "polygon": {
            "type": "array",
            "description": "An array of linear rings",
            "fields": [],
            "calls": [],
            "as_field_in": []
        },
        "position": {
            "type": "array",
            "description": "A single position",
            "fields": [],
            "calls": [],
            "as_field_in": []
        },
        "progeny": {
            "type": "object",
            "description": "",
            "fields": {
                "defaultDisplayName": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "progeny": {
                    "type": "progeny_progeny[]",
                    "required": false
                }
            },
            "calls": {
                "/germplasm/{germplasmDbId}/progeny": true
            },
            "as_field_in": []
        },
        "program": {
            "type": "object",
            "description": "",
            "fields": {
                "abbreviation": {
                    "type": "string",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "leadPerson": {
                    "type": "string",
                    "required": false
                },
                "leadPersonDbId": {
                    "type": "string",
                    "required": false
                },
                "leadPersonName": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "objective": {
                    "type": "string",
                    "required": false
                },
                "programDbId": {
                    "type": "string",
                    "required": false
                },
                "programName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/programs": true,
                "/programs-search": true,
                "/search/programs/{searchResultsDbId}": true
            },
            "as_field_in": []
        },
        "programsSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "abbreviations": {
                    "type": "string[]",
                    "required": false
                },
                "commonCropNames": {
                    "type": "string[]",
                    "required": false
                },
                "leadPersonDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "leadPersonNames": {
                    "type": "string[]",
                    "required": false
                },
                "objectives": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "programDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "programNames": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "programsSearchRequest_Deprecated": {
            "type": "object",
            "description": "",
            "fields": {
                "abbreviation": {
                    "type": "string",
                    "required": false
                },
                "leadPerson": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "objective": {
                    "type": "string",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "programDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "sample": {
            "type": "object",
            "description": "",
            "fields": {
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "notes": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "plantDbId": {
                    "type": "string",
                    "required": false
                },
                "plateDbId": {
                    "type": "string",
                    "required": false
                },
                "plateIndex": {
                    "type": "integer",
                    "required": false
                },
                "plotDbId": {
                    "type": "string",
                    "required": false
                },
                "sampleDbId": {
                    "type": "string",
                    "required": false
                },
                "sampleTimestamp": {
                    "type": "string",
                    "required": false
                },
                "sampleType": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "takenBy": {
                    "type": "string",
                    "required": false
                },
                "tissueType": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/samples": true,
                "/samples-search": true,
                "/samples/{sampleDbId}": true,
                "/search/samples/{searchResultsDbId}": true
            },
            "as_field_in": []
        },
        "sampleSearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "germplasmDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationUnitDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "plateDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "sampleDbIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "sampleSearchRequest_Dep": {
            "type": "object",
            "description": "",
            "fields": {
                "germplasmDbId": {
                    "type": "string[]",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "plateDbId": {
                    "type": "string[]",
                    "required": false
                },
                "sampleDbId": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "scale": {
            "type": "object",
            "description": "Scale metadata",
            "fields": {
                "dataType": {
                    "type": "traitDataType",
                    "required": false
                },
                "decimalPlaces": {
                    "type": "integer",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "ontologyReference": {
                    "type": "ontologyReference",
                    "required": false
                },
                "scaleDbId": {
                    "type": "string",
                    "required": false
                },
                "scaleName": {
                    "type": "string",
                    "required": false
                },
                "validValues": {
                    "type": "validValues",
                    "required": false
                },
                "xref": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/scales": true,
                "/scales/{scaleDbId}": true
            },
            "as_field_in": {
                "VariableBaseClass": true
            }
        },
        "season": {
            "type": "object",
            "description": "",
            "fields": {
                "season": {
                    "type": "string",
                    "required": false
                },
                "seasonDbId": {
                    "type": "string",
                    "required": false
                },
                "year": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/seasons": true
            },
            "as_field_in": {
                "observation": true,
                "observationSummary": true,
                "studySummary": true
            }
        },
        "status": {
            "type": "object",
            "description": "",
            "fields": {
                "code": {
                    "type": "string",
                    "required": false
                },
                "message": {
                    "type": "string",
                    "required": true
                },
                "messageType": {
                    "type": "string",
                    "required": true
                }
            },
            "calls": [],
            "as_field_in": {
                "metadata": true,
                "newObservationsTableRequest_metadata": true
            }
        },
        "study": {
            "type": "object",
            "description": "",
            "fields": {
                "active": {
                    "type": "string",
                    "required": false
                },
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "contacts": {
                    "type": "contact[]",
                    "required": false
                },
                "dataLinks": {
                    "type": "dataLink[]",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "endDate": {
                    "type": "string",
                    "required": false
                },
                "lastUpdate": {
                    "type": "study_lastUpdate",
                    "required": false
                },
                "license": {
                    "type": "string",
                    "required": false
                },
                "location": {
                    "type": "location",
                    "required": false
                },
                "seasons": {
                    "type": "string[]",
                    "required": false
                },
                "startDate": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "studyDescription": {
                    "type": "string",
                    "required": false
                },
                "studyName": {
                    "type": "string",
                    "required": false
                },
                "studyType": {
                    "type": "string",
                    "required": false
                },
                "studyTypeDbId": {
                    "type": "string",
                    "required": false
                },
                "studyTypeName": {
                    "type": "string",
                    "required": false
                },
                "trialDbId": {
                    "type": "string",
                    "required": false
                },
                "trialName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/studies/{studyDbId}": true
            },
            "as_field_in": []
        },
        "studyLayoutRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "layout": {
                    "type": "studyLayoutRequest_layout[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "studySearchRequest": {
            "type": "object",
            "description": "",
            "fields": {
                "active": {
                    "type": "boolean",
                    "required": false
                },
                "commonCropNames": {
                    "type": "string[]",
                    "required": false
                },
                "germplasmDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "locationDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "programDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "programNames": {
                    "type": "string[]",
                    "required": false
                },
                "seasonDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "sortBy": {
                    "type": "string",
                    "required": false
                },
                "sortOrder": {
                    "type": "string",
                    "required": false
                },
                "studyDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "studyNames": {
                    "type": "string[]",
                    "required": false
                },
                "studyTypeDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "studyTypeNames": {
                    "type": "string[]",
                    "required": false
                },
                "trialDbIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "studySearchRequest_Dep": {
            "type": "object",
            "description": "",
            "fields": {
                "active": {
                    "type": "boolean",
                    "required": false
                },
                "germplasmDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "locationDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "observationVariableDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "programDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "programNames": {
                    "type": "string[]",
                    "required": false
                },
                "seasonDbId": {
                    "type": "string[]",
                    "required": false
                },
                "sortBy": {
                    "type": "string",
                    "required": false
                },
                "sortOrder": {
                    "type": "string",
                    "required": false
                },
                "studyDbIds": {
                    "type": "string[]",
                    "required": false
                },
                "studyLocations": {
                    "type": "string[]",
                    "required": false
                },
                "studyNames": {
                    "type": "string[]",
                    "required": false
                },
                "studyType": {
                    "type": "string",
                    "required": false
                },
                "trialDbIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "studySummary": {
            "type": "object",
            "description": "",
            "fields": {
                "active": {
                    "type": "string",
                    "required": false
                },
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "endDate": {
                    "type": "string",
                    "required": false
                },
                "locationDbId": {
                    "type": "string",
                    "required": false
                },
                "locationName": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "programDbId": {
                    "type": "string",
                    "required": false
                },
                "programName": {
                    "type": "string",
                    "required": false
                },
                "seasons": {
                    "type": "season[]",
                    "required": false
                },
                "startDate": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "studyName": {
                    "type": "string",
                    "required": false
                },
                "studyType": {
                    "type": "string",
                    "required": false
                },
                "studyTypeDbId": {
                    "type": "string",
                    "required": false
                },
                "studyTypeName": {
                    "type": "string",
                    "required": false
                },
                "trialDbId": {
                    "type": "string",
                    "required": false
                },
                "trialName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/search/studies/{searchResultsDbId}": true,
                "/studies": true,
                "/studies-search": true
            },
            "as_field_in": []
        },
        "studyType": {
            "type": "object",
            "description": "",
            "fields": {
                "description": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "studyTypeDbId": {
                    "type": "string",
                    "required": false
                },
                "studyTypeName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/studyTypes": true,
                "/studytypes": true
            },
            "as_field_in": []
        },
        "taxonID": {
            "type": "object",
            "description": "",
            "fields": {
                "sourceName": {
                    "type": "string",
                    "required": true
                },
                "taxonId": {
                    "type": "string",
                    "required": true
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "trait": {
            "type": "object",
            "description": "",
            "fields": {
                "alternativeAbbreviations": {
                    "type": "string[]",
                    "required": false
                },
                "attribute": {
                    "type": "string",
                    "required": false
                },
                "class": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "entity": {
                    "type": "string",
                    "required": false
                },
                "mainAbbreviation": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "ontologyReference": {
                    "type": "ontologyReference",
                    "required": false
                },
                "status": {
                    "type": "string",
                    "required": false
                },
                "synonyms": {
                    "type": "string[]",
                    "required": false
                },
                "traitDbId": {
                    "type": "string",
                    "required": false
                },
                "traitName": {
                    "type": "string",
                    "required": false
                },
                "xref": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/traits": true,
                "/traits/{traitDbId}": true
            },
            "as_field_in": {
                "VariableBaseClass": true
            }
        },
        "traitDataType": {
            "type": "string",
            "description": "Class of the scale, entries can be \n\n  \"Code\" -  This scale class is exceptionally used to express complex traits. Code is a nominal\n            scale that combines the expressions of the different traits composing the complex\n            trait. For exemple a severity trait might be expressed by a 2 digit and 2 character\n            code. The first 2 digits are the percentage of the plant covered by a fungus and the 2\n            characters refer to the delay in development, e.g. \"75VD\" means \"75%\" of the plant is \n            Crop Ontology & Integrated Breeding Platform | Curation Guidelines | 5/6/2016 9\n            infected and the plant is very delayed.\n  \n  \"Date\" - The date class is for events expressed in a time format, e.g. yyyymmddThh:mm:ssZ or dd/mm/yy\n  \n  \"Duration\" - The Duration class is for time elapsed between two events expressed in a time format, e.g. days, hours, months\n  \n  \"Nominal\" - Categorical scale that can take one of a limited and fixed number of categories. There is no intrinsic ordering to the categories\n  \n  \"Numerical\" - Numerical scales express the trait with real numbers. The numerical scale defines the unit e.g. centimeter, ton per hectar, branches\n  \n  \"Ordinal\" - Ordinal scales are scales composed of ordered categories\n  \n  \"Text\" - A free text is used to express the trait.\n  ",
            "fields": [],
            "calls": [],
            "as_field_in": {
                "newScaleRequest": true,
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true,
                "scale": true
            }
        },
        "traitSummary": {
            "type": "object",
            "description": "",
            "fields": {
                "defaultValue": {
                    "type": "string",
                    "required": false
                },
                "description": {
                    "type": "string",
                    "required": false
                },
                "name": {
                    "type": "string",
                    "required": false
                },
                "observationVariables": {
                    "type": "string[]",
                    "required": false
                },
                "traitDbId": {
                    "type": "string",
                    "required": false
                },
                "traitId": {
                    "type": "string",
                    "required": false
                },
                "traitName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/traits": true,
                "/traits/{traitDbId}": true
            },
            "as_field_in": []
        },
        "trial": {
            "type": "object",
            "description": "",
            "fields": {
                "active": {
                    "type": "boolean",
                    "required": false
                },
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "contacts": {
                    "type": "contact[]",
                    "required": false
                },
                "datasetAuthorship": {
                    "type": "trial_datasetAuthorship",
                    "required": false
                },
                "datasetAuthorships": {
                    "type": "trial_datasetAuthorships[]",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "endDate": {
                    "type": "string",
                    "required": false
                },
                "programDbId": {
                    "type": "string",
                    "required": false
                },
                "programName": {
                    "type": "string",
                    "required": false
                },
                "publications": {
                    "type": "trial_publications[]",
                    "required": false
                },
                "startDate": {
                    "type": "string",
                    "required": false
                },
                "studies": {
                    "type": "trial_studies[]",
                    "required": false
                },
                "trialDbId": {
                    "type": "string",
                    "required": false
                },
                "trialName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/trials/{trialDbId}": true
            },
            "as_field_in": []
        },
        "trialSummary": {
            "type": "object",
            "description": "",
            "fields": {
                "active": {
                    "type": "boolean",
                    "required": false
                },
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "commonCropName": {
                    "type": "string",
                    "required": false
                },
                "documentationURL": {
                    "type": "string",
                    "required": false
                },
                "endDate": {
                    "type": "string",
                    "required": false
                },
                "programDbId": {
                    "type": "string",
                    "required": false
                },
                "programName": {
                    "type": "string",
                    "required": false
                },
                "startDate": {
                    "type": "string",
                    "required": false
                },
                "studies": {
                    "type": "trial_studies[]",
                    "required": false
                },
                "trialDbId": {
                    "type": "string",
                    "required": false
                },
                "trialName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/trials": true
            },
            "as_field_in": []
        },
        "validValues": {
            "type": "object",
            "description": "",
            "fields": {
                "categories": {
                    "type": "string[]",
                    "required": false
                },
                "max": {
                    "type": "integer",
                    "required": false
                },
                "min": {
                    "type": "integer",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "newScaleRequest": true,
                "scale": true
            }
        },
        "vendorContact": {
            "type": "object",
            "description": "",
            "fields": {
                "vendorAddress": {
                    "type": "string",
                    "required": false
                },
                "vendorCity": {
                    "type": "string",
                    "required": false
                },
                "vendorContactName": {
                    "type": "string",
                    "required": false
                },
                "vendorCountry": {
                    "type": "string",
                    "required": false
                },
                "vendorDescription": {
                    "type": "string",
                    "required": false
                },
                "vendorEmail": {
                    "type": "string",
                    "required": false
                },
                "vendorName": {
                    "type": "string",
                    "required": false
                },
                "vendorPhone": {
                    "type": "string",
                    "required": false
                },
                "vendorURL": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "vendorSpecification": true
            }
        },
        "vendorOntologyReference": {
            "type": "object",
            "description": "Ontology reference details",
            "fields": {
                "ontologyID": {
                    "type": "string",
                    "required": false
                },
                "ontologyPrefix": {
                    "type": "string",
                    "required": false
                },
                "ontologyTerm": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "vendorSample": true
            }
        },
        "vendorOrder": {
            "type": "object",
            "description": "The details of a vendor order",
            "fields": {
                "clientId": {
                    "type": "string",
                    "required": false
                },
                "numberOfSamples": {
                    "type": "integer",
                    "required": false
                },
                "orderId": {
                    "type": "string",
                    "required": false
                },
                "requiredServiceInfo": {
                    "type": "object",
                    "required": false
                },
                "serviceId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/vendor/orders": true
            },
            "as_field_in": []
        },
        "vendorOrderRequest": {
            "type": "object",
            "description": "Request object structure to submit plate data to a vendor",
            "fields": {
                "clientId": {
                    "type": "string",
                    "required": false
                },
                "numberOfSamples": {
                    "type": "integer",
                    "required": false
                },
                "plates": {
                    "type": "vendorOrderRequest_plates[]",
                    "required": false
                },
                "requiredServiceInfo": {
                    "type": "object",
                    "required": false
                },
                "sampleType": {
                    "type": "string",
                    "required": false
                },
                "serviceIds": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "vendorPlate": {
            "type": "object",
            "description": "",
            "fields": {
                "clientPlateBarcode": {
                    "type": "string",
                    "required": false
                },
                "clientPlateId": {
                    "type": "string",
                    "required": false
                },
                "sampleSubmissionFormat": {
                    "type": "plateFormat",
                    "required": false
                },
                "samples": {
                    "type": "vendorSample[]",
                    "required": false
                }
            },
            "calls": {
                "/vendor/orders/{orderId}/plates": true
            },
            "as_field_in": []
        },
        "vendorPlateGetResponse": {
            "type": "object",
            "description": "Response of a plate submission",
            "fields": {
                "clientId": {
                    "type": "string",
                    "required": false
                },
                "numberOfSamples": {
                    "type": "integer",
                    "required": false
                },
                "plates": {
                    "type": "vendorOrderRequest_plates[]",
                    "required": false
                }
            },
            "calls": {
                "/vendor/plates/{submissionId}": true
            },
            "as_field_in": []
        },
        "vendorPlatesSubmissionRequest": {
            "type": "object",
            "description": "Request object structure to submit plate data to a vendor",
            "fields": {
                "clientId": {
                    "type": "string",
                    "required": false
                },
                "numberOfSamples": {
                    "type": "integer",
                    "required": false
                },
                "plates": {
                    "type": "vendorOrderRequest_plates[]",
                    "required": false
                },
                "sampleType": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "vendorPlatesSubmissionResponse": {
            "type": "object",
            "description": "Response to an order request",
            "fields": {
                "submissionId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/vendor/plates": true
            },
            "as_field_in": []
        },
        "vendorResultFile": {
            "type": "object",
            "description": "",
            "fields": {
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "clientSampleIds": {
                    "type": "string[]",
                    "required": true
                },
                "fileName": {
                    "type": "string",
                    "required": true
                },
                "fileType": {
                    "type": "string",
                    "required": true
                },
                "fileURL": {
                    "type": "string",
                    "required": true
                },
                "md5sum": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/vendor/orders/{orderId}/results": true
            },
            "as_field_in": []
        },
        "vendorSample": {
            "type": "object",
            "description": "",
            "fields": {
                "clientSampleBarCode": {
                    "type": "string",
                    "required": false
                },
                "clientSampleId": {
                    "type": "string",
                    "required": false
                },
                "column": {
                    "type": "string",
                    "required": false
                },
                "comments": {
                    "type": "string",
                    "required": false
                },
                "concentration": {
                    "type": "measurement",
                    "required": false
                },
                "organismName": {
                    "type": "string",
                    "required": false
                },
                "row": {
                    "type": "string",
                    "required": false
                },
                "speciesName": {
                    "type": "string",
                    "required": false
                },
                "taxonomyOntologyReference": {
                    "type": "vendorOntologyReference",
                    "required": false
                },
                "tissueType": {
                    "type": "string",
                    "required": false
                },
                "tissueTypeOntologyReference": {
                    "type": "vendorOntologyReference",
                    "required": false
                },
                "volume": {
                    "type": "measurement",
                    "required": false
                },
                "well": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "vendorPlate": true,
                "vendorOrderRequest_plates": true
            }
        },
        "vendorSpecification": {
            "type": "object",
            "description": "",
            "fields": {
                "additionalInfo": {
                    "type": "object",
                    "required": false
                },
                "services": {
                    "type": "vendorSpecificationService[]",
                    "required": false
                },
                "vendorContact": {
                    "type": "vendorContact",
                    "required": false
                }
            },
            "calls": {
                "/vendor/specifications": true
            },
            "as_field_in": []
        },
        "vendorSpecificationService": {
            "type": "object",
            "description": "",
            "fields": {
                "serviceDescription": {
                    "type": "string",
                    "required": false
                },
                "serviceId": {
                    "type": "string",
                    "required": false
                },
                "serviceName": {
                    "type": "string",
                    "required": false
                },
                "servicePlatformMarkerType": {
                    "type": "string",
                    "required": false
                },
                "servicePlatformName": {
                    "type": "string",
                    "required": false
                },
                "specificRequirements": {
                    "type": "object",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "vendorSpecification": true
            }
        },
        "login_body": {
            "type": "object",
            "description": "",
            "fields": {
                "client_id": {
                    "type": "string",
                    "required": false
                },
                "grant_type": {
                    "type": "string",
                    "required": false
                },
                "password": {
                    "type": "string",
                    "required": false
                },
                "username": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "asynchStatusMetadata_asynchStatus": {
            "type": "",
            "description": "",
            "fields": {
                "asynchId": {
                    "type": "string",
                    "required": true
                },
                "endTime": {
                    "type": "string",
                    "required": false
                },
                "percentComplete": {
                    "type": "integer",
                    "required": false
                },
                "startTime": {
                    "type": "string",
                    "required": false
                },
                "status": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "asynchStatusMetadata": true
            }
        },
        "germplasm_donors": {
            "type": "object",
            "description": "",
            "fields": {
                "donorAccessionNumber": {
                    "type": "string",
                    "required": false
                },
                "donorInstituteCode": {
                    "type": "string",
                    "required": false
                },
                "germplasmPUI": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "germplasmMCPD_breedingInstitutes": {
            "type": "object",
            "description": "",
            "fields": {
                "instituteCode": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasmMCPD": true
            }
        },
        "germplasmMCPD_collectingInfo_collectingInstitutes": {
            "type": "object",
            "description": "",
            "fields": {
                "instituteAddress": {
                    "type": "string",
                    "required": false
                },
                "instituteCode": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasmMCPD_collectingInfo": true
            }
        },
        "germplasmMCPD_collectingInfo_collectingSite": {
            "type": "object",
            "description": "Information about the location where the sample was collected",
            "fields": {
                "coordinateUncertainty": {
                    "type": "string",
                    "required": false
                },
                "elevation": {
                    "type": "string",
                    "required": false
                },
                "georeferencingMethod": {
                    "type": "string",
                    "required": false
                },
                "latitudeDecimal": {
                    "type": "string",
                    "required": false
                },
                "latitudeDegrees": {
                    "type": "string",
                    "required": false
                },
                "locationDescription": {
                    "type": "string",
                    "required": false
                },
                "longitudeDecimal": {
                    "type": "string",
                    "required": false
                },
                "longitudeDegrees": {
                    "type": "string",
                    "required": false
                },
                "spatialReferenceSystem": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasmMCPD_collectingInfo": true
            }
        },
        "germplasmMCPD_collectingInfo": {
            "type": "object",
            "description": "Information about the collection of this germplasm",
            "fields": {
                "collectingDate": {
                    "type": "string",
                    "required": false
                },
                "collectingInstitutes": {
                    "type": "germplasmMCPD_collectingInfo_collectingInstitutes[]",
                    "required": false
                },
                "collectingMissionIdentifier": {
                    "type": "string",
                    "required": false
                },
                "collectingNumber": {
                    "type": "string",
                    "required": false
                },
                "collectingSite": {
                    "type": "germplasmMCPD_collectingInfo_collectingSite",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasmMCPD": true
            }
        },
        "germplasmMCPD_donorInfo_donorInstitute": {
            "type": "object",
            "description": "",
            "fields": {
                "instituteCode": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasmMCPD_donorInfo": true
            }
        },
        "germplasmMCPD_donorInfo": {
            "type": "object",
            "description": "Information about the donor",
            "fields": {
                "donorAccessionNumber": {
                    "type": "string",
                    "required": false
                },
                "donorInstitute": {
                    "type": "germplasmMCPD_donorInfo_donorInstitute",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasmMCPD": true
            }
        },
        "germplasmMCPD_safetyDuplicateInstitues": {
            "type": "object",
            "description": "",
            "fields": {
                "instituteCode": {
                    "type": "string",
                    "required": false
                },
                "instituteName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "germplasmMCPD": true
            }
        },
        "metadata_pagination": {
            "type": "object",
            "description": "The pagination object is applicable only when the payload contains a \"data\" key. It describes the pagination of the data contained in the \"data\" array, as a way to identify which subset of data is being returned. Pages are zero indexed, so the first page will be page 0 (zero).",
            "fields": {
                "currentPage": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "totalCount": {
                    "type": "integer",
                    "required": false
                },
                "totalPages": {
                    "type": "integer",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "metadata": true
            }
        },
        "newObservationDbIds_observations": {
            "type": "object",
            "description": "",
            "fields": {
                "observationDbId": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observationVariableDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "newObservationDbIds": true
            }
        },
        "newObservationsRequest_observations": {
            "type": "object",
            "description": "",
            "fields": {
                "collector": {
                    "type": "string",
                    "required": false
                },
                "observationDbId": {
                    "type": "string",
                    "required": false
                },
                "observationTimeStamp": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observationVariableDbId": {
                    "type": "string",
                    "required": false
                },
                "value": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "newObservationsRequest": true,
                "newObservationsRequestDeprecated_data": true
            }
        },
        "newObservationsRequestDeprecated_data": {
            "type": "object",
            "description": "",
            "fields": {
                "observatioUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "observations": {
                    "type": "newObservationsRequest_observations[]",
                    "required": false
                },
                "studyDbId": {
                    "type": "number",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newObservationsTableRequest_metadata_pagination": {
            "type": "object",
            "description": "",
            "fields": {
                "currentPage": {
                    "type": "integer",
                    "required": false
                },
                "pageSize": {
                    "type": "integer",
                    "required": false
                },
                "totalCount": {
                    "type": "integer",
                    "required": false
                },
                "totalPages": {
                    "type": "integer",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "newObservationsTableRequest_metadata": true
            }
        },
        "newObservationsTableRequest_metadata": {
            "type": "",
            "description": "DEPRECATED",
            "fields": {
                "datafiles": {
                    "type": "string[]",
                    "required": false
                },
                "pagination": {
                    "type": "newObservationsTableRequest_metadata_pagination",
                    "required": false
                },
                "status": {
                    "type": "status[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newObservationsTableRequest_result": {
            "type": "object",
            "description": "DEPRECATED",
            "fields": {
                "data": {
                    "type": "array[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "newSampleDbId_result": {
            "type": "object",
            "description": "List of sample references which have been created or updated",
            "fields": {
                "sampleDbId": {
                    "type": "string",
                    "required": false
                },
                "sampleId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/samples": true
            },
            "as_field_in": []
        },
        "ontologyReference_documentationLinks": {
            "type": "object",
            "description": "",
            "fields": {
                "URL": {
                    "type": "string",
                    "required": false
                },
                "type": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "ontologyReference": true
            }
        },
        "pedigree_siblings": {
            "type": "object",
            "description": "",
            "fields": {
                "defaultDisplayName": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "pedigree": true
            }
        },
        "phenotypesRequest_data": {
            "type": "object",
            "description": "new phenotypes",
            "fields": {
                "observatioUnitDbId": {
                    "type": "string",
                    "required": true
                },
                "observations": {
                    "type": "phenotypesRequestObservation[]",
                    "required": true
                },
                "studyDbId": {
                    "type": "string",
                    "required": true
                }
            },
            "calls": [],
            "as_field_in": []
        },
        "progeny_progeny": {
            "type": "object",
            "description": "",
            "fields": {
                "defaultDisplayName": {
                    "type": "string",
                    "required": false
                },
                "germplasmDbId": {
                    "type": "string",
                    "required": false
                },
                "parentType": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "progeny": true
            }
        },
        "study_lastUpdate": {
            "type": "object",
            "description": "The date and time when this study was last modified",
            "fields": {
                "timestamp": {
                    "type": "string",
                    "required": false
                },
                "version": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "study": true
            }
        },
        "studyLayoutRequest_layout": {
            "type": "object",
            "description": "",
            "fields": {
                "X": {
                    "type": "string",
                    "required": false
                },
                "Y": {
                    "type": "string",
                    "required": false
                },
                "blockNumber": {
                    "type": "integer",
                    "required": false
                },
                "entryType": {
                    "type": "string",
                    "required": false
                },
                "observationUnitDbId": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateX": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateXType": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateY": {
                    "type": "string",
                    "required": false
                },
                "positionCoordinateYType": {
                    "type": "string",
                    "required": false
                },
                "replicate": {
                    "type": "integer",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "studyLayoutRequest": true
            }
        },
        "successfulSearchResponse_result": {
            "type": "object",
            "description": "",
            "fields": {
                "searchResultDbId": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/search/germplasm": true,
                "/search/images": true,
                "/search/markers": true,
                "/search/observationtables": true,
                "/search/observationunits": true,
                "/search/programs": true,
                "/search/samples": true,
                "/search/studies": true,
                "/search/variables": true
            },
            "as_field_in": []
        },
        "trial_datasetAuthorship": {
            "type": "object",
            "description": "DEPRECATED in v1.3 - see datasetAuthorships",
            "fields": {
                "datasetPUI": {
                    "type": "string",
                    "required": false
                },
                "license": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "trial": true
            }
        },
        "trial_datasetAuthorships": {
            "type": "object",
            "description": "",
            "fields": {
                "datasetPUI": {
                    "type": "string",
                    "required": false
                },
                "license": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "trial": true
            }
        },
        "trial_publications": {
            "type": "object",
            "description": "",
            "fields": {
                "publicationPUI": {
                    "type": "string",
                    "required": false
                },
                "publicationReference": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "trial": true
            }
        },
        "trial_studies": {
            "type": "object",
            "description": "",
            "fields": {
                "locationDbId": {
                    "type": "string",
                    "required": false
                },
                "locationName": {
                    "type": "string",
                    "required": false
                },
                "studyDbId": {
                    "type": "string",
                    "required": false
                },
                "studyName": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "trial": true,
                "trialSummary": true
            }
        },
        "vendorOrderRequest_plates": {
            "type": "object",
            "description": "",
            "fields": {
                "clientPlateBarcode": {
                    "type": "string",
                    "required": false
                },
                "clientPlateId": {
                    "type": "string",
                    "required": false
                },
                "sampleSubmissionFormat": {
                    "type": "plateFormat",
                    "required": false
                },
                "samples": {
                    "type": "vendorSample[]",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "vendorOrderRequest": true,
                "vendorPlateGetResponse": true,
                "vendorPlatesSubmissionRequest": true
            }
        },
        "vendorOrderResponse_result_shipmentForms": {
            "type": "object",
            "description": "",
            "fields": {
                "fileDescription": {
                    "type": "string",
                    "required": false
                },
                "fileName": {
                    "type": "string",
                    "required": false
                },
                "fileURL": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": [],
            "as_field_in": {
                "vendorOrderResponse_result": true
            }
        },
        "vendorOrderResponse_result": {
            "type": "object",
            "description": "Response to an order request",
            "fields": {
                "orderId": {
                    "type": "string",
                    "required": false
                },
                "shipmentForms": {
                    "type": "vendorOrderResponse_result_shipmentForms[]",
                    "required": false
                }
            },
            "calls": {
                "/vendor/orders": true
            },
            "as_field_in": []
        },
        "commonCropNamesResponse_result": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "string[]",
                    "required": true
                }
            },
            "calls": {
                "/commoncropnames": true
            },
            "as_field_in": []
        },
        "cropsResponse_result": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/crops": true
            },
            "as_field_in": []
        },
        "observationLevelsResponse_result": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "string[]",
                    "required": false
                }
            },
            "calls": {
                "/observationLevels": true
            },
            "as_field_in": []
        },
        "observationLevelsResponse_1_result": {
            "type": "object",
            "description": "",
            "fields": {
                "data": {
                    "type": "string[]",
                    "required": true
                }
            },
            "calls": {
                "/observationlevels": true
            },
            "as_field_in": []
        },
        "vendorOrderStatusResponse_result": {
            "type": "object",
            "description": "",
            "fields": {
                "status": {
                    "type": "string",
                    "required": false
                }
            },
            "calls": {
                "/vendor/orders/{orderId}/status": true
            },
            "as_field_in": []
        }
    },
    "fields": {
        "contextOfUse": {
            "type": "string[]",
            "description": "Indication of how trait is routinely used. (examples: [\"Trial evaluation\", \"Nursery evaluation\"])",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "crop": {
            "type": "string",
            "description": "Crop name (examples: \"Maize\", \"Wheat\")",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "defaultValue": {
            "type": "string",
            "description": "Variable default value. (examples: \"red\", \"2.3\", etc.)",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "traitSummary": true
            }
        },
        "documentationURL": {
            "type": "string",
            "description": "A URL to the human readable documentation of this object",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "genomeMap": true,
                "germplasm": true,
                "germplasmSummary": true,
                "location": true,
                "ontology": true,
                "program": true,
                "study": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "growthStage": {
            "type": "string",
            "description": "Growth stage at which measurement is made (examples: \"flowering\")",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "institution": {
            "type": "string",
            "description": "Name of institution submitting the variable",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "language": {
            "type": "string",
            "description": "2 letter ISO code for the language of submission of the variable.",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "method": {
            "type": "method",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "ontologyDbId": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - see \"this.ontologyReference.ontologyDbId\"",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "ontology": true,
                "ontologyReference": true
            }
        },
        "ontologyName": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - see \"this.ontologyReference.ontologyName\"",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "ontology": true,
                "ontologyReference": true
            }
        },
        "ontologyReference": {
            "type": "ontologyReference",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "method": true,
                "newMethodRequest": true,
                "newScaleRequest": true,
                "newTraitRequest": true,
                "scale": true,
                "trait": true
            }
        },
        "scale": {
            "type": "scale",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "scientist": {
            "type": "string",
            "description": "Name of scientist submitting the variable.",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "status": {
            "type": "string",
            "description": "Variable status. (examples: \"recommended\", \"obsolete\", \"legacy\", etc.)",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "metadata": true,
                "newTraitRequest": true,
                "trait": true,
                "asynchStatusMetadata_asynchStatus": true,
                "newObservationsTableRequest_metadata": true,
                "vendorOrderStatusResponse_result": true
            }
        },
        "submissionTimestamp": {
            "type": "string",
            "description": "Timestamp when the Variable was added (ISO 8601)",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "synonyms": {
            "type": "string[]",
            "description": "Other variable names",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "germplasm": true,
                "germplasmSummary": true,
                "marker": true,
                "newTraitRequest": true,
                "trait": true
            }
        },
        "trait": {
            "type": "trait",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true
            }
        },
        "xref": {
            "type": "string",
            "description": "Cross reference of the variable term to a term from an external ontology or to a database of a major system.",
            "example": "",
            "calls": [],
            "data_types": {
                "VariableBaseClass": true,
                "newScaleRequest": true,
                "newTraitRequest": true,
                "scale": true,
                "trait": true
            }
        },
        "description": {
            "type": "string",
            "description": "How the matrix was generated",
            "example": "",
            "calls": [],
            "data_types": {
                "alleleMatrixDetails": true,
                "breedingMethod": true,
                "image": true,
                "listSummary": true,
                "method": true,
                "newImageRequest": true,
                "newListRequest": true,
                "newMethodRequest": true,
                "newPersonRequest": true,
                "newTraitRequest": true,
                "ontology": true,
                "person": true,
                "studyType": true,
                "trait": true,
                "traitSummary": true
            }
        },
        "lastUpdated": {
            "type": "string",
            "description": "A date format",
            "example": "",
            "calls": [],
            "data_types": {
                "alleleMatrixDetails": true
            }
        },
        "matrixDbId": {
            "type": "string",
            "description": "ID of the matrix",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true
            },
            "data_types": {
                "alleleMatrixDetails": true,
                "alleleMatrixSearchRequest": true
            }
        },
        "matrixName": {
            "type": "string",
            "description": "Name of the matrix",
            "example": "",
            "calls": [],
            "data_types": {
                "alleleMatrixDetails": true
            }
        },
        "name": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - Use \"matrixName\"",
            "example": "",
            "calls": {
                "/markers": true,
                "/markers-search": true
            },
            "data_types": {
                "alleleMatrixDetails": true,
                "breedingMethod": true,
                "contact": true,
                "dataLink": true,
                "genomeMap": true,
                "germplasmAttributeCategory": true,
                "location": true,
                "markersSearchRequest": true,
                "method": true,
                "program": true,
                "programsSearchRequest_Deprecated": true,
                "scale": true,
                "studySummary": true,
                "studyType": true,
                "trait": true,
                "traitSummary": true
            }
        },
        "studyDbId": {
            "type": "string",
            "description": "Link to the study where the matrix was produced",
            "example": "",
            "calls": {
                "/allelematrices": true,
                "/markerprofiles": true,
                "/observationunits": true,
                "/phenotypes-search": true,
                "/studies": true,
                "/studies-search": true,
                "/studies/{studyDbId}": true,
                "/studies/{studyDbId}/germplasm": true,
                "/studies/{studyDbId}/layout": true,
                "/studies/{studyDbId}/layouts": true,
                "/studies/{studyDbId}/observationVariables": true,
                "/studies/{studyDbId}/observations": true,
                "/studies/{studyDbId}/observationunits": true,
                "/studies/{studyDbId}/observationunits/zip": true,
                "/studies/{studyDbId}/observationvariables": true,
                "/studies/{studyDbId}/table": true
            },
            "data_types": {
                "alleleMatrixDetails": true,
                "newObservationUnitRequest": true,
                "observation": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "sample": true,
                "study": true,
                "studySummary": true,
                "newObservationsRequestDeprecated_data": true,
                "phenotypesRequest_data": true,
                "trial_studies": true
            }
        },
        "expandHomozygotes": {
            "type": "boolean",
            "description": "Should homozygotes be expanded (true) or collapsed into a single occurence (false)",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/markerprofiles/{markerProfileDbId}": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true
            }
        },
        "format": {
            "type": "string",
            "description": "The data format of the response data. ie \"json\", \"tsv\", etc",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/studies/{studyDbId}/observationunits": true,
                "/studies/{studyDbId}/table": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true
            }
        },
        "markerDbId": {
            "type": "string[]",
            "description": "An ID which uniquely identifies a Marker",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/markers": true,
                "/markers/{markerDbId}": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true,
                "marker": true,
                "markerSummaryLinkageGroup": true,
                "markerSummaryMap": true
            }
        },
        "markerProfileDbId": {
            "type": "string[]",
            "description": "An ID which uniquely identifies a Marker Profile",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/markerprofiles/{markerProfileDbId}": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true,
                "markerProfile": true,
                "markerProfileDescription": true
            }
        },
        "markerprofileDbId": {
            "type": "string[]",
            "description": "DEPRECATED in v1.3 - see \"markerProfileDbId\" (camel case)",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true,
                "markerProfile": true,
                "markerProfileDescription": true
            }
        },
        "page": {
            "type": "integer",
            "description": "Which page of the \"data\" array to return. The page indexing starts at 0 (page=0 will return the first page). Default is 0.",
            "example": "",
            "calls": {
                "/allelematrices": true,
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/attributes": true,
                "/attributes/categories": true,
                "/breedingmethods": true,
                "/calls": true,
                "/commoncropnames": true,
                "/crops": true,
                "/germplasm": true,
                "/germplasm-search": true,
                "/germplasm/{germplasmDbId}/attributes": true,
                "/images": true,
                "/lists": true,
                "/locations": true,
                "/maps": true,
                "/maps/{mapDbId}": true,
                "/maps/{mapDbId}/positions": true,
                "/maps/{mapDbId}/positions/{linkageGroupName}": true,
                "/markerprofiles": true,
                "/markerprofiles/{markerProfileDbId}": true,
                "/markers": true,
                "/markers-search": true,
                "/methods": true,
                "/observationLevels": true,
                "/observationlevels": true,
                "/observationunits": true,
                "/ontologies": true,
                "/people": true,
                "/phenotypes-search": true,
                "/programs": true,
                "/samples": true,
                "/samples-search": true,
                "/scales": true,
                "/search/germplasm/{searchResultsDbId}": true,
                "/search/images/{searchResultsDbId}": true,
                "/search/markers/{searchResultsDbId}": true,
                "/search/observationtables/{searchResultsDbId}": true,
                "/search/observationunits/{searchResultsDbId}": true,
                "/search/programs/{searchResultsDbId}": true,
                "/search/samples/{searchResultsDbId}": true,
                "/search/studies/{searchResultsDbId}": true,
                "/search/variables/{searchResultsDbId}": true,
                "/seasons": true,
                "/studies": true,
                "/studies-search": true,
                "/studies/{studyDbId}/germplasm": true,
                "/studies/{studyDbId}/layout": true,
                "/studies/{studyDbId}/layouts": true,
                "/studies/{studyDbId}/observations": true,
                "/studies/{studyDbId}/observationunits": true,
                "/studies/{studyDbId}/observationvariables": true,
                "/studyTypes": true,
                "/studytypes": true,
                "/traits": true,
                "/trials": true,
                "/variables": true,
                "/variables/datatypes": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true,
                "germplasmSearchRequest": true,
                "markersSearchRequest": true,
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true,
                "phenotypesSearchRequest": true,
                "programsSearchRequest": true,
                "programsSearchRequest_Deprecated": true,
                "sampleSearchRequest": true,
                "sampleSearchRequest_Dep": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "pageSize": {
            "type": "integer",
            "description": "The maximum number of items to return per page of the \"data\" array. Default is 1000.",
            "example": "",
            "calls": {
                "/allelematrices": true,
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/attributes": true,
                "/attributes/categories": true,
                "/breedingmethods": true,
                "/calls": true,
                "/commoncropnames": true,
                "/crops": true,
                "/germplasm": true,
                "/germplasm-search": true,
                "/germplasm/{germplasmDbId}/attributes": true,
                "/images": true,
                "/lists": true,
                "/locations": true,
                "/maps": true,
                "/maps/{mapDbId}": true,
                "/maps/{mapDbId}/positions": true,
                "/maps/{mapDbId}/positions/{linkageGroupName}": true,
                "/markerprofiles": true,
                "/markerprofiles/{markerProfileDbId}": true,
                "/markers": true,
                "/markers-search": true,
                "/methods": true,
                "/observationLevels": true,
                "/observationlevels": true,
                "/observationunits": true,
                "/ontologies": true,
                "/people": true,
                "/phenotypes-search": true,
                "/programs": true,
                "/samples": true,
                "/samples-search": true,
                "/scales": true,
                "/search/germplasm/{searchResultsDbId}": true,
                "/search/images/{searchResultsDbId}": true,
                "/search/markers/{searchResultsDbId}": true,
                "/search/observationtables/{searchResultsDbId}": true,
                "/search/observationunits/{searchResultsDbId}": true,
                "/search/programs/{searchResultsDbId}": true,
                "/search/samples/{searchResultsDbId}": true,
                "/search/studies/{searchResultsDbId}": true,
                "/search/variables/{searchResultsDbId}": true,
                "/seasons": true,
                "/studies": true,
                "/studies-search": true,
                "/studies/{studyDbId}/germplasm": true,
                "/studies/{studyDbId}/layout": true,
                "/studies/{studyDbId}/layouts": true,
                "/studies/{studyDbId}/observations": true,
                "/studies/{studyDbId}/observationunits": true,
                "/studies/{studyDbId}/observationvariables": true,
                "/studyTypes": true,
                "/studytypes": true,
                "/traits": true,
                "/trials": true,
                "/variables": true,
                "/variables/datatypes": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true,
                "germplasmSearchRequest": true,
                "markersSearchRequest": true,
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true,
                "phenotypesSearchRequest": true,
                "programsSearchRequest": true,
                "programsSearchRequest_Deprecated": true,
                "sampleSearchRequest": true,
                "sampleSearchRequest_Dep": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true,
                "metadata_pagination": true,
                "newObservationsTableRequest_metadata_pagination": true
            }
        },
        "sepPhased": {
            "type": "string",
            "description": "The string to use as a separator for phased allele calls.",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/markerprofiles/{markerProfileDbId}": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true
            }
        },
        "sepUnphased": {
            "type": "string",
            "description": "The string to use as a separator for unphased allele calls.",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/markerprofiles/{markerProfileDbId}": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true
            }
        },
        "unknownString": {
            "type": "string",
            "description": "The string to use as a representation for missing data.",
            "example": "",
            "calls": {
                "/allelematrices-search": true,
                "/allelematrix-search": true,
                "/markerprofiles/{markerProfileDbId}": true
            },
            "data_types": {
                "alleleMatrixSearchRequest": true
            }
        },
        "data": {
            "type": "array[]",
            "description": "Is an array of arrays; each inner array has three entries: ```markerDbId```, ```markerProfileDbId```, ```alleleCall```. Scores have to be represented as described further up. e.g. unknown data as \"N\", etc. Missing data can be skipped.",
            "example": "",
            "calls": [],
            "data_types": {
                "alleleMatrixValues": true,
                "dataTypesResponseResult": true,
                "markerProfile": true,
                "newListRequest": true,
                "observationUnitsTableResponse": true,
                "observationsTable": true,
                "newObservationsTableRequest_result": true,
                "commonCropNamesResponse_result": true,
                "cropsResponse_result": true,
                "observationLevelsResponse_result": true,
                "observationLevelsResponse_1_result": true
            }
        },
        "asynchStatus": {
            "type": "asynchStatusMetadata_asynchStatus",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "asynchStatusMetadata": true
            }
        },
        "abbreviation": {
            "type": "string",
            "description": "an abbreviation for the name of this breeding method",
            "example": "",
            "calls": {
                "/programs": true
            },
            "data_types": {
                "breedingMethod": true,
                "location": true,
                "program": true,
                "programsSearchRequest_Deprecated": true
            }
        },
        "breedingMethodDbId": {
            "type": "string",
            "description": "the unique identifier for this breeding method",
            "example": "",
            "calls": {
                "/breedingmethods/{breedingMethodDbId}": true
            },
            "data_types": {
                "breedingMethod": true,
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "breedingMethodName": {
            "type": "string",
            "description": "human readable name of the breeding method",
            "example": "",
            "calls": [],
            "data_types": {
                "breedingMethod": true
            }
        },
        "call": {
            "type": "string",
            "description": "The name of the available call as recorded in the documentation",
            "example": "",
            "calls": [],
            "data_types": {
                "call": true
            }
        },
        "dataTypes": {
            "type": "WSMIMEDataTypes[]",
            "description": "The possible data formats returned by the available call",
            "example": "",
            "calls": [],
            "data_types": {
                "call": true,
                "observationVariableSearchRequest": true
            }
        },
        "datatypes": {
            "type": "WSMIMEDataTypes[]",
            "description": "DEPRECATED in v1.3 - see \"dataTypes\" (camel case)",
            "example": "",
            "calls": [],
            "data_types": {
                "call": true,
                "observationVariableSearchRequest_Dep": true
            }
        },
        "methods": {
            "type": "string[]",
            "description": "The possible HTTP Methods to be used with the available call",
            "example": "",
            "calls": [],
            "data_types": {
                "call": true
            }
        },
        "versions": {
            "type": "string[]",
            "description": "The supported versions of a particular call",
            "example": "",
            "calls": [],
            "data_types": {
                "call": true
            }
        },
        "contactDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies this contact",
            "example": "",
            "calls": [],
            "data_types": {
                "contact": true
            }
        },
        "email": {
            "type": "string",
            "description": "The contacts email address ",
            "example": "",
            "calls": [],
            "data_types": {
                "contact": true
            }
        },
        "instituteName": {
            "type": "string",
            "description": "The name of the institution which this contact is part of",
            "example": "",
            "calls": [],
            "data_types": {
                "contact": true,
                "germplasm": true,
                "germplasmSummary": true,
                "location": true,
                "germplasmMCPD_breedingInstitutes": true,
                "germplasmMCPD_collectingInfo_collectingInstitutes": true,
                "germplasmMCPD_donorInfo_donorInstitute": true,
                "germplasmMCPD_safetyDuplicateInstitues": true
            }
        },
        "orcid": {
            "type": "string",
            "description": "The Open Researcher and Contributor ID for this contact person (orcid.org)",
            "example": "",
            "calls": [],
            "data_types": {
                "contact": true
            }
        },
        "type": {
            "type": "string",
            "description": "The type of person this contact represents (ex: Coordinator, Scientist, PI, etc.)",
            "example": "",
            "calls": {
                "/maps": true,
                "/markers": true,
                "/markers-search": true
            },
            "data_types": {
                "contact": true,
                "dataLink": true,
                "genomeMap": true,
                "geoJSON": true,
                "marker": true,
                "markersSearchRequest": true,
                "ontologyReference_documentationLinks": true
            }
        },
        "dataLinkName": {
            "type": "string",
            "description": "The name of the external data link",
            "example": "",
            "calls": [],
            "data_types": {
                "dataLink": true
            }
        },
        "url": {
            "type": "string",
            "description": "The URL which links to external data",
            "example": "",
            "calls": [],
            "data_types": {
                "dataLink": true
            }
        },
        "comments": {
            "type": "string",
            "description": "Additional comments",
            "example": "",
            "calls": [],
            "data_types": {
                "genomeMap": true,
                "vendorSample": true
            }
        },
        "commonCropName": {
            "type": "string",
            "description": "The common name of the crop, found from \"GET /commoncropnames\"",
            "example": "",
            "calls": {
                "/germplasm": true,
                "/germplasm-search": true,
                "/maps": true,
                "/programs": true,
                "/studies": true,
                "/trials": true
            },
            "data_types": {
                "genomeMap": true,
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true,
                "program": true,
                "study": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "linkageGroupCount": {
            "type": "integer",
            "description": "The number of linkage groups present in this genome map",
            "example": "",
            "calls": [],
            "data_types": {
                "genomeMap": true
            }
        },
        "mapDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies this genome map",
            "example": "",
            "calls": {
                "/maps/{mapDbId}": true,
                "/maps/{mapDbId}/positions": true,
                "/maps/{mapDbId}/positions/{linkageGroupName}": true
            },
            "data_types": {
                "genomeMap": true
            }
        },
        "mapName": {
            "type": "string",
            "description": "A human readable name for this genome map",
            "example": "",
            "calls": [],
            "data_types": {
                "genomeMap": true
            }
        },
        "markerCount": {
            "type": "integer",
            "description": "The number of markers present in this genome map",
            "example": "",
            "calls": [],
            "data_types": {
                "genomeMap": true,
                "linkageGroup": true
            }
        },
        "publishedDate": {
            "type": "string",
            "description": "The date this genome was published",
            "example": "",
            "calls": [],
            "data_types": {
                "genomeMap": true
            }
        },
        "scientificName": {
            "type": "string",
            "description": "Full scientific binomial format name. This includes Genus, Species, and Sub-species",
            "example": "",
            "calls": {
                "/maps": true
            },
            "data_types": {
                "genomeMap": true
            }
        },
        "species": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - See \"scientificName\"",
            "example": "",
            "calls": {
                "/maps": true
            },
            "data_types": {
                "genomeMap": true,
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true
            }
        },
        "unit": {
            "type": "string",
            "description": "The units used to describe the data in this map",
            "example": "",
            "calls": [],
            "data_types": {
                "genomeMap": true
            }
        },
        "geometry": {
            "type": "object",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "geoJSON": true
            }
        },
        "accessionNumber": {
            "type": "string",
            "description": "This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true
            }
        },
        "acquisitionDate": {
            "type": "string",
            "description": "The date this germplasm was aquired by the genebank (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true
            }
        },
        "biologicalStatusOfAccessionCode": {
            "type": "integer",
            "description": "The 3 digit code representing the biological status of the accession (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true
            }
        },
        "countryOfOriginCode": {
            "type": "string",
            "description": "3-letter ISO 3166-1 code of the country in which the sample was originally collected (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "defaultDisplayName": {
            "type": "string",
            "description": "Human readable name used for display purposes",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true,
                "marker": true,
                "pedigree": true,
                "progeny": true,
                "pedigree_siblings": true,
                "progeny_progeny": true
            }
        },
        "donors": {
            "type": "germplasm_donors[]",
            "description": "List of donor institutes (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "genus": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - see \"germplasmGenus\"",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true
            }
        },
        "germplasmDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a germplasm within the given database server",
            "example": "",
            "calls": {
                "/germplasm": true,
                "/germplasm-search": true,
                "/germplasm/{germplasmDbId}": true,
                "/germplasm/{germplasmDbId}/attributes": true,
                "/germplasm/{germplasmDbId}/markerprofiles": true,
                "/germplasm/{germplasmDbId}/mcpd": true,
                "/germplasm/{germplasmDbId}/pedigree": true,
                "/germplasm/{germplasmDbId}/progeny": true,
                "/markerprofiles": true,
                "/observationunits": true,
                "/phenotypes-search": true,
                "/samples": true,
                "/samples-search": true
            },
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmMarkerprofilesList": true,
                "germplasmSummary": true,
                "markerProfile": true,
                "markerProfileDescription": true,
                "newObservationUnitRequest": true,
                "observation": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "pedigree": true,
                "progeny": true,
                "sample": true,
                "sampleSearchRequest_Dep": true,
                "pedigree_siblings": true,
                "progeny_progeny": true
            }
        },
        "germplasmGenus": {
            "type": "string",
            "description": "Genus name for taxon. Initial uppercase letter required. (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSearchRequest": true
            }
        },
        "germplasmName": {
            "type": "string",
            "description": "Name of the germplasm. It can be the prefered name and does not have to be unique.",
            "example": "",
            "calls": {
                "/germplasm": true,
                "/germplasm-search": true
            },
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true,
                "observation": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true
            }
        },
        "germplasmPUI": {
            "type": "string",
            "description": "The Permanent Unique Identifier which represents a germplasm",
            "example": "",
            "calls": {
                "/germplasm": true,
                "/germplasm-search": true
            },
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true,
                "germplasm_donors": true
            }
        },
        "germplasmSpecies": {
            "type": "string",
            "description": "Specific epithet portion of the scientific name in lowercase letters. (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSearchRequest": true
            }
        },
        "instituteCode": {
            "type": "string",
            "description": "The code for the Institute that has bred the material. (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true,
                "germplasmMCPD_breedingInstitutes": true,
                "germplasmMCPD_collectingInfo_collectingInstitutes": true,
                "germplasmMCPD_donorInfo_donorInstitute": true,
                "germplasmMCPD_safetyDuplicateInstitues": true
            }
        },
        "pedigree": {
            "type": "string",
            "description": "The cross name and optional selection history.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true,
                "observationUnit": true,
                "pedigree": true
            }
        },
        "seedSource": {
            "type": "string",
            "description": "The source of the seed ",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "speciesAuthority": {
            "type": "string",
            "description": "The authority organization responsible for tracking and maintaining the species name (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmMCPD": true,
                "germplasmSummary": true
            }
        },
        "subtaxa": {
            "type": "string",
            "description": "Subtaxon can be used to store any additional taxonomic identifier. (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "subtaxaAuthority": {
            "type": "string",
            "description": " The authority organization responsible for tracking and maintaining the subtaxon information (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "taxonIds": {
            "type": "taxonID[]",
            "description": "The list of IDs for this SPECIES from different sources. If present, NCBI Taxon should be always listed as \"ncbiTaxon\" preferably with a purl. The rank of this ID should be species.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "typeOfGermplasmStorageCode": {
            "type": "string[]",
            "description": "The 2 digit code representing the type of storage this germplasm is kept in at a genebank. (MCPD)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm": true,
                "germplasmSummary": true
            }
        },
        "attributeCode": {
            "type": "string",
            "description": "Short abbreviation which represents this attribute",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmAttribute": true
            }
        },
        "attributeDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies this attribute within the given database server",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmAttribute": true
            }
        },
        "attributeName": {
            "type": "string",
            "description": "The human readable name of this attribute",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmAttribute": true
            }
        },
        "determinedDate": {
            "type": "string",
            "description": "The date the value of this attribute was determined for a given germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmAttribute": true
            }
        },
        "value": {
            "type": "string",
            "description": "The value of this attribute for a given germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmAttribute": true,
                "measurement": true,
                "observation": true,
                "observationSummary": true,
                "observationSummaryPhenotype": true,
                "phenotypesRequestObservation": true,
                "newObservationsRequest_observations": true
            }
        },
        "attributeCategoryDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies this attribute category within the given database server",
            "example": "",
            "calls": {
                "/attributes": true
            },
            "data_types": {
                "germplasmAttributeCategory": true
            }
        },
        "attributeCategoryName": {
            "type": "string",
            "description": "A human readable name for this attribute category. Very similar to Trait class. (examples: \"morphologic\", \"phenologic\", \"agronomic\", \"physiologic\", \"abiotic stress\", \"biotic stress\", \"biochemic\", \"quality traits\", \"fertility\", etc.)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmAttributeCategory": true
            }
        },
        "accessionNames": {
            "type": "string[]",
            "description": "MCPD (v2.1) (ACCENAME) 11. Either a registered or other designation given to the material received, other than the donors accession number (23) or collecting number (3). First letter uppercase. Multiple names are separated by a semicolon without space. Example: Accession name: Bogatyr;Symphony;Emma.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "acquisitionSourceCode": {
            "type": "string",
            "description": "MCPD (v2.1) (COLLSRC) 21. The coding scheme proposed can be used at 2 different levels of detail: either by using the general codes (in boldface) such as 10, 20, 30, 40, etc., or by using the more specific codes, such as 11, 12, etc. 10) Wild habitat 11) Forest or woodland 12) Shrubland 13) Grassland 14) Desert or tundra 15) Aquatic habitat 20) Farm or cultivated habitat 21) Field 22) Orchard 23) Backyard, kitchen or home garden (urban, peri-urban or rural) 24) Fallow land 25) Pasture 26) Farm store 27) Threshing floor 28) Park 30) Market or shop 40) Institute, Experimental station, Research organization, Genebank 50) Seed company 60) Weedy, disturbed or ruderal habitat 61) Roadside 62) Field margin 99) Other (Elaborate in REMARKS field) ",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "alternateIDs": {
            "type": "string[]",
            "description": "MCPD (v2.1) (OTHERNUMB) 24. Any other identifiers known to exist in other collections for this accession. Use the following format: INSTCODE:ACCENUMB;INSTCODE:identifier;INSTCODE and identifier are separated by a colon without space. Pairs of INSTCODE and identifier are separated by a semicolon without space. When the institute is not known, the identifier should be preceded by a colon. ",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "ancestralData": {
            "type": "string",
            "description": "MCPD (v2.1) (ANCEST) 20. Information about either pedigree or other description of ancestral information (e.g. parent variety in case of mutant or selection). For example a pedigree 'Hanna/7*Atlas//Turk/8*Atlas' or a description 'mutation found in Hanna', 'selection from Irene' or 'cross involving amongst others Hanna and Irene'.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "breedingInstitutes": {
            "type": "germplasmMCPD_breedingInstitutes[]",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "collectingInfo": {
            "type": "germplasmMCPD_collectingInfo",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "countryOfOrigin": {
            "type": "string",
            "description": "MCPD (v2.1) (ORIGCTY) 13. 3-letter ISO 3166-1 code of the country in which the sample was originally collected (e.g. landrace, crop wild relative, farmers\" variety), bred or selected (breeding lines, GMOs, segregating populations, hybrids, modern cultivars, etc.). Note: Descriptors 14 to 16 below should be completed accordingly only if it was \"collected\".",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "donorInfo": {
            "type": "germplasmMCPD_donorInfo",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "mlsStatus": {
            "type": "string",
            "description": "MCPD (v2.1) (MLSSTAT) 27. The status of an accession with regards to the Multilateral System (MLS) of the International Treaty on Plant Genetic Resources for Food and Agriculture. Leave the value empty if the status is not known 0 No (not included) 1 Yes (included) 99 Other (elaborate in REMARKS field, e.g. \"under development\")",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "remarks": {
            "type": "string",
            "description": "MCPD (v2.1) (REMARKS) 28. The remarks field is used to add notes or to elaborate on descriptors with value 99 or 999 (= Other). Prefix remarks with the field name they refer to and a colon (:) without space (e.g. COLLSRC:riverside). Distinct remarks referring to different fields are separated by semicolons without space.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "safetyDuplicateInstitues": {
            "type": "germplasmMCPD_safetyDuplicateInstitues[]",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "storageTypeCodes": {
            "type": "string[]",
            "description": "MCPD (v2.1) (STORAGE) 26. If germplasm is maintained under different types of storage, multiple choices are allowed, separated by a semicolon (e.g. 20;30). (Refer to FAO/IPGRI Genebank Standards 1994 for details on storage type.) 10) Seed collection 11) Short term 12) Medium term 13) Long term 20) Field collection 30) In vitro collection 40) Cryopreserved collection 50) DNA collection 99) Other (elaborate in REMARKS field)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "subtaxon": {
            "type": "string",
            "description": "MCPD (v2.1) (SUBTAXA) 8. Subtaxon can be used to store any additional taxonomic identifier. The following abbreviations are allowed: \"subsp.\" (for subspecies); \"convar.\" (for convariety); \"var.\" (for variety); \"f.\" (for form); \"Group\" (for \"cultivar group\").",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "subtaxonAuthority": {
            "type": "string",
            "description": "MCPD (v2.1) (SUBTAUTHOR) 9. Provide the subtaxon authority at the most detailed taxonomic level.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD": true
            }
        },
        "markerProfileDbIds": {
            "type": "string[]",
            "description": "The ID which uniquely identifies a marker profile within the given database server",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMarkerprofilesList": true
            }
        },
        "markerprofileDbIds": {
            "type": "string[]",
            "description": "DEPRECATED in v1.3 - see \"markerProfileDbIds\" (camel case)",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMarkerprofilesList": true
            }
        },
        "accessionNumbers": {
            "type": "string[]",
            "description": "List unique identifiers for accessions within a genebank",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmSearchRequest": true
            }
        },
        "commonCropNames": {
            "type": "string[]",
            "description": "List crops to search by",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmSearchRequest": true,
                "programsSearchRequest": true,
                "studySearchRequest": true
            }
        },
        "germplasmDbIds": {
            "type": "string[]",
            "description": "List of IDs which uniquely identify germplasm",
            "example": "",
            "calls": {
                "/studies": true,
                "/studies-search": true
            },
            "data_types": {
                "germplasmSearchRequest": true,
                "phenotypesSearchRequest": true,
                "sampleSearchRequest": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "germplasmNames": {
            "type": "string[]",
            "description": "List of human readable names to identify germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmSearchRequest": true
            }
        },
        "germplasmPUIs": {
            "type": "string[]",
            "description": "List of Permanent Unique Identifiers to identify germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmSearchRequest": true
            }
        },
        "entryNumber": {
            "type": "string",
            "description": "** Deprecated ** use /studies/{studyDbId/layout for positional germplasm relationships",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmSummary": true,
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "additionalInfo": {
            "type": "object",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "location": true,
                "newImageRequest": true,
                "observationUnitPosition": true,
                "study": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true,
                "vendorResultFile": true,
                "vendorSpecification": true
            }
        },
        "copyright": {
            "type": "string",
            "description": "The copyright information of this image. Example 'Copyright 2018 Bob Robertson'",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "newImageRequest": true,
                "ontology": true
            }
        },
        "descriptiveOntologyTerms": {
            "type": "string[]",
            "description": "A list of terms to formally describe the image. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL.",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "imagesSearchRequest": true,
                "newImageRequest": true
            }
        },
        "imageDbId": {
            "type": "string",
            "description": "The unique identifier of an image",
            "example": "",
            "calls": {
                "/images": true,
                "/images/{imageDbId}": true,
                "/images/{imageDbId}/imagecontent": true
            },
            "data_types": {
                "image": true
            }
        },
        "imageFileName": {
            "type": "string",
            "description": "The name of the image file. Might be the same as 'imageName', but could be different.",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "newImageRequest": true
            }
        },
        "imageFileSize": {
            "type": "integer",
            "description": "The size of the image in Bytes.",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "newImageRequest": true
            }
        },
        "imageHeight": {
            "type": "integer",
            "description": "The height of the image in Pixels.",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "newImageRequest": true
            }
        },
        "imageLocation": {
            "type": "geoJSON",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "imagesSearchRequest": true,
                "newImageRequest": true
            }
        },
        "imageName": {
            "type": "string",
            "description": "The human readable name of an image. Might be the same as 'imageFileName', but could be different.",
            "example": "",
            "calls": {
                "/images": true
            },
            "data_types": {
                "image": true,
                "newImageRequest": true
            }
        },
        "imageTimeStamp": {
            "type": "string",
            "description": "The date and time the image was taken",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "newImageRequest": true
            }
        },
        "imageURL": {
            "type": "string",
            "description": "The complete, absolute URI path to the image file. Images might be stored on a different host or path than the BrAPI web server.",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true
            }
        },
        "imageWidth": {
            "type": "integer",
            "description": "The width of the image in Pixels.",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "newImageRequest": true
            }
        },
        "mimeType": {
            "type": "string",
            "description": "The file type of the image. Examples 'image/jpeg', 'image/png', 'image/svg', etc",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "newImageRequest": true
            }
        },
        "observationDbIds": {
            "type": "string[]",
            "description": "A list of observation Ids this image is associated with, if applicable.",
            "example": "",
            "calls": [],
            "data_types": {
                "image": true,
                "imagesSearchRequest": true,
                "newImageRequest": true
            }
        },
        "observationUnitDbId": {
            "type": "string",
            "description": "The related observation unit identifier, if relevent.",
            "example": "",
            "calls": {
                "/images": true,
                "/samples": true,
                "/samples-search": true
            },
            "data_types": {
                "image": true,
                "newImageRequest": true,
                "newObservationUnitRequest": true,
                "observation": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "sample": true,
                "sampleSearchRequest_Dep": true,
                "newObservationDbIds_observations": true,
                "newObservationsRequest_observations": true,
                "studyLayoutRequest_layout": true
            }
        },
        "imageFileNames": {
            "type": "string[]",
            "description": "Image file names to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageFileSizeMax": {
            "type": "integer",
            "description": "A maximum image file size to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageFileSizeMin": {
            "type": "integer",
            "description": "A minimum image file size to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageHeightMax": {
            "type": "integer",
            "description": "A maximum image height to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageHeightMin": {
            "type": "integer",
            "description": "A minimum image height to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageNames": {
            "type": "string[]",
            "description": "Human readable names to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageTimeStampRangeEnd": {
            "type": "string",
            "description": "The latest timestamp to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageTimeStampRangeStart": {
            "type": "string",
            "description": "The earliest timestamp to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageWidthMax": {
            "type": "integer",
            "description": "A maximum image width to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "imageWidthMin": {
            "type": "integer",
            "description": "A minimum image width to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "mimeTypes": {
            "type": "string[]",
            "description": "A set of image file types to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true
            }
        },
        "observationUnitDbIds": {
            "type": "string[]",
            "description": "A set of observation unit identifiers to search for.",
            "example": "",
            "calls": [],
            "data_types": {
                "imagesSearchRequest": true,
                "newObservationUnitDbIds": true,
                "sampleSearchRequest": true
            }
        },
        "linkageGroupName": {
            "type": "string",
            "description": "The Uniquely Identifiable name of this linkage group",
            "example": "",
            "calls": {
                "/maps/{mapDbId}/positions": true,
                "/maps/{mapDbId}/positions/{linkageGroupName}": true
            },
            "data_types": {
                "linkageGroup": true,
                "markerSummaryMap": true
            }
        },
        "maxPosition": {
            "type": "integer",
            "description": "The maximum position of a marker within this linkage group",
            "example": "",
            "calls": [],
            "data_types": {
                "linkageGroup": true
            }
        },
        "dateCreated": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "listSummary": true
            }
        },
        "dateModified": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "listSummary": true
            }
        },
        "listDbId": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": {
                "/lists": true,
                "/lists/{listDbId}": true,
                "/lists/{listDbId}/items": true
            },
            "data_types": {
                "listSummary": true
            }
        },
        "listName": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": {
                "/lists": true
            },
            "data_types": {
                "listSummary": true,
                "newListRequest": true
            }
        },
        "listOwnerName": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "listSummary": true,
                "newListRequest": true
            }
        },
        "listOwnerPersonDbId": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "listSummary": true,
                "newListRequest": true
            }
        },
        "listSize": {
            "type": "integer",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "listSummary": true,
                "newListRequest": true
            }
        },
        "listSource": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": {
                "/lists": true
            },
            "data_types": {
                "listSummary": true,
                "newListRequest": true
            }
        },
        "listType": {
            "type": "listTypes",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "listSummary": true,
                "newListRequest": true
            }
        },
        "abreviation": {
            "type": "string",
            "description": "Deprecated  Use abbreviation ",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true
            }
        },
        "altitude": {
            "type": "number",
            "description": "The altitude of this location",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true
            }
        },
        "countryCode": {
            "type": "string",
            "description": "[ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true
            }
        },
        "countryName": {
            "type": "string",
            "description": "The full name of the country where this location is",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true
            }
        },
        "instituteAddress": {
            "type": "string",
            "description": "The street address of the institute representing this location",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true,
                "germplasmMCPD_collectingInfo_collectingInstitutes": true
            }
        },
        "instituteAdress": {
            "type": "string",
            "description": "Deprecated  Use instituteAddress ",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true
            }
        },
        "latitude": {
            "type": "number",
            "description": "The latitude of this location",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true
            }
        },
        "locationDbId": {
            "type": "string",
            "description": "string identifier",
            "example": "",
            "calls": {
                "/locations/{locationDbId}": true,
                "/observationunits": true,
                "/phenotypes-search": true,
                "/studies": true,
                "/studies-search": true,
                "/trials": true
            },
            "data_types": {
                "location": true,
                "observationUnit": true,
                "studySummary": true,
                "trial_studies": true
            }
        },
        "locationName": {
            "type": "string",
            "description": "A human readable name for this location",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true,
                "observationUnit": true,
                "studySummary": true,
                "trial_studies": true
            }
        },
        "locationType": {
            "type": "string",
            "description": "The type of location this represents (ex. Breeding Location, Storage Location, etc)",
            "example": "",
            "calls": {
                "/locations": true
            },
            "data_types": {
                "location": true
            }
        },
        "longitude": {
            "type": "number",
            "description": "the longitude of this location",
            "example": "",
            "calls": [],
            "data_types": {
                "location": true
            }
        },
        "analysisMethods": {
            "type": "string[]",
            "description": "List of the genotyping platforms used to interrogate the marker",
            "example": "",
            "calls": [],
            "data_types": {
                "marker": true
            }
        },
        "markerName": {
            "type": "string",
            "description": "A string representing the marker that will be meaningful to the user",
            "example": "",
            "calls": {
                "/markers": true
            },
            "data_types": {
                "marker": true,
                "markerSummaryLinkageGroup": true,
                "markerSummaryMap": true
            }
        },
        "refAlt": {
            "type": "string[]",
            "description": "List of the reference (as the first item) and alternatives (the remaining items)",
            "example": "",
            "calls": [],
            "data_types": {
                "marker": true
            }
        },
        "analysisMethod": {
            "type": "string",
            "description": "The type of analysis performed to determine a set of marker data",
            "example": "",
            "calls": [],
            "data_types": {
                "markerProfile": true,
                "markerProfileDescription": true
            }
        },
        "extractDbId": {
            "type": "string",
            "description": "Required",
            "example": "",
            "calls": {
                "/markerprofiles": true
            },
            "data_types": {
                "markerProfile": true,
                "markerProfileDescription": true
            }
        },
        "uniqueDisplayName": {
            "type": "string",
            "description": "Human readable display name for this marker profile",
            "example": "",
            "calls": [],
            "data_types": {
                "markerProfile": true,
                "markerProfileDescription": true
            }
        },
        "resultCount": {
            "type": "integer",
            "description": "Number of markers present in the marker profile",
            "example": "",
            "calls": [],
            "data_types": {
                "markerProfileDescription": true
            }
        },
        "sampleDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a sample",
            "example": "",
            "calls": {
                "/markerprofiles": true,
                "/samples": true,
                "/samples-search": true,
                "/samples/{sampleDbId}": true
            },
            "data_types": {
                "markerProfileDescription": true,
                "sample": true,
                "sampleSearchRequest_Dep": true,
                "newSampleDbId_result": true
            }
        },
        "location": {
            "type": "string",
            "description": "The position of a marker within a linkage group",
            "example": "",
            "calls": [],
            "data_types": {
                "markerSummaryLinkageGroup": true,
                "markerSummaryMap": true,
                "study": true
            }
        },
        "includeSynonyms": {
            "type": "boolean",
            "description": "Should an array of synonyms be included in the response",
            "example": "",
            "calls": {
                "/markers": true,
                "/markers-search": true
            },
            "data_types": {
                "markersSearchRequest": true
            }
        },
        "markerDbIds": {
            "type": "string[]",
            "description": "List of IDs which uniquely identify markers ",
            "example": "",
            "calls": {
                "/markers-search": true
            },
            "data_types": {
                "markersSearchRequest": true
            }
        },
        "markerNames": {
            "type": "string[]",
            "description": "The search pattern for the marker name or synonym.",
            "example": "",
            "calls": [],
            "data_types": {
                "markersSearchRequest": true
            }
        },
        "matchMethod": {
            "type": "string",
            "description": "How to perform string matching during search. 'exact' will search for exact, case sensitive matches only. 'case_insensitive' will search for exact matches, but case insensitive. 'wildcard' will allow the special characters '*' (star) and '%' (percent) to represent variable length arbitrary strings, and the special character '?' (question) to represent one arbitrary character.",
            "example": "",
            "calls": {
                "/markers": true,
                "/markers-search": true
            },
            "data_types": {
                "markersSearchRequest": true
            }
        },
        "types": {
            "type": "string[]",
            "description": "The type of marker, e.g. SNP",
            "example": "",
            "calls": [],
            "data_types": {
                "markersSearchRequest": true
            }
        },
        "units": {
            "type": "string",
            "description": "Units (example: \"ng/ul\")",
            "example": "",
            "calls": [],
            "data_types": {
                "measurement": true
            }
        },
        "datafiles": {
            "type": "string[]",
            "description": "The datafiles key contains a list of file paths, which can be relative or complete URLs. These files contain additional information related to the returned object and can be retrieved by a subsequent call. The empty list should be returned if no additional data files are present.",
            "example": "",
            "calls": [],
            "data_types": {
                "metadata": true,
                "newObservationsTableRequest_metadata": true
            }
        },
        "pagination": {
            "type": "metadata_pagination",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "metadata": true,
                "newObservationsTableRequest_metadata": true
            }
        },
        "class": {
            "type": "string",
            "description": "Method class (examples: \"Measurement\", \"Counting\", \"Estimation\", \"Computation\", etc.",
            "example": "",
            "calls": [],
            "data_types": {
                "method": true,
                "newMethodRequest": true,
                "newTraitRequest": true,
                "trait": true
            }
        },
        "formula": {
            "type": "string",
            "description": "For computational methods i.e., when the method consists in assessing the trait by computing measurements, write the generic formula used for the calculation",
            "example": "",
            "calls": [],
            "data_types": {
                "method": true,
                "newMethodRequest": true
            }
        },
        "methodDbId": {
            "type": "string",
            "description": "Method unique identifier",
            "example": "",
            "calls": {
                "/methods/{methodDbId}": true
            },
            "data_types": {
                "method": true
            }
        },
        "methodName": {
            "type": "string",
            "description": "Human readable name for the method",
            "example": "",
            "calls": [],
            "data_types": {
                "method": true,
                "newMethodRequest": true
            }
        },
        "reference": {
            "type": "string",
            "description": "Bibliographical reference describing the method.",
            "example": "",
            "calls": [],
            "data_types": {
                "method": true,
                "newMethodRequest": true
            }
        },
        "observations": {
            "type": "newObservationDbIds_observations[]",
            "description": "List of observation references which have been created or updated",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationDbIds": true,
                "newObservationUnitRequest": true,
                "newObservationsRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "newObservationsRequestDeprecated_data": true,
                "phenotypesRequest_data": true
            }
        },
        "X": {
            "type": "string",
            "description": "DEPRECATED - use \"positionCoordinateX\"",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "Y": {
            "type": "string",
            "description": "DEPRECATED - use \"positionCoordinateY\"",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "blockNumber": {
            "type": "string",
            "description": "The block number for an observation unit. Different systems may use different block designs.",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "entryType": {
            "type": "string",
            "description": "The type of entry for this observation unit. ex. \"check\", \"test\", \"filler\"",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "observationLevel": {
            "type": "string",
            "description": "The level of an observation unit. ex. \"plot\", \"plant\"",
            "example": "",
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true,
                "/studies/{studyDbId}/observationunits": true
            },
            "data_types": {
                "newObservationUnitRequest": true,
                "observation": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "phenotypesSearchRequest": true
            }
        },
        "observationUnitName": {
            "type": "string",
            "description": "A human readable name for an observation unit",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observation": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true
            }
        },
        "observationUnitXref": {
            "type": "observationUnitXref[]",
            "description": "A list of external references to this observation unit",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "plantNumber": {
            "type": "string",
            "description": "The plant number in a field. Applicable for observationLevel: \"plant\"",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "plotNumber": {
            "type": "string",
            "description": "The plot number in a field. Applicable for observationLevel: \"plot\"",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "positionCoordinateX": {
            "type": "string",
            "description": "The X position coordinate for an observation unit. Different systems may use different coordinate systems.",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "positionCoordinateXType": {
            "type": "string",
            "description": "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column ",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "positionCoordinateY": {
            "type": "string",
            "description": "The Y position coordinate for an observation unit. Different systems may use different coordinate systems.",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "positionCoordinateYType": {
            "type": "string",
            "description": "The type of positional coordinate used. Must be one of the following values\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See \"Location Coordinate Encoding\" for details\nPLANTED_ROW - The physical planted row number \nPLANTED_INDIVIDUAl - The physical counted number, could be independant or within a planted row\nGRID_ROW - The row index number of a square grid overlay\nGRID_COL - The column index number of a square grid overlay\nMEASURED_ROW - The distance in meters from a defined 0th row\nMEASURED_COL - The distance in meters from a defined 0th column ",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "replicate": {
            "type": "string",
            "description": "The replicate number of an observation unit. May be the same as blockNumber.",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "observationUnitPosition": true,
                "studyLayoutRequest_layout": true
            }
        },
        "treatments": {
            "type": "observationTreatment[]",
            "description": "List of treatments applied to an observation unit.",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationUnitRequest": true,
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "emailAddress": {
            "type": "string",
            "description": "email address for this person",
            "example": "",
            "calls": [],
            "data_types": {
                "newPersonRequest": true,
                "person": true
            }
        },
        "firstName": {
            "type": "string",
            "description": "Persons first name",
            "example": "",
            "calls": {
                "/people": true
            },
            "data_types": {
                "newPersonRequest": true,
                "person": true
            }
        },
        "lastName": {
            "type": "string",
            "description": "Persons last name",
            "example": "",
            "calls": {
                "/people": true
            },
            "data_types": {
                "newPersonRequest": true,
                "person": true
            }
        },
        "mailingAddress": {
            "type": "string",
            "description": "physical address of this person",
            "example": "",
            "calls": [],
            "data_types": {
                "newPersonRequest": true,
                "person": true
            }
        },
        "middleName": {
            "type": "string",
            "description": "Persons middle name",
            "example": "",
            "calls": [],
            "data_types": {
                "newPersonRequest": true,
                "person": true
            }
        },
        "phoneNumber": {
            "type": "string",
            "description": "phone number of this person",
            "example": "",
            "calls": [],
            "data_types": {
                "newPersonRequest": true,
                "person": true
            }
        },
        "userID": {
            "type": "string",
            "description": "A systems user ID ascociated with this person. Different from personDbId because you could have a person who is not a user of the system.",
            "example": "",
            "calls": {
                "/people": true
            },
            "data_types": {
                "newPersonRequest": true,
                "person": true
            }
        },
        "dataType": {
            "type": "traitDataType",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "newScaleRequest": true,
                "scale": true
            }
        },
        "decimalPlaces": {
            "type": "integer",
            "description": "For numerical, number of decimal places to be reported",
            "example": "",
            "calls": [],
            "data_types": {
                "newScaleRequest": true,
                "scale": true
            }
        },
        "scaleName": {
            "type": "string",
            "description": "Name of the scale",
            "example": "",
            "calls": [],
            "data_types": {
                "newScaleRequest": true,
                "scale": true
            }
        },
        "validValues": {
            "type": "validValues",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "newScaleRequest": true,
                "scale": true
            }
        },
        "alternativeAbbreviations": {
            "type": "string[]",
            "description": "Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention",
            "example": "",
            "calls": [],
            "data_types": {
                "newTraitRequest": true,
                "trait": true
            }
        },
        "attribute": {
            "type": "string",
            "description": "A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\"",
            "example": "",
            "calls": [],
            "data_types": {
                "newTraitRequest": true,
                "trait": true
            }
        },
        "entity": {
            "type": "string",
            "description": "A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\"",
            "example": "",
            "calls": [],
            "data_types": {
                "newTraitRequest": true,
                "trait": true
            }
        },
        "mainAbbreviation": {
            "type": "string",
            "description": "Main abbreviation for trait name. (examples: \"Carotenoid content\" => \"CC\")",
            "example": "",
            "calls": [],
            "data_types": {
                "newTraitRequest": true,
                "trait": true
            }
        },
        "traitName": {
            "type": "string",
            "description": "The human readable name of a trait",
            "example": "",
            "calls": [],
            "data_types": {
                "newTraitRequest": true,
                "trait": true,
                "traitSummary": true
            }
        },
        "observationDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies an observation",
            "example": "",
            "calls": {
                "/images": true
            },
            "data_types": {
                "observation": true,
                "observationSummary": true,
                "observationSummaryPhenotype": true,
                "phenotypesRequestObservation": true,
                "newObservationDbIds_observations": true,
                "newObservationsRequest_observations": true
            }
        },
        "observationTimeStamp": {
            "type": "string",
            "description": "The date and time  when this observation was made ",
            "example": "",
            "calls": [],
            "data_types": {
                "observation": true,
                "observationSummary": true,
                "observationSummaryPhenotype": true,
                "phenotypesRequestObservation": true,
                "newObservationsRequest_observations": true
            }
        },
        "observationVariableDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies an observation variable",
            "example": "",
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true,
                "/variables": true,
                "/variables/{observationVariableDbId}": true
            },
            "data_types": {
                "observation": true,
                "observationSummary": true,
                "observationSummaryPhenotype": true,
                "phenotypesRequestObservation": true,
                "newObservationDbIds_observations": true,
                "newObservationsRequest_observations": true
            }
        },
        "observationVariableName": {
            "type": "string",
            "description": "A human readable name for an observation variable",
            "example": "",
            "calls": [],
            "data_types": {
                "observation": true,
                "observationSummary": true,
                "observationSummaryPhenotype": true,
                "phenotypesRequestObservation": true
            }
        },
        "operator": {
            "type": "string",
            "description": "The name or identifier of the entity which collected the observation",
            "example": "",
            "calls": [],
            "data_types": {
                "observation": true
            }
        },
        "season": {
            "type": "season",
            "description": "",
            "example": "",
            "calls": {
                "/seasons": true
            },
            "data_types": {
                "observation": true,
                "observationSummary": true,
                "observationSummaryPhenotype": true,
                "phenotypesRequestObservation": true,
                "season": true
            }
        },
        "uploadedBy": {
            "type": "string",
            "description": "The name or id of the user who uploaded the observation to the database system",
            "example": "",
            "calls": [],
            "data_types": {
                "observation": true
            }
        },
        "collector": {
            "type": "string",
            "description": "The name or identifier of the entity which collected the observation",
            "example": "",
            "calls": [],
            "data_types": {
                "observationSummary": true,
                "observationSummaryPhenotype": true,
                "phenotypesRequestObservation": true,
                "newObservationsRequest_observations": true
            }
        },
        "factor": {
            "type": "string",
            "description": "The type of treatment/factor. ex. 'fertilizer', 'inoculation', 'irrigation', etc",
            "example": "",
            "calls": [],
            "data_types": {
                "observationTreatment": true
            }
        },
        "modality": {
            "type": "string",
            "description": "The treatment/factor descritpion. ex. 'low fertilizer', 'yellow rust inoculation', 'high water', etc",
            "example": "",
            "calls": [],
            "data_types": {
                "observationTreatment": true
            }
        },
        "observationLevels": {
            "type": "string",
            "description": "Concatenation of the levels of this observationUnit. Used to handle non canonical level structures. Format levelType:levelID,levelType:levelID",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "programDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a program",
            "example": "",
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true,
                "/studies": true,
                "/studies-search": true,
                "/trials": true
            },
            "data_types": {
                "observationUnit": true,
                "program": true,
                "programsSearchRequest_Deprecated": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "programName": {
            "type": "string",
            "description": "The human readable name of a program",
            "example": "",
            "calls": {
                "/programs": true
            },
            "data_types": {
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "program": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "studyLocation": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - see \"locationName\"",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "studyLocationDbId": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - see \"locationDbId\"",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnit": true,
                "observationUnitPhenotype": true
            }
        },
        "studyName": {
            "type": "string",
            "description": "The human readable name for a study",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnit": true,
                "observationUnitPhenotype": true,
                "study": true,
                "studySummary": true,
                "trial_studies": true
            }
        },
        "trialDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a trial",
            "example": "",
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true,
                "/studies": true,
                "/studies-search": true,
                "/trials/{trialDbId}": true
            },
            "data_types": {
                "observationUnit": true,
                "study": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "trialName": {
            "type": "string",
            "description": "The human readable name of a trial",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnit": true,
                "study": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "id": {
            "type": "string",
            "description": "The unique ID in the external reference 'source' system",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnitXref": true
            }
        },
        "source": {
            "type": "string",
            "description": "The system identifier (name, URL, etc) which has an external reference to the observation unit",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnitXref": true
            }
        },
        "headerRow": {
            "type": "string[]",
            "description": "Names of the columns included in the data matrix. Any or All of [ \"year\",\"studyDbId\",\"studyName\",\"locationDbId\",\"locationName\",\"germplasmDbId\",\"germplasmName\",\"observationUnitDbId\",\"plotNumber\",\"replicate\",\"blockNumber\", \"entryType\", \"X\", \"Y\"]",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnitsTableResponse": true,
                "observationsTable": true
            }
        },
        "observationVariableDbIds": {
            "type": "string[]",
            "description": "Array of observation variable DbIds for the collected data. This array is appended to the \"headerRow\" to get the complete header of the data matrix",
            "example": "",
            "calls": {
                "/studies": true,
                "/studies-search": true,
                "/studies/{studyDbId}/observations": true
            },
            "data_types": {
                "observationUnitsTableResponse": true,
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true,
                "observationsTable": true,
                "phenotypesSearchRequest": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "observationVariableNames": {
            "type": "string[]",
            "description": "Human readable names of the observation variables for the collected data. This array should match 1 to 1 with the \"observationVariableDbIds\" array.",
            "example": "",
            "calls": [],
            "data_types": {
                "observationUnitsTableResponse": true,
                "observationVariableSearchRequest": true,
                "observationsTable": true
            }
        },
        "methodDbIds": {
            "type": "string[]",
            "description": "List of methods to filter search results",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true
            }
        },
        "observationVariableXrefs": {
            "type": "string[]",
            "description": "List of cross references for the observation variable to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true
            }
        },
        "ontologyDbIds": {
            "type": "string[]",
            "description": "List of ontology IDs to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true
            }
        },
        "scaleDbIds": {
            "type": "string[]",
            "description": "List of scales to filter search results",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true
            }
        },
        "scaleXrefs": {
            "type": "string[]",
            "description": "List of cross references for the scale to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true
            }
        },
        "traitClasses": {
            "type": "string[]",
            "description": "List of trait classes to filter search results",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true,
                "observationVariableSearchRequest_Dep": true
            }
        },
        "traitDbIds": {
            "type": "string[]",
            "description": "List of trait unique ID to filter search results",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true
            }
        },
        "traitXrefs": {
            "type": "string[]",
            "description": "List of cross references for the trait to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest": true
            }
        },
        "names": {
            "type": "string[]",
            "description": "List of human readable observation variable names to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest_Dep": true
            }
        },
        "ontologyXrefs": {
            "type": "string[]",
            "description": "List of cross reference values to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "observationVariableSearchRequest_Dep": true
            }
        },
        "authors": {
            "type": "string",
            "description": "Ontology's list of authors (no specific format)",
            "example": "",
            "calls": [],
            "data_types": {
                "ontology": true
            }
        },
        "licence": {
            "type": "string",
            "description": "Ontology licence",
            "example": "",
            "calls": [],
            "data_types": {
                "ontology": true
            }
        },
        "version": {
            "type": "string",
            "description": "Ontology version (no specific format)",
            "example": "",
            "calls": [],
            "data_types": {
                "ontology": true,
                "ontologyReference": true,
                "study_lastUpdate": true
            }
        },
        "documentationLinks": {
            "type": "ontologyReference_documentationLinks[]",
            "description": "links to various ontology documentation",
            "example": "",
            "calls": [],
            "data_types": {
                "ontologyReference": true
            }
        },
        "crossingPlan": {
            "type": "string",
            "description": "The crossing strategy used to generate this germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "crossingYear": {
            "type": "string",
            "description": "The year the parents were originally crossed",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "familyCode": {
            "type": "string",
            "description": "The code representing the family",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent1DbId": {
            "type": "string",
            "description": "The germplasm DbId of the first parent of this germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent1Id": {
            "type": "string",
            "description": "**Deprecated** use parent1DbId",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent1Name": {
            "type": "string",
            "description": "the human readable name of the first parent of this germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent1Type": {
            "type": "string",
            "description": "The type of parent the first parent is. ex. 'MALE', 'FEMALE', 'SELF', 'POPULATION', etc.",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent2DbId": {
            "type": "string",
            "description": "The germplasm DbId of the second parent of this germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent2Id": {
            "type": "string",
            "description": "**Deprecated** use parent2DbId",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent2Name": {
            "type": "string",
            "description": "The human readable name of the second parent of this germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "parent2Type": {
            "type": "string",
            "description": "The type of parent the second parent is. ex. 'MALE', 'FEMALE', 'SELF', 'POPULATION', etc.",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "siblings": {
            "type": "pedigree_siblings[]",
            "description": "List of sibling germplasm ",
            "example": "",
            "calls": [],
            "data_types": {
                "pedigree": true
            }
        },
        "personDbId": {
            "type": "string",
            "description": "Unique ID for this person",
            "example": "",
            "calls": {
                "/people": true,
                "/people/{personDbId}": true
            },
            "data_types": {
                "person": true
            }
        },
        "locationDbIds": {
            "type": "string[]",
            "description": "locations these traits were collected",
            "example": "",
            "calls": [],
            "data_types": {
                "phenotypesSearchRequest": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "observationTimeStampRangeEnd": {
            "type": "string",
            "description": "Timestamp range end",
            "example": "",
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true
            },
            "data_types": {
                "phenotypesSearchRequest": true
            }
        },
        "observationTimeStampRangeStart": {
            "type": "string",
            "description": "Timestamp range start",
            "example": "",
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true
            },
            "data_types": {
                "phenotypesSearchRequest": true
            }
        },
        "programDbIds": {
            "type": "string[]",
            "description": "list of programs to search across",
            "example": "",
            "calls": [],
            "data_types": {
                "phenotypesSearchRequest": true,
                "programsSearchRequest": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "seasonDbIds": {
            "type": "string[]",
            "description": "The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)",
            "example": "",
            "calls": [],
            "data_types": {
                "phenotypesSearchRequest": true,
                "studySearchRequest": true
            }
        },
        "studyDbIds": {
            "type": "string[]",
            "description": "The database ID / PK of the studies search parameter",
            "example": "",
            "calls": [],
            "data_types": {
                "phenotypesSearchRequest": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "trialDbIds": {
            "type": "string[]",
            "description": "list of trials to search across",
            "example": "",
            "calls": [],
            "data_types": {
                "phenotypesSearchRequest": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "progeny": {
            "type": "progeny_progeny[]",
            "description": "List of germplasm entities which are direct children of this germplasm",
            "example": "",
            "calls": [],
            "data_types": {
                "progeny": true
            }
        },
        "leadPerson": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - see \"leadPersonName\" or \"leadPersonDbId\"",
            "example": "",
            "calls": [],
            "data_types": {
                "program": true,
                "programsSearchRequest_Deprecated": true
            }
        },
        "leadPersonDbId": {
            "type": "string",
            "description": "The unique identifier of the program leader",
            "example": "",
            "calls": [],
            "data_types": {
                "program": true
            }
        },
        "leadPersonName": {
            "type": "string",
            "description": "The name of the program leader",
            "example": "",
            "calls": [],
            "data_types": {
                "program": true
            }
        },
        "objective": {
            "type": "string",
            "description": "The primary objective of the program",
            "example": "",
            "calls": [],
            "data_types": {
                "program": true,
                "programsSearchRequest_Deprecated": true
            }
        },
        "abbreviations": {
            "type": "string[]",
            "description": "An abbreviation of a program to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "programsSearchRequest": true
            }
        },
        "leadPersonDbIds": {
            "type": "string[]",
            "description": "The person DbIds of the program leader to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "programsSearchRequest": true
            }
        },
        "leadPersonNames": {
            "type": "string[]",
            "description": "The names of the program leader to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "programsSearchRequest": true
            }
        },
        "objectives": {
            "type": "string[]",
            "description": "A program objective to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "programsSearchRequest": true
            }
        },
        "programNames": {
            "type": "string[]",
            "description": "A name of a program to search for",
            "example": "",
            "calls": [],
            "data_types": {
                "programsSearchRequest": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "notes": {
            "type": "string",
            "description": "Additional notes about a samle",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true
            }
        },
        "plantDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a plant. Usually 'plantNumber'",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true
            }
        },
        "plateDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a plate of samples",
            "example": "",
            "calls": {
                "/samples": true,
                "/samples-search": true
            },
            "data_types": {
                "sample": true,
                "sampleSearchRequest_Dep": true
            }
        },
        "plateIndex": {
            "type": "integer",
            "description": "The index number of this sample on a plate",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true
            }
        },
        "plotDbId": {
            "type": "string",
            "description": " The ID which uniquely identifies a plot. Usually 'plotNumber'",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true
            }
        },
        "sampleTimestamp": {
            "type": "string",
            "description": "The date and time a sample was collected from the field",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true
            }
        },
        "sampleType": {
            "type": "string",
            "description": "The type of sample taken. ex. 'DNA', 'RNA', 'Tissue', etc ",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true,
                "vendorOrderRequest": true,
                "vendorPlatesSubmissionRequest": true
            }
        },
        "takenBy": {
            "type": "string",
            "description": "The name or identifier of the entity which took the sample from the field",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true
            }
        },
        "tissueType": {
            "type": "string",
            "description": "The type of tissue sampled. ex. 'Leaf', 'Root', etc.",
            "example": "",
            "calls": [],
            "data_types": {
                "sample": true,
                "vendorSample": true
            }
        },
        "plateDbIds": {
            "type": "string[]",
            "description": "The ID which uniquely identifies a plate of samples",
            "example": "",
            "calls": [],
            "data_types": {
                "sampleSearchRequest": true
            }
        },
        "sampleDbIds": {
            "type": "string[]",
            "description": "The ID which uniquely identifies a sample",
            "example": "",
            "calls": [],
            "data_types": {
                "sampleSearchRequest": true
            }
        },
        "scaleDbId": {
            "type": "string",
            "description": "Unique identifier of the scale. If left blank, the upload system will automatically generate a scale ID.",
            "example": "",
            "calls": {
                "/scales/{scaleDbId}": true
            },
            "data_types": {
                "scale": true
            }
        },
        "seasonDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a season",
            "example": "",
            "calls": {
                "/observationunits": true,
                "/phenotypes-search": true,
                "/seasons": true,
                "/studies": true,
                "/studies-search": true
            },
            "data_types": {
                "season": true,
                "studySearchRequest_Dep": true
            }
        },
        "year": {
            "type": "string",
            "description": "The 4 digit year of the season.",
            "example": "",
            "calls": {
                "/seasons": true
            },
            "data_types": {
                "season": true
            }
        },
        "code": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - see Error Handling best practice documentation",
            "example": "",
            "calls": [],
            "data_types": {
                "status": true
            }
        },
        "message": {
            "type": "string",
            "description": "A short message concerning the status of this request/response",
            "example": "",
            "calls": [],
            "data_types": {
                "status": true
            }
        },
        "messageType": {
            "type": "string",
            "description": "The logging level for the attached message",
            "example": "",
            "calls": [],
            "data_types": {
                "status": true
            }
        },
        "active": {
            "type": "string",
            "description": "Is this study currently active",
            "example": "",
            "calls": {
                "/studies": true,
                "/studies-search": true,
                "/trials": true
            },
            "data_types": {
                "study": true,
                "studySearchRequest": true,
                "studySearchRequest_Dep": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "contacts": {
            "type": "contact[]",
            "description": "List of contact entities associated with this study",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true,
                "trial": true
            }
        },
        "dataLinks": {
            "type": "dataLink[]",
            "description": "List of links to extra data files associated with this study. Extra data could include notes, images, and reference data.",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true
            }
        },
        "endDate": {
            "type": "string",
            "description": "The date the study ends",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "lastUpdate": {
            "type": "study_lastUpdate",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true
            }
        },
        "license": {
            "type": "string",
            "description": "The usage license associated with the study data",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true,
                "trial_datasetAuthorship": true,
                "trial_datasetAuthorships": true
            }
        },
        "seasons": {
            "type": "string[]",
            "description": "List of seasons over which this study was performed.",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true,
                "studySummary": true
            }
        },
        "startDate": {
            "type": "string",
            "description": "The date this study started",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true,
                "studySummary": true,
                "trial": true,
                "trialSummary": true
            }
        },
        "studyDescription": {
            "type": "string",
            "description": "The description of this study",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true
            }
        },
        "studyType": {
            "type": "string",
            "description": "DEPRECATED in v1.3 - See \"studyTypeName\"",
            "example": "",
            "calls": {
                "/studies": true,
                "/studies-search": true
            },
            "data_types": {
                "study": true,
                "studySearchRequest_Dep": true,
                "studySummary": true
            }
        },
        "studyTypeDbId": {
            "type": "string",
            "description": "The unique identifier of the type of study being performed.",
            "example": "",
            "calls": {
                "/studies": true,
                "/studytypes": true
            },
            "data_types": {
                "study": true,
                "studySummary": true,
                "studyType": true
            }
        },
        "studyTypeName": {
            "type": "string",
            "description": "The name of the type of study being performed. ex. \"Yield Trial\", etc",
            "example": "",
            "calls": [],
            "data_types": {
                "study": true,
                "studySummary": true,
                "studyType": true
            }
        },
        "layout": {
            "type": "studyLayoutRequest_layout[]",
            "description": "List of observation unit position data entities which need to be updated",
            "example": "",
            "calls": [],
            "data_types": {
                "studyLayoutRequest": true
            }
        },
        "sortBy": {
            "type": "string",
            "description": "Name of one of the fields within the study object on which results can be sorted",
            "example": "",
            "calls": {
                "/studies": true,
                "/studies-search": true,
                "/trials": true
            },
            "data_types": {
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "sortOrder": {
            "type": "string",
            "description": "Order results should be sorted. ex. \"ASC\" or \"DESC\"",
            "example": "",
            "calls": {
                "/studies": true,
                "/studies-search": true,
                "/trials": true
            },
            "data_types": {
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "studyNames": {
            "type": "string[]",
            "description": "List of study names to filter search results",
            "example": "",
            "calls": [],
            "data_types": {
                "studySearchRequest": true,
                "studySearchRequest_Dep": true
            }
        },
        "studyTypeDbIds": {
            "type": "string[]",
            "description": "The unique identifier of the type of study being performed.",
            "example": "",
            "calls": [],
            "data_types": {
                "studySearchRequest": true
            }
        },
        "studyTypeNames": {
            "type": "string[]",
            "description": "The name of the type of study being performed. ex. \"Yield Trial\", etc",
            "example": "",
            "calls": [],
            "data_types": {
                "studySearchRequest": true
            }
        },
        "studyLocations": {
            "type": "string[]",
            "description": "List of location names to filter search results",
            "example": "",
            "calls": [],
            "data_types": {
                "studySearchRequest_Dep": true
            }
        },
        "sourceName": {
            "type": "string",
            "description": "The human readable name of the taxonomy provider",
            "example": "",
            "calls": [],
            "data_types": {
                "taxonID": true
            }
        },
        "taxonId": {
            "type": "string",
            "description": "The identifier (name, ID, URI) of a particular taxonomy within the source provider",
            "example": "",
            "calls": [],
            "data_types": {
                "taxonID": true
            }
        },
        "traitDbId": {
            "type": "string",
            "description": "The ID which uniquely identifies a trait",
            "example": "",
            "calls": {
                "/traits/{traitDbId}": true
            },
            "data_types": {
                "trait": true,
                "traitSummary": true
            }
        },
        "observationVariables": {
            "type": "string[]",
            "description": "List of observation variable DbIds which include this trait",
            "example": "",
            "calls": [],
            "data_types": {
                "traitSummary": true
            }
        },
        "traitId": {
            "type": "string",
            "description": "DEPRECATED The ID which uniquely identifies a trait",
            "example": "",
            "calls": [],
            "data_types": {
                "traitSummary": true
            }
        },
        "datasetAuthorship": {
            "type": "trial_datasetAuthorship",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "trial": true
            }
        },
        "datasetAuthorships": {
            "type": "trial_datasetAuthorships[]",
            "description": "License and citation information for the data in this trial",
            "example": "",
            "calls": [],
            "data_types": {
                "trial": true
            }
        },
        "publications": {
            "type": "trial_publications[]",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "trial": true
            }
        },
        "studies": {
            "type": "trial_studies[]",
            "description": "List of studies inside this trial",
            "example": "",
            "calls": [],
            "data_types": {
                "trial": true,
                "trialSummary": true
            }
        },
        "categories": {
            "type": "string[]",
            "description": "List of possible values and their meaning (examples: [\"0=low\", \"1=medium\", \"2=high\"]",
            "example": "",
            "calls": [],
            "data_types": {
                "validValues": true
            }
        },
        "max": {
            "type": "integer",
            "description": "Maximum value (used for field data capture control).",
            "example": "",
            "calls": {
                "/maps/{mapDbId}/positions/{linkageGroupName}": true
            },
            "data_types": {
                "validValues": true
            }
        },
        "min": {
            "type": "integer",
            "description": "Minimum value (used for data capture control) for numerical and date scales",
            "example": "",
            "calls": {
                "/maps/{mapDbId}/positions/{linkageGroupName}": true
            },
            "data_types": {
                "validValues": true
            }
        },
        "vendorAddress": {
            "type": "string",
            "description": "The street address of the vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorCity": {
            "type": "string",
            "description": "The name of the city where the vendor is located",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorContactName": {
            "type": "string",
            "description": "The name or identifier of the primary vendor contact",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorCountry": {
            "type": "string",
            "description": "The name of the country where the vendor is located",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorDescription": {
            "type": "string",
            "description": "A description of the vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorEmail": {
            "type": "string",
            "description": "The primary email address used to contact the vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorName": {
            "type": "string",
            "description": "The human readable name of the vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorPhone": {
            "type": "string",
            "description": "The primary phone number used to contact the vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "vendorURL": {
            "type": "string",
            "description": "The primary URL for the vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorContact": true
            }
        },
        "ontologyID": {
            "type": "string",
            "description": "Ontology unique ID (example: \"0025034\" or \"4577\")",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOntologyReference": true
            }
        },
        "ontologyPrefix": {
            "type": "string",
            "description": "Ontology identifier prefix (example: \"PO\" or \"NCBITaxon\")",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOntologyReference": true
            }
        },
        "ontologyTerm": {
            "type": "string",
            "description": "Ontology term string (example: \"leaf\" or \"Zea mays\")",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOntologyReference": true
            }
        },
        "clientId": {
            "type": "string",
            "description": "A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the correct billing and contact info.",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrder": true,
                "vendorOrderRequest": true,
                "vendorPlateGetResponse": true,
                "vendorPlatesSubmissionRequest": true
            }
        },
        "numberOfSamples": {
            "type": "integer",
            "description": "The total number of samples contained in this request. Used for billing and basic validation of the request.",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrder": true,
                "vendorOrderRequest": true,
                "vendorPlateGetResponse": true,
                "vendorPlatesSubmissionRequest": true
            }
        },
        "orderId": {
            "type": "string",
            "description": "The order id returned by the vendor when the order was successfully submitted.",
            "example": "",
            "calls": {
                "/vendor/orders": true,
                "/vendor/orders/{orderId}/plates": true,
                "/vendor/orders/{orderId}/results": true,
                "/vendor/orders/{orderId}/status": true
            },
            "data_types": {
                "vendorOrder": true,
                "vendorOrderResponse_result": true
            }
        },
        "requiredServiceInfo": {
            "type": "object",
            "description": "A map of additional data required by the requested service. This includes things like Volume and Concentration.",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrder": true,
                "vendorOrderRequest": true
            }
        },
        "serviceId": {
            "type": "string",
            "description": "A unique, alpha-numeric ID which identifies the requested service to be used for this order. The service defines what platform, technology, and markers will be used. A list of service IDs can be retrieved from the Vendor Specs.",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrder": true,
                "vendorSpecificationService": true
            }
        },
        "plates": {
            "type": "vendorOrderRequest_plates[]",
            "description": "Array of new plates to be submitted to a vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrderRequest": true,
                "vendorPlateGetResponse": true,
                "vendorPlatesSubmissionRequest": true
            }
        },
        "serviceIds": {
            "type": "string[]",
            "description": "A list of unique, alpha-numeric ID which identify the requested services to be applied to this order. A Vendor Service defines what platform, technology, and markers will be used. A list of service IDs can be retrieved from the Vendor Specs.",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrderRequest": true
            }
        },
        "clientPlateBarcode": {
            "type": "string",
            "description": "(Optional) The value of the bar code attached to this plate",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorPlate": true,
                "vendorOrderRequest_plates": true
            }
        },
        "clientPlateId": {
            "type": "string",
            "description": "The ID which uniquely identifies this plate to the client making the request",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorPlate": true,
                "vendorOrderRequest_plates": true
            }
        },
        "sampleSubmissionFormat": {
            "type": "plateFormat",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorPlate": true,
                "vendorOrderRequest_plates": true
            }
        },
        "samples": {
            "type": "vendorSample[]",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorPlate": true,
                "vendorOrderRequest_plates": true
            }
        },
        "submissionId": {
            "type": "string",
            "description": "A unique, alpha-numeric ID which identifies a set of plates which have been successfully submitted.",
            "example": "",
            "calls": {
                "/vendor/orders": true,
                "/vendor/plates/{submissionId}": true
            },
            "data_types": {
                "vendorPlatesSubmissionResponse": true
            }
        },
        "clientSampleIds": {
            "type": "string[]",
            "description": "The list of sampleDbIds included in the file",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorResultFile": true
            }
        },
        "fileName": {
            "type": "string",
            "description": "Name of the file",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorResultFile": true,
                "vendorOrderResponse_result_shipmentForms": true
            }
        },
        "fileType": {
            "type": "string",
            "description": "Format of the file",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorResultFile": true
            }
        },
        "fileURL": {
            "type": "string",
            "description": "The URL to a file with the results of a vendor analysis",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorResultFile": true,
                "vendorOrderResponse_result_shipmentForms": true
            }
        },
        "md5sum": {
            "type": "string",
            "description": "MD5 Hash Check Sum for the file to confirm download without error",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorResultFile": true
            }
        },
        "clientSampleBarCode": {
            "type": "string",
            "description": "(Optional) The value of the bar code attached to this sample",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "clientSampleId": {
            "type": "string",
            "description": "The ID which uniquely identifies this sample to the client making the request",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "column": {
            "type": "string",
            "description": "The Column identifier for this samples location in the plate",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "concentration": {
            "type": "measurement",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "organismName": {
            "type": "string",
            "description": "Scientific organism name",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "row": {
            "type": "string",
            "description": "The Row identifier for this samples location in the plate",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "speciesName": {
            "type": "string",
            "description": "Scientific species name",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "taxonomyOntologyReference": {
            "type": "vendorOntologyReference",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "tissueTypeOntologyReference": {
            "type": "vendorOntologyReference",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "volume": {
            "type": "measurement",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "well": {
            "type": "string",
            "description": "The Well identifier for this samples location in the plate. Ussually a concatination of Row and Column.",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSample": true
            }
        },
        "services": {
            "type": "vendorSpecificationService[]",
            "description": "List of platform specifications available at the vendor",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSpecification": true
            }
        },
        "vendorContact": {
            "type": "vendorContact",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSpecification": true
            }
        },
        "serviceDescription": {
            "type": "string",
            "description": "Description of the vendor platform",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSpecificationService": true
            }
        },
        "serviceName": {
            "type": "string",
            "description": "The human readable name of a platform",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSpecificationService": true
            }
        },
        "servicePlatformMarkerType": {
            "type": "string",
            "description": "The type of markers used in this services platform",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSpecificationService": true
            }
        },
        "servicePlatformName": {
            "type": "string",
            "description": "The technology platform used by this service",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSpecificationService": true
            }
        },
        "specificRequirements": {
            "type": "object",
            "description": "Additional arbitrary requirements for a particular platform",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorSpecificationService": true
            }
        },
        "client_id": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "login_body": true
            }
        },
        "grant_type": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "login_body": true
            }
        },
        "password": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "login_body": true
            }
        },
        "username": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "login_body": true
            }
        },
        "asynchId": {
            "type": "string",
            "description": "The unique ID to poll for asynchronous results",
            "example": "",
            "calls": [],
            "data_types": {
                "asynchStatusMetadata_asynchStatus": true
            }
        },
        "endTime": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "asynchStatusMetadata_asynchStatus": true
            }
        },
        "percentComplete": {
            "type": "integer",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "asynchStatusMetadata_asynchStatus": true
            }
        },
        "startTime": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "asynchStatusMetadata_asynchStatus": true
            }
        },
        "donorAccessionNumber": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm_donors": true,
                "germplasmMCPD_donorInfo": true
            }
        },
        "donorInstituteCode": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasm_donors": true
            }
        },
        "coordinateUncertainty": {
            "type": "string",
            "description": "MCPD (v2.1) (COORDUNCERT) 15.5 Uncertainty associated with the coordinates in metres. Leave the value empty if the uncertainty is unknown.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "elevation": {
            "type": "string",
            "description": "MCPD (v2.1) (ELEVATION) 16. Elevation of collecting site expressed in metres above sea level. Negative values are allowed.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "georeferencingMethod": {
            "type": "string",
            "description": "MCPD (v2.1) (GEOREFMETH) 15.7  The georeferencing method used (GPS, determined from map, gazetteer, or estimated using software). Leave the value empty if georeferencing method is not known.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "latitudeDecimal": {
            "type": "string",
            "description": "MCPD (v2.1) (DECLATITUDE) 15.1 Latitude expressed in decimal degrees. Positive values are North of the Equator; negative values are South of the Equator (e.g. -44.6975).",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "latitudeDegrees": {
            "type": "string",
            "description": "MCPD (v2.1) (LATITUDE) 15.2 Degrees (2 digits) minutes (2 digits), and seconds (2 digits) followed by N (North) or S (South) (e.g. 103020S). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 10",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "locationDescription": {
            "type": "string",
            "description": "MCPD (v2.1) (COLLSITE) 14. Location information below the country level that describes where the accession was collected, preferable in English. This might include the distance in kilometres and direction from the nearest town, village or map grid reference point, (e.g. 7 km south of Curitiba in the state of Parana).",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "longitudeDecimal": {
            "type": "string",
            "description": "MCPD (v2.1) (DECLONGITUDE) 15.3 Longitude expressed in decimal degrees. Positive values are East of the Greenwich Meridian; negative values are West of the Greenwich Meridian (e.g. +120.9123).",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "longitudeDegrees": {
            "type": "string",
            "description": "MCPD (v2.1) (LONGITUDE) 15.4 Degrees (3 digits), minutes (2 digits), and seconds (2 digits) followed by E (East) or W (West) (e.g. 0762510W). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 076",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "spatialReferenceSystem": {
            "type": "string",
            "description": "MCPD (v2.1) (COORDDATUM) 15.6 The geodetic datum or spatial reference system upon which the coordinates given in decimal latitude and decimal longitude are based (e.g. WGS84, ETRS89, NAD83). The GPS uses the WGS84 datum.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo_collectingSite": true
            }
        },
        "collectingDate": {
            "type": "string",
            "description": "MCPD (v2.1) (COLLDATE) 17. Collecting date of the sample [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \"00\" [double zero].",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo": true
            }
        },
        "collectingInstitutes": {
            "type": "germplasmMCPD_collectingInfo_collectingInstitutes[]",
            "description": "Institutes which collected the sample",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo": true
            }
        },
        "collectingMissionIdentifier": {
            "type": "string",
            "description": "MCPD (v2.1) (COLLMISSID) 4.2 Identifier of the collecting mission used by the Collecting Institute (4 or 4.1) (e.g. \"CIATFOR052\", \"CN426\").",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo": true
            }
        },
        "collectingNumber": {
            "type": "string",
            "description": "MCPD (v2.1) (COLLNUMB) 3. Original identifier assigned by the collector(s) of the sample, normally composed of the name or initials of the collector(s) followed by a number (e.g. \"FM9909\"). This identifier is essential for identifying duplicates held in different collections.",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo": true
            }
        },
        "collectingSite": {
            "type": "germplasmMCPD_collectingInfo_collectingSite",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_collectingInfo": true
            }
        },
        "donorInstitute": {
            "type": "germplasmMCPD_donorInfo_donorInstitute",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "germplasmMCPD_donorInfo": true
            }
        },
        "currentPage": {
            "type": "integer",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "metadata_pagination": true,
                "newObservationsTableRequest_metadata_pagination": true
            }
        },
        "totalCount": {
            "type": "integer",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "metadata_pagination": true,
                "newObservationsTableRequest_metadata_pagination": true
            }
        },
        "totalPages": {
            "type": "integer",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "metadata_pagination": true,
                "newObservationsTableRequest_metadata_pagination": true
            }
        },
        "observatioUnitDbId": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "newObservationsRequestDeprecated_data": true,
                "phenotypesRequest_data": true
            }
        },
        "sampleId": {
            "type": "string",
            "description": "** Deprecated ** use sampleDbId",
            "example": "",
            "calls": [],
            "data_types": {
                "newSampleDbId_result": true
            }
        },
        "URL": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "ontologyReference_documentationLinks": true
            }
        },
        "parentType": {
            "type": "string",
            "description": "Given a germplasm A having a progeny B and C, 'parentType' for progeny B item refers to the 'parentType' of A toward B.",
            "example": "",
            "calls": [],
            "data_types": {
                "progeny_progeny": true
            }
        },
        "timestamp": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "study_lastUpdate": true
            }
        },
        "searchResultDbId": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "successfulSearchResponse_result": true
            }
        },
        "datasetPUI": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "trial_datasetAuthorship": true,
                "trial_datasetAuthorships": true
            }
        },
        "publicationPUI": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "trial_publications": true
            }
        },
        "publicationReference": {
            "type": "string",
            "description": "",
            "example": "",
            "calls": [],
            "data_types": {
                "trial_publications": true
            }
        },
        "fileDescription": {
            "type": "string",
            "description": "The human readable long description for this form",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrderResponse_result_shipmentForms": true
            }
        },
        "shipmentForms": {
            "type": "vendorOrderResponse_result_shipmentForms[]",
            "description": "Array of paper forms which need to be printed and included with the physical shipment",
            "example": "",
            "calls": [],
            "data_types": {
                "vendorOrderResponse_result": true
            }
        },
        "Authorization": {
            "type": "",
            "description": "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer {token_string} </strong>",
            "example": "Bearer XXXX",
            "calls": {
                "/allelematrices": true,
                "/allelematrices-search": true,
                "/attributes": true,
                "/attributes/categories": true,
                "/breedingmethods": true,
                "/breedingmethods/{breedingMethodDbId}": true,
                "/calls": true,
                "/commoncropnames": true,
                "/germplasm": true,
                "/germplasm/{germplasmDbId}": true,
                "/germplasm/{germplasmDbId}/attributes": true,
                "/germplasm/{germplasmDbId}/markerprofiles": true,
                "/germplasm/{germplasmDbId}/mcpd": true,
                "/germplasm/{germplasmDbId}/pedigree": true,
                "/germplasm/{germplasmDbId}/progeny": true,
                "/images": true,
                "/images/{imageDbId}": true,
                "/images/{imageDbId}/imagecontent": true,
                "/lists": true,
                "/lists/{listDbId}": true,
                "/lists/{listDbId}/items": true,
                "/locations": true,
                "/locations/{locationDbId}": true,
                "/maps": true,
                "/maps/{mapDbId}": true,
                "/maps/{mapDbId}/positions": true,
                "/maps/{mapDbId}/positions/{linkageGroupName}": true,
                "/markerprofiles": true,
                "/markerprofiles/{markerProfileDbId}": true,
                "/markers": true,
                "/markers/{markerDbId}": true,
                "/methods": true,
                "/methods/{methodDbId}": true,
                "/observationlevels": true,
                "/observationunits": true,
                "/ontologies": true,
                "/people": true,
                "/people/{personDbId}": true,
                "/phenotypes": true,
                "/programs": true,
                "/samples": true,
                "/samples/{sampleDbId}": true,
                "/scales": true,
                "/scales/{scaleDbId}": true,
                "/search/germplasm": true,
                "/search/germplasm/{searchResultsDbId}": true,
                "/search/images": true,
                "/search/images/{searchResultsDbId}": true,
                "/search/markers": true,
                "/search/markers/{searchResultsDbId}": true,
                "/search/observationtables": true,
                "/search/observationtables/{searchResultsDbId}": true,
                "/search/observationunits": true,
                "/search/observationunits/{searchResultsDbId}": true,
                "/search/programs": true,
                "/search/programs/{searchResultsDbId}": true,
                "/search/samples": true,
                "/search/samples/{searchResultsDbId}": true,
                "/search/studies": true,
                "/search/studies/{searchResultsDbId}": true,
                "/search/variables": true,
                "/search/variables/{searchResultsDbId}": true,
                "/seasons": true,
                "/studies": true,
                "/studies/{studyDbId}": true,
                "/studies/{studyDbId}/germplasm": true,
                "/studies/{studyDbId}/layout": true,
                "/studies/{studyDbId}/layouts": true,
                "/studies/{studyDbId}/observations": true,
                "/studies/{studyDbId}/observationunits": true,
                "/studies/{studyDbId}/observationunits/zip": true,
                "/studies/{studyDbId}/observationvariables": true,
                "/studies/{studyDbId}/table": true,
                "/studytypes": true,
                "/traits": true,
                "/traits/{traitDbId}": true,
                "/trials": true,
                "/trials/{trialDbId}": true,
                "/variables": true,
                "/variables/{observationVariableDbId}": true,
                "/vendor/orders": true,
                "/vendor/orders/{orderId}/plates": true,
                "/vendor/orders/{orderId}/results": true,
                "/vendor/orders/{orderId}/status": true,
                "/vendor/plates": true,
                "/vendor/specifications": true
            },
            "data_types": []
        },
        "datatype": {
            "type": "",
            "description": "DEPRECATED in v1.3 - see dataType (camel case)",
            "example": "",
            "calls": {
                "/calls": true
            },
            "data_types": []
        },
        "attributeDbIds": {
            "type": "",
            "description": "Restrict the response to only the listed attributeDbIds.",
            "example": "",
            "calls": {
                "/germplasm/{germplasmDbId}/attributes": true
            },
            "data_types": []
        },
        "attributeList": {
            "type": "",
            "description": "**Deprecated** Use \"attributeDbIds\" instead",
            "example": "",
            "calls": {
                "/germplasm/{germplasmDbId}/attributes": true
            },
            "data_types": []
        },
        "notation": {
            "type": "",
            "description": "text representation of the pedigree",
            "example": "",
            "calls": {
                "/germplasm/{germplasmDbId}/pedigree": true
            },
            "data_types": []
        },
        "includeSiblings": {
            "type": "",
            "description": "include array of siblings in response",
            "example": "",
            "calls": {
                "/germplasm/{germplasmDbId}/pedigree": true
            },
            "data_types": []
        },
        "descriptiveOntologyTerm": {
            "type": "",
            "description": "A descriptive term associated with an image",
            "example": "",
            "calls": {
                "/images": true
            },
            "data_types": []
        },
        "linkageGroupId": {
            "type": "",
            "description": "Deprecated Use linkageGroupName instead",
            "example": "",
            "calls": {
                "/maps/{mapDbId}/positions": true
            },
            "data_types": []
        },
        "include": {
            "type": "",
            "description": "DEPRECATED in v1.1 - see \"includeSynonyms\"",
            "example": "",
            "calls": {
                "/markers": true
            },
            "data_types": []
        },
        "searchResultsDbId": {
            "type": "",
            "description": "Permanent unique identifier which references the search results",
            "example": "",
            "calls": {
                "/search/germplasm/{searchResultsDbId}": true,
                "/search/images/{searchResultsDbId}": true,
                "/search/markers/{searchResultsDbId}": true,
                "/search/observationtables/{searchResultsDbId}": true,
                "/search/observationunits/{searchResultsDbId}": true,
                "/search/programs/{searchResultsDbId}": true,
                "/search/samples/{searchResultsDbId}": true,
                "/search/studies/{searchResultsDbId}": true,
                "/search/variables/{searchResultsDbId}": true
            },
            "data_types": []
        },
        "traitClass": {
            "type": "",
            "description": "Variable's trait class (phenological, physiological, morphological, etc.)",
            "example": "",
            "calls": {
                "/variables": true
            },
            "data_types": []
        }
    }
}