{"modules":{"BrAPI-Core":{"Server Info":{"calls":{"\/serverinfo":true}},"Common Crop Names":{"calls":{"\/commoncropnames":true}},"Programs":{"calls":{"\/programs":true,"\/programs\/{programDbId}":true,"\/search\/programs":true,"\/search\/programs\/{searchResultsDbId}":true}},"Trials":{"calls":{"\/search\/trials":true,"\/search\/trials\/{searchResultsDbId}":true,"\/trials":true,"\/trials\/{trialDbId}":true}},"Studies":{"calls":{"\/search\/studies":true,"\/search\/studies\/{searchResultsDbId}":true,"\/studies":true,"\/studies\/{studyDbId}":true,"\/studytypes":true}},"Locations":{"calls":{"\/locations":true,"\/locations\/{locationDbId}":true,"\/search\/locations":true,"\/search\/locations\/{searchResultsDbId}":true}},"Seasons":{"calls":{"\/seasons":true,"\/seasons\/{seasonDbId}":true}},"Lists":{"calls":{"\/lists":true,"\/lists\/{listDbId}":true,"\/lists\/{listDbId}\/items":true,"\/search\/lists":true,"\/search\/lists\/{searchResultsDbId}":true}},"People":{"calls":{"\/people":true,"\/people\/{personDbId}":true,"\/search\/people":true,"\/search\/people\/{searchResultsDbId}":true}},"1":{"data_types":{"commonCropNamesResponse_result":true,"ListTypes":true,"ListSummary":true,"ListDetails":true,"Location":true,"Person":true,"Program":true,"Study":true,"Trial":true,"Season":true,"WSMIMEDataTypes":true,"ServerInfo":true,"studyTypesResponse_result":true}}},"BrAPI-Phenotyping":{"Observations":{"calls":{"\/observations":true,"\/observations\/table":true,"\/observations\/{observationDbId}":true,"\/search\/observations":true,"\/search\/observations\/{searchResultsDbId}":true}},"Observation Units":{"calls":{"\/observationlevels":true,"\/observationunits":true,"\/observationunits\/table":true,"\/observationunits\/{observationUnitDbId}":true,"\/search\/observationunits":true,"\/search\/observationunits\/{searchResultsDbId}":true}},"Observation Variables":{"calls":{"\/search\/variables":true,"\/search\/variables\/{searchResultsDbId}":true,"\/variables":true,"\/variables\/{observationVariableDbId}":true}},"Methods":{"calls":{"\/methods":true,"\/methods\/{methodDbId}":true}},"Traits":{"calls":{"\/traits":true,"\/traits\/{traitDbId}":true}},"Scales":{"calls":{"\/scales":true,"\/scales\/{scaleDbId}":true}},"Ontologies":{"calls":{"\/ontologies":true}},"Images":{"calls":{"\/images":true,"\/images\/{imageDbId}":true,"\/images\/{imageDbId}\/imagecontent":true,"\/search\/images":true,"\/search\/images\/{searchResultsDbId}":true}},"Events":{"calls":{"\/events":true}},"1":{"data_types":{"Event":true,"Image":true,"Method":true,"ObservationUnitHierarchyLevel":true,"Observation":true,"WSMIMEDataTypes":true,"ObservationTable":true,"ObservationUnit":true,"ObservationUnitTable":true,"Ontology":true,"Scale":true,"ObservationVariable":true,"Trait":true}}},"BrAPI-Genotyping":{"Calls":{"calls":{"\/calls":true,"\/search\/calls":true,"\/search\/calls\/{searchResultsDbId}":true}},"Call Sets":{"calls":{"\/callsets":true,"\/callsets\/{callSetDbId}":true,"\/callsets\/{callSetDbId}\/calls":true,"\/search\/callsets":true,"\/search\/callsets\/{searchResultsDbId}":true}},"Variants":{"calls":{"\/search\/variants":true,"\/search\/variants\/{searchResultsDbId}":true,"\/variants":true,"\/variants\/{variantDbId}":true,"\/variants\/{variantDbId}\/calls":true}},"Variant Sets":{"calls":{"\/search\/variantsets":true,"\/search\/variantsets\/{searchResultsDbId}":true,"\/variantsets":true,"\/variantsets\/extract":true,"\/variantsets\/{variantSetDbId}":true,"\/variantsets\/{variantSetDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/callsets":true,"\/variantsets\/{variantSetDbId}\/variants":true}},"Samples":{"calls":{"\/samples":true,"\/samples\/{sampleDbId}":true,"\/search\/samples":true,"\/search\/samples\/{searchResultsDbId}":true}},"References":{"calls":{"\/references":true,"\/references\/{referenceDbId}":true,"\/references\/{referenceDbId}\/bases":true,"\/search\/references":true,"\/search\/references\/{searchResultsDbId}":true}},"Reference Sets":{"calls":{"\/referencesets":true,"\/referencesets\/{referenceSetDbId}":true,"\/search\/referencesets":true,"\/search\/referencesets\/{searchResultsDbId}":true}},"Genome Maps":{"calls":{"\/maps":true,"\/maps\/{mapDbId}":true,"\/maps\/{mapDbId}\/linkagegroups":true,"\/markerpositions":true,"\/search\/markerpositions":true,"\/search\/markerpositions\/{searchResultsDbId}":true}},"Vendor":{"calls":{"\/vendor\/orders":true,"\/vendor\/orders\/{orderId}\/plates":true,"\/vendor\/orders\/{orderId}\/results":true,"\/vendor\/orders\/{orderId}\/status":true,"\/vendor\/plates":true,"\/vendor\/plates\/{submissionId}":true,"\/vendor\/specifications":true}},"1":{"data_types":{"Call":true,"CallSet":true,"GenomeMap":true,"LinkageGroup":true,"MarkerPosition":true,"Reference":true,"ReferenceBases":true,"ReferenceSet":true,"Sample":true,"Variant":true,"VariantSet":true,"VendorOrder":true,"VendorOrderSubmission":true,"VendorPlate":true,"VendorResultFile":true,"VendorOrderStatusResponse_result":true,"VendorPlateSubmissionId":true,"VendorPlateSubmission":true,"VendorSpecification":true}}},"BrAPI-Germplasm":{"Germplasm":{"calls":{"\/breedingmethods":true,"\/breedingmethods\/{breedingMethodDbId}":true,"\/germplasm":true,"\/germplasm\/{germplasmDbId}":true,"\/germplasm\/{germplasmDbId}\/mcpd":true,"\/germplasm\/{germplasmDbId}\/pedigree":true,"\/germplasm\/{germplasmDbId}\/progeny":true,"\/search\/germplasm":true,"\/search\/germplasm\/{searchResultsDbId}":true}},"Germplasm Attributes":{"calls":{"\/attributes":true,"\/attributes\/categories":true,"\/attributes\/{attributeDbId}":true,"\/search\/attributes":true,"\/search\/attributes\/{searchResultsDbId}":true}},"Germplasm Attribute Values":{"calls":{"\/attributevalues":true,"\/attributevalues\/{attributeValueDbId}":true,"\/search\/attributevalues":true,"\/search\/attributevalues\/{searchResultsDbId}":true}},"Crossing Projects":{"calls":{"\/crossingprojects":true,"\/crossingprojects\/{crossingProjectDbId}":true}},"Crosses":{"calls":{"\/crosses":true,"\/plannedcrosses":true}},"Seed Lots":{"calls":{"\/seedlots":true,"\/seedlots\/transactions":true,"\/seedlots\/{seedLotDbId}":true,"\/seedlots\/{seedLotDbId}\/transactions":true}},"1":{"data_types":{"GermplasmAttribute":true,"GermplasmAttributeCategoryListResponse_result":true,"GermplasmAttributeValue":true,"BreedingMethod":true,"Cross":true,"CrossingProject":true,"Germplasm":true,"GermplasmMCPD":true,"PedigreeNode":true,"ProgenyNode":true,"PlannedCross":true,"SeedLot":true,"SeedLotTransaction":true}}}},"calls":{"\/commoncropnames":{"definition":{"get":{"tags":["Common Crop Names"],"summary":"Get the Common Crop Names","description":"List the common crop names for the crops available in a database server. \n\nThis call is ** required ** for multi-crop systems where data from multiple \ncrops may be stored in the same database server. A distinct database server \nis defined by everything in the URL before \"\/brapi\/v2\", including host \nname and base path.\n\nThis call is recommended for single crop systems to be compatible with \nmulti-crop clients. For a single crop system the response should contain \nan array with exactly 1 element. \n\nThe common crop name can be used as a search parameter for Programs, \nStudies, and Germplasm.","parameters":[{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/commonCropNamesResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"commonCropNamesResponse_result":true}},"\/lists":{"definition":{"get":{"tags":["Lists"],"summary":"Get filtered set of generic lists","description":"Get filtered set of generic lists","parameters":[{"name":"listType","in":"query","description":"The type of objects contained by this generic list","required":false,"style":"form","explode":true,"schema":{"$ref":"#\/components\/schemas\/ListTypes"}},{"name":"listName","in":"query","description":"The human readable name of this generic list","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"listDbId","in":"query","description":"The unique ID of this generic list","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"listSource","in":"query","description":"The source tag of this generic list","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Lists"],"summary":"Create New List Objects","description":"Create new list objects in the database","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/ListNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ListTypes":true,"ListSummary":true}},"\/lists\/{listDbId}":{"definition":{"get":{"tags":["Lists"],"summary":"Get the details of a specific List","description":"Get a specific generic lists","parameters":[{"name":"listDbId","in":"path","description":"The unique ID of this generic list","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListsSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Lists"],"summary":"Update an existing generic list","description":"Update an existing generic list","parameters":[{"name":"listDbId","in":"path","description":"The unique ID of this generic list","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListsSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"ListDetails":true}},"\/lists\/{listDbId}\/items":{"definition":{"post":{"tags":["Lists"],"summary":"Add Items to a specific List","description":"Add new data to a specific generic lists","parameters":[{"name":"listDbId","in":"path","description":"The unique ID of this generic list","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","example":["758a78c0","2c78f9ee"],"items":{"type":"string"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/listResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"ListDetails":true}},"\/locations":{"definition":{"get":{"tags":["Locations"],"summary":"Get a filtered list of Locations","description":"Get a list of locations.\n* The `countryCode` is as per [ISO_3166-1_alpha-3](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-3) spec.\n* `altitude` is in meters.","parameters":[{"name":"locationType","in":"query","description":"Filter by location type specified.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"locationDbId","in":"query","description":"Filter by location DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Locations"],"summary":"Create new Locations","description":"Add new locations to database\n* The `countryCode` is as per [ISO_3166-1_alpha-3](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-3) spec.\n* `altitude` is in meters.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/LocationNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Location":true}},"\/locations\/{locationDbId}":{"definition":{"get":{"tags":["Locations"],"summary":"Get the details of a specific Location","description":"Get details for a location.\n- The `countryCode` is as per [ISO_3166-1_alpha-3](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-3) spec.\n- `altitude` is in meters.'","parameters":[{"name":"locationDbId","in":"path","description":"The internal DB id for a location","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Locations"],"summary":"Update the details for an existing Location","description":"Update the details for an existing location.\n- The `countryCode` is as per [ISO_3166-1_alpha-3](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-3) spec.\n- `altitude` is in meters.'","parameters":[{"name":"locationDbId","in":"path","description":"The internal DB id for a location","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Location":true}},"\/people":{"definition":{"get":{"tags":["People"],"summary":"Get filtered list of People","description":"Get filtered list of people","parameters":[{"name":"firstName","in":"query","description":"A persons first name","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"lastName","in":"query","description":"A persons last name","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"personDbId","in":"query","description":"The unique ID of a person","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"userID","in":"query","description":"A systems user ID associated with this person. Different from personDbId because you could have a person who is not a user of the system.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["People"],"summary":"Create new People","description":"Create new People entities. `personDbId` is generated and managed by the server.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/PersonNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Person":true}},"\/people\/{personDbId}":{"definition":{"get":{"tags":["People"],"summary":"Get the details for a specific Person","description":"Get the details for a specific Person","parameters":[{"name":"personDbId","in":"path","description":"The unique ID of a person","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["People"],"summary":"Update an existing Person","description":"Update an existing Person","parameters":[{"name":"personDbId","in":"path","description":"The unique ID of a person","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Person":true}},"\/programs":{"definition":{"get":{"tags":["Programs"],"summary":"Get a filtered list of breeding Programs","description":"Get a filtered list of breeding Programs. This list can be filtered by common crop name to narrow results to a specific crop.","parameters":[{"name":"commonCropName","in":"query","description":"Filter by the common crop name. Exact match.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"Program filter to only return trials associated with given program id.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programName","in":"query","description":"Filter by program name. Exact match.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"abbreviation","in":"query","description":"Filter by program abbreviation. Exact match.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Programs"],"summary":"Add new breeding Programs to the database","description":"Add new breeding Programs to the database. The `programDbId` is set by the server, all other fields are take from the request body, or a default value is used.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/ProgramNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Program":true}},"\/programs\/{programDbId}":{"definition":{"get":{"tags":["Programs"],"summary":"Get a breeding Program by Id","description":"Get a single breeding Program by Id. This can be used to quickly get the details of a Program when you have the Id from another entity.","parameters":[{"name":"programDbId","in":"path","description":"Filter by the common crop name. Exact match.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Programs"],"summary":"Update an existing Program","description":"Update the details of an existing breeding Program.","parameters":[{"name":"programDbId","in":"path","description":"Filter by the common crop name. Exact match.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Program":true}},"\/search\/lists":{"definition":{"post":{"tags":["Lists"],"summary":"Submit a search request for Lists","description":"Submit a search request for Lists <br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/lists\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ListSummary":true}},"\/search\/lists\/{searchResultsDbId}":{"definition":{"get":{"tags":["Lists"],"summary":"Get the results of a `List` search request","description":"Get the results of a `List` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/lists` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ListsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ListSummary":true}},"\/search\/locations":{"definition":{"post":{"tags":["Locations"],"summary":"Submit a search request for `Locations`","description":"Submit a search request for `Locations`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/locations\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Location":true}},"\/search\/locations\/{searchResultsDbId}":{"definition":{"get":{"tags":["Locations"],"summary":"Get the results of a `Locations` search request","description":"Get the results of a `Locations` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/location` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LocationListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Location":true}},"\/search\/people":{"definition":{"post":{"tags":["People"],"summary":"Submit a search request for `People`","description":"Submit a search request for `People`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/people\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Person":true}},"\/search\/people\/{searchResultsDbId}":{"definition":{"get":{"tags":["People"],"summary":"Get the results of a `People` search request","description":"Get the results of a `People` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/people` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PersonListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Person":true}},"\/search\/programs":{"definition":{"post":{"tags":["Programs"],"summary":"Submit a search request for `Programs`","description":"Submit a search request for `Programs`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/programs\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Program":true}},"\/search\/programs\/{searchResultsDbId}":{"definition":{"get":{"tags":["Programs"],"summary":"Get the results of a `Programs` search request","description":"Get the results of a `Programs` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/programs` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ProgramListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Program":true}},"\/search\/studies":{"definition":{"post":{"tags":["Studies"],"summary":"Submit a search request for `Studies`","description":"Submit a search request for `Studies`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/studies\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"description":"Study Search request","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudySearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudyListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Study":true}},"\/search\/studies\/{searchResultsDbId}":{"definition":{"get":{"tags":["Studies"],"summary":"Get the results of a `Studies` search request","description":"Get the results of a `Studies` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/studies` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudyListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Study":true}},"\/search\/trials":{"definition":{"post":{"tags":["Trials"],"summary":"Submit a search request for `Trials`","description":"Submit a search request for `Trials`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/trials\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Trial":true}},"\/search\/trials\/{searchResultsDbId}":{"definition":{"get":{"tags":["Trials"],"summary":"Get the results of a `Trials` search request","description":"Get the results of a `Trials` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/trials` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Trial":true}},"\/seasons":{"definition":{"get":{"tags":["Seasons"],"summary":"Get the Seasons","description":"Call to retrieve all seasons in the database.\n\nA season is made of 2 parts; the primary year and a term which defines a segment of the year. \nThis could be a traditional season, like \"Spring\" or \"Summer\" or this could be a month, like \n\"May\" or \"June\" or this could be an arbitrary season name which is meaningful to the breeding \nprogram like \"PlantingTime_3\" or \"Season E\"","parameters":[{"name":"seasonDbId","in":"query","description":"The unique identifier for a season. For backward compatibility it can be a string like '2012', '1957-2004'","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"b230a1d2, Spring_2017, 3"},{"name":"season","in":"query","description":"The term to describe a given season. Example \"Spring\" OR \"May\" OR \"Planting_Time_7\".","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"Spring"},{"name":"year","in":"query","description":"The 4 digit year of a season. Example \"2017\"","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":2017},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeasonListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Seasons"],"summary":"POST new Seasons","description":"Add new season entries to the database","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/Season"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeasonListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Season":true}},"\/seasons\/{seasonDbId}":{"definition":{"get":{"tags":["Seasons"],"summary":"Get the a single Season","description":"Get the a single Season","parameters":[{"name":"seasonDbId","in":"path","description":"The unique identifier for a season. For backward compatibility it can be a string like '2012', '1957-2004'","required":true,"style":"simple","explode":false,"schema":{"type":"string"},"example":"b230a1d2, Spring_2017, 3"},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeasonSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Seasons"],"summary":"Update existing Seasons","description":"Update existing Seasons","parameters":[{"name":"seasonDbId","in":"path","description":"The unique identifier for a season. For backward compatibility it can be a string like '2012', '1957-2004'","required":true,"style":"simple","explode":false,"schema":{"type":"string"},"example":"b230a1d2, Spring_2017, 3"},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/Season"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeasonSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Season":true}},"\/serverinfo":{"definition":{"get":{"tags":["Server Info"],"summary":"Get the list of implemented Calls","description":"Implementation Notes\n\nHaving a consistent structure for the path string of each call is very \nimportant for teams to be able to connect and find errors. Read more on Github.\n\nHere are the rules for the path of each call that should be returned\n\nEvery word in the call path should match the documentation exactly, both in \nspelling and capitalization. Note that path strings are all lower case, but \npath parameters are camel case.\n\nEach path should start relative to \\\"\/\\\" and therefore should not include \\\"\/\\\"\n\nNo leading or trailing slashes (\\\"\/\\\") \n\nPath parameters are wrapped in curly braces (\\\"{}\\\"). The name of the path parameter \nshould be spelled exactly as it is specified in the documentation.\n\nExamples \n\nGOOD   \"call\": \"germplasm\/{germplasmDbId}\/pedigree\" \n\nBAD    \"call\": \"germplasm\/{id}\/pedigree\"\n\nBAD    \"call\": \"germplasm\/{germplasmDBid}\/pedigree\" \n\nBAD    \"call\": \"brapi\/v2\/germplasm\/{germplasmDbId}\/pedigree\" \n\nBAD    \"call\": \"\/germplasm\/{germplasmDbId}\/pedigree\/\" \n\nBAD    \"call\": \"germplasm\/<germplasmDbId>\/pedigree\"","parameters":[{"name":"dataType","in":"query","description":"The data format supported by the call.","required":false,"style":"form","explode":true,"schema":{"$ref":"#\/components\/schemas\/WSMIMEDataTypes"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ServerInfoResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"WSMIMEDataTypes":true,"ServerInfo":true}},"\/studies":{"definition":{"get":{"tags":["Studies"],"summary":"Get a filtered list of Studies","description":"Get list of studies\n\nStartDate and endDate should be ISO-8601 format for dates","parameters":[{"name":"commonCropName","in":"query","description":"Common name for the crop associated with this study","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyType","in":"query","description":"Filter based on study type unique identifier","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"Program filter to only return studies associated with given program id.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"locationDbId","in":"query","description":"Filter by location","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"seasonDbId","in":"query","description":"Filter by season or year","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"Filter by trial","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"Filter by study DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyName","in":"query","description":"Filter by study name","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyCode","in":"query","description":"Filter by study code","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyPUI","in":"query","description":"Filter by study PUI","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"Filter by germplasm DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationVariableDbId","in":"query","description":"Filter by observation variable DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"active","in":"query","description":"Filter active status true\/false.","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"sortBy","in":"query","description":"Name of the field to sort by.","required":false,"style":"form","explode":true,"schema":{"type":"string","enum":["studyDbId","trialDbId","programDbId","locationDbId","seasonDbId","studyType","studyName","studyLocation","programName"]}},{"name":"sortOrder","in":"query","description":"Sort order direction. Ascending\/Descending.","required":false,"style":"form","explode":true,"schema":{"type":"string","enum":["asc","ASC","desc","DESC"]}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudyListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Studies"],"summary":"Create new Studies.","description":"Create new studies\n\nImplementation Notes\n\nStartDate and endDate should be ISO-8601 format for dates\n\n`studDbId` is generated by the server.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/StudyNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudyListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Study":true}},"\/studies\/{studyDbId}":{"definition":{"get":{"tags":["Studies"],"summary":"Get the details for a specific Study","description":"Retrieve the information of the study required for field data collection\n\nAn additionalInfo field was added to provide a controlled vocabulary for less common data fields.","parameters":[{"name":"studyDbId","in":"path","description":"Identifier of the study. Usually a number, could be alphanumeric.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudySingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Studies"],"summary":"Update an existing Study","description":"Update an existing Study with new data","parameters":[{"name":"studyDbId","in":"path","description":"Identifier of the study. Usually a number, could be alphanumeric.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudyNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/StudySingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Study":true}},"\/studytypes":{"definition":{"get":{"tags":["Studies"],"summary":"Get the Study Types","description":"Call to retrieve the list of study types.","parameters":[{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/studyTypesResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"studyTypesResponse_result":true}},"\/trials":{"definition":{"get":{"tags":["Trials"],"summary":"Get a filtered list of Trials","description":"Retrieve a filtered list of breeding Trials. A Trial is a collection of Studies","parameters":[{"name":"active","in":"query","description":"Filter active status true\/false.","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"commonCropName","in":"query","description":"Common name for the crop associated with this trial","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"contactDbId","in":"query","description":"Contact entities associated with this trial","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"Program filter to only return trials associated with given program id.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"locationDbId","in":"query","description":"Filter by location","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"searchDateRangeStart","in":"query","description":"The start of the overlapping search date range. `searchDateRangeStart` must be before `searchDateRangeEnd`.\n\nReturn a Trial entity if any of the following cases are true\n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is null \n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is after `trial.startDate`\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is null\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is before `trial.endDate`","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date"}},{"name":"searchDateRangeEnd","in":"query","description":"The start of the overlapping search date range. `searchDateRangeStart` must be before `searchDateRangeEnd`.\n\nReturn a Trial entity if any of the following cases are true\n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is null \n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is after `trial.startDate`\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is null\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is before `trial.endDate`","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date"}},{"name":"studyDbId","in":"query","description":"Filter by connected studyDbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"Filter by trialDbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialName","in":"query","description":"Filter by trial name","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialPUI","in":"query","description":"Filter by trial PUI","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sortBy","in":"query","description":"Sort order. Name of the field to sort by.","required":false,"style":"form","explode":true,"schema":{"type":"string","enum":["trialDbId","trialName","programDbId","programName","locationDbId","startDate","endDate"]}},{"name":"sortOrder","in":"query","description":"Sort order direction: asc\/desc","required":false,"style":"form","explode":true,"schema":{"type":"string","enum":["asc","ASC","desc","DESC"]}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Trials"],"summary":"Create new trials","description":"Create new breeding Trials. A Trial represents a collection of related Studies. `trialDbId` is generated by the server.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/TrialNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Trial":true}},"\/trials\/{trialDbId}":{"definition":{"get":{"tags":["Trials"],"summary":"Get the details of a specific Trial","description":"Get the details of a specific Trial","parameters":[{"name":"trialDbId","in":"path","description":"The internal trialDbId","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Trials"],"summary":"Update the details of an existing Trial","description":"Update the details of an existing Trial","parameters":[{"name":"trialDbId","in":"path","description":"The internal trialDbId","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TrialSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Trial":true}},"\/events":{"definition":{"get":{"tags":["Events"],"summary":"Get the Events","description":"Get list of events","parameters":[{"name":"studyDbId","in":"query","description":"Filter based on study unique identifier in which the events occurred","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitDbId","in":"query","description":"Filter based on an ObservationUnit unique identifier in which the events occurred","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"eventDbId","in":"query","description":"Filter based on an Event DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"eventType","in":"query","description":"Filter based on an Event Type","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"dateRangeStart","in":"query","description":"Filter based on an Date Range","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time"}},{"name":"dateRangeEnd","in":"query","description":"Filter based on an Date Range","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/eventsResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Event":true}},"\/images":{"definition":{"get":{"tags":["Images"],"summary":"Get the image meta data summaries","description":"Get filtered set of image meta data\n\nImplementation Notes\n\n- ''imageURL'' should be a complete URL describing the location of the image. There is no BrAPI call for retrieving the image content, so it could be on a different path, or a different host.\n\n- ''descriptiveOntologyTerm'' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI''s.","parameters":[{"name":"imageDbId","in":"query","description":"The unique identifier for a image","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"imageName","in":"query","description":"The human readable name of an image","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitDbId","in":"query","description":"The unique identifier of the observation unit an image is portraying","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationDbId","in":"query","description":"The unique identifier of the observation an image is associated with","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"descriptiveOntologyTerm","in":"query","description":"A descriptive term associated with an image","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Images"],"summary":"Create new image meta data objects","description":"Create new image meta data objects\n\nImplementation Notes\n\n- ''imageURL'' should be a complete URL describing the location of the image. There is no BrAPI call for retrieving the image content, so it could be on a different path, or a different host.\n\n- ''descriptiveOntologyTerm'' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI''s.\n\n- The '\/images' calls support a GeoJSON object structure for describing their location. The BrAPI spec for GeoJSON only supports two of the possible geometries: Points and Polygons.\n\n- With most images, the Point geometry should be used, and it should indicate the longitude and latitude of the camera.\n\n- For top down images (ie from drones, cranes, etc), the Point geometry may be used to indicate the longitude and latitude of the centroid of the image content, and the Polygon geometry may be used to indicate the border of the image content. '","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/ImageNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Image":true}},"\/images\/{imageDbId}":{"definition":{"get":{"tags":["Images"],"summary":"Get the an image meta data summary","description":"Get one image meta data object\n\nImplementation Notes\n\n- ''imageURL'' should be a complete URL describing the location of the image. There is no BrAPI call for retrieving the image content, so it could be on a different path, or a different host.\n\n- ''descriptiveOntologyTerm'' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI''s.","parameters":[{"name":"imageDbId","in":"path","description":"The unique identifier for a image","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Images"],"summary":"Update an image meta data","description":"Update an image meta data object\n\nImplementation Notes\n\n- This call should be paired with 'PUT \/images\/{imageDbId}\/imagecontent' for full capability\n\n- A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n\n- Image data may be stored in a database or file system. Servers should generate and provide the \"imageURL\" as an absolute path for retrieving the image, wherever it happens to live. \n\n- 'descriptiveOntologyTerm' can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's. \n\n- The '\/images' calls support a GeoJSON object structure for describing their location. The BrAPI spec for GeoJSON only supports two of the possible geometries: Points and Polygons. \n\n- With most images, the Point geometry should be used, and it should indicate the longitude and latitude of the camera. \n\n- For top down images (ie from drones, cranes, etc), the Point geometry may be used to indicate the longitude and latitude of the centroid of the image content, and the Polygon geometry may be used to indicate the border of the image content.","parameters":[{"name":"imageDbId","in":"path","description":"The unique identifier for a image","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Image":true}},"\/images\/{imageDbId}\/imagecontent":{"definition":{"put":{"tags":["Images"],"summary":"Update an image with the image file content","description":"Update an image with the image file content\n\nImplementation Notes\n\n- This call should be paired with 'PUT \/images\/{imageDbId}' for full capability\n\n- A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n\n- Image data may be stored in a database or file system. Servers should generate and provide the \"imageURL\" for retrieving the image, wherever it happens to live.","parameters":[{"name":"imageDbId","in":"path","description":"The unique identifier for a image","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"image\/*":{"schema":{"type":"string","format":"binary"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Image":true}},"\/methods":{"definition":{"get":{"tags":["Methods"],"summary":"Get the Methods","description":"Returns a list of Methods available on a server.\n\nAn Observation Variable has 3 critical parts; A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.'","parameters":[{"name":"methodDbId","in":"query","description":"The unique identifier for a method","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationVariableDbId","in":"query","description":"The unique identifier for an observation variable","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MethodListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Methods"],"summary":"Add new Methods","description":"Create new method objects in the database","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/MethodNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MethodListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Method":true}},"\/methods\/{methodDbId}":{"definition":{"get":{"tags":["Methods"],"summary":"Get the details for a specific Method","description":"Retrieve details about a specific method\n\nAn Observation Variable has 3 critical parts; A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.","parameters":[{"name":"methodDbId","in":"path","description":"Id of the method to retrieve details of.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MethodSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Methods"],"summary":"Update an existing Method","description":"Update the details of an existing method","parameters":[{"name":"methodDbId","in":"path","description":"Id of the method to retrieve details of.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MethodNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MethodSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Method":true}},"\/observationlevels":{"definition":{"get":{"tags":["Observation Units"],"summary":"Get the Observation Levels","description":"Call to retrieve the list of supported observation levels. \n\nObservation levels indicate the granularity level at which the measurements are taken. `levelName` defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6). \n\nThe values are used to supply the `observationLevel` parameter in the observation unit details call.\n      \nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Observation_Levels\">Observation Levels documentation<\/a>.","parameters":[{"name":"studyDbId","in":"query","description":"Filter by study DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"Filter by trial DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"Filter by program DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationLevelListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ObservationUnitHierarchyLevel":true}},"\/observations":{"definition":{"get":{"tags":["Observations"],"summary":"Get a filtered set of Observations","description":"Retrieve all observations where there are measurements for the given observation variables.\n\nobservationTimestamp should be ISO8601 format with timezone -> YYYY-MM-DDThh:mm:ss+hhmm","parameters":[{"name":"observationDbId","in":"query","description":"The unique ID of an Observation","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitDbId","in":"query","description":"The unique ID of an Observation Unit","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"The unique ID of a germplasm (accession) to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationVariableDbId","in":"query","description":"The unique ID of an observation variable","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"The unique ID of a studies to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"locationDbId","in":"query","description":"The unique ID of a location where these observations were collected","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"The unique ID of a trial to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"The unique ID of a program to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"seasonDbId","in":"query","description":"The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitLevelName","in":"query","description":"The Observation Unit Level. Returns only the observation unit of the specified Level. References ObservationUnit->observationUnitPosition->observationLevel->levelName","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitLevelOrder","in":"query","description":"The Observation Unit Level Order Number. Returns only the observation unit of the specified Level. References ObservationUnit->observationUnitPosition->observationLevel->levelOrder","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitLevelCode","in":"query","description":"The Observation Unit Level Code. This parameter should be used together with `observationUnitLevelName` or `observationUnitLevelOrder`. References ObservationUnit->observationUnitPosition->observationLevel->levelCode","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationTimeStampRangeStart","in":"query","description":"Timestamp range start","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time"}},{"name":"observationTimeStampRangeEnd","in":"query","description":"Timestamp range end","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Observations"],"summary":"Update multiple Observation entities","description":"Update multiple Observation entities simultaneously with a single call\n\nInclude as many `observationDbIds` in the request as needed.\n\nNote - In strictly typed languages, this structure can be represented as a Map or Dictionary of objects and parsed directly from JSON.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"object","additionalProperties":{"$ref":"#\/components\/schemas\/ObservationNewRequest"},"example":{"<observationDbId_1>":{"additionalInfo":[],"collector":"917d3ae0","externalReferences":[{"referenceID":"75a50e76","referenceSource":"Remote Data Collection Upload Tool"}],"germplasmDbId":"2408ab11","germplasmName":"A0000003","observationTimeStamp":"2020-08-12T18:10:40.413Z","observationUnitDbId":"598111d4","observationUnitName":"Plot 1","observationVariableDbId":"c403d107","observationVariableName":"Plant Height in meters","season":{"season":"Spring","seasonDbId":"Spring_2018","year":2018},"studyDbId":"ef2829db","uploadedBy":"a2f7f60b","value":"2.3"},"<observationDbId_2>":{"additionalInfo":[],"collector":"03ba8c2c","externalReferences":[{"referenceID":"75a50e76","referenceSource":"Remote Data Collection Upload Tool"}],"germplasmDbId":"69310ca4","germplasmName":"A0000438","observationTimeStamp":"2020-08-12T18:10:40.413Z","observationUnitDbId":"1177a714","observationUnitName":"Plot 13","observationVariableDbId":"e4f8ba8c","observationVariableName":"Carotenoid","season":{"season":"Spring","seasonDbId":"Spring_2018","year":2018},"studyDbId":"6f9e267d","uploadedBy":"182c72ad","value":"2.5"}}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"post":{"tags":["Observations"],"summary":"Add new Observation entities","description":"Add new Observation entities","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/ObservationNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Observation":true}},"\/observations\/table":{"definition":{"get":{"tags":["Observations"],"summary":"Get a list of Observations in a table format","description":"<p>This service is designed to retrieve a table of time dependant observation values as a matrix of Observation Units and Observation Variables.\nThis is also sometimes called a Time Series. This service takes the \"Sparse Table\" approach for representing this time dependant data.<\/p>\n<p>The table may be represented by JSON, CSV, or TSV. The \"Accept\" HTTP header is used for the client to request different return formats. \nBy default, if the \"Accept\" header is not included in the request, the server should return JSON as described below.<\/p>\n<p>The table is REQUIRED to have the following columns<\/p>\n<ul>\n  <li>observationUnitDbId - Each row is related to one Observation Unit<\/li>\n  <li>observationTimeStamp - Each row is has a time stamp for when the observation was taken<\/li>\n  <li>At least one column with an observationVariableDbId<\/li>\n<\/ul>\n<p>The table may have any or all of the following OPTIONAL columns. Included columns are decided by the server developer<\/p>\n<ul>\n  <li>observationUnitName<\/li>\n  <li>studyDbId<\/li>\n  <li>studyName<\/li>\n  <li>germplasmDbId<\/li>\n  <li>germplasmName<\/li>\n  <li>positionCoordinateX<\/li>\n  <li>positionCoordinateY<\/li>\n  <li>year<\/li>\n<\/ul>\n<p>The table also may have any number of Observation Unit Hierarchy Level columns. For example:<\/p>\n<ul>\n  <li>field<\/li>\n  <li>plot<\/li>\n  <li>sub-plot<\/li>\n  <li>plant<\/li>\n  <li>pot<\/li>\n  <li>block<\/li>\n  <li>entry<\/li>\n  <li>rep<\/li>\n<\/ul>\n<p>The JSON representation provides a pair of extra arrays for defining the headers of the table. \nThe first array \"headerRow\" will always contain \"observationUnitDbId\" and any or all of the OPTIONAL column header names. \nThe second array \"observationVariables\" contains the names and DbIds for the Observation Variables represented in the table. \nBy appending the two arrays, you can construct the complete header row of the table. <\/p>\n<p>For CSV and TSV representations of the table, an extra header row is needed to describe both the Observation Variable DbId and the Observation Variable Name for each data column. \nSee the example responses below<\/p> ","parameters":[{"name":"observationUnitDbId","in":"query","description":"The unique ID of an Observation Unit","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"The unique ID of a germplasm (accession) to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationVariableDbId","in":"query","description":"The unique ID of an observation variable","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"The unique ID of a studies to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"locationDbId","in":"query","description":"The unique ID of a location where these observations were collected","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"The unique ID of a trial to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"The unique ID of a program to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"seasonDbId","in":"query","description":"The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationLevel","in":"query","description":"The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"searchResultsDbId","in":"query","description":"Permanent unique identifier which references the search results","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationTimeStampRangeStart","in":"query","description":"Timestamp range start","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time"}},{"name":"observationTimeStampRangeEnd","in":"query","description":"Timestamp range end","required":false,"style":"form","explode":true,"schema":{"type":"string","format":"date-time"}},{"name":"Accept","in":"header","description":"The requested content type which should be returned by the server","required":true,"style":"simple","explode":false,"schema":{"$ref":"#\/components\/schemas\/WSMIMEDataTypes"},"example":"application\/json"},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationTableResponse"}},"text\/csv":{"schema":{"type":"string"},"example":"\"observationUnitDbId\",\"observationUnitName\",\"studyDbId\",\"studyName\",\"germplasmDbId\",\"germplasmName\",\"positionCoordinateX\",\"positionCoordinateY\",\"year\",\"field\",\"plot\",\"sub-plot\",\"plant\",\"pot\",\"block\",\"entry\",\"rep\",\"f959a77d\",\"8341dee0\",\"84c9fd86\",\"93d80c95\"\n\n\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Plant height\",\"Carotenoid\",\"Root color\",\"Virus severity\"\n      \n\"2019-09-10T18:13:27.223Z\",\"f3a8a3db\",\"Plant Alpha\",  \"0fe3e48b\",\"2017 Plant Study\",\"06307ec0\",\"A0043001\",\"76.50106681\",\"42.44409301\",\"2017\",\"Field_1\",\"Plot_11\",\"SubPlot_111\",\"Plant_1111\",\"Pot_1111\",\"Block_11\",\"Entry_11\",\"Rep_11\",\"25.3\",\"\", \"\",\"\"\n\n\"2019-09-10T18:14:27.223Z\",\"f3a8a3db\",\"Plant Alpha\",  \"0fe3e48b\",\"2017 Plant Study\",\"06307ec0\",\"A0043001\",\"76.50106681\",\"42.44409301\",\"2017\",\"Field_1\",\"Plot_11\",\"SubPlot_111\",\"Plant_1111\",\"Pot_1111\",\"Block_11\",\"Entry_11\",\"Rep_11\",\"\",    \"3\",\"\",\"\"\n\n\"2019-09-10T18:15:54.868Z\",\"05d1b011\",\"Plant Beta\",   \"0fe3e48b\",\"2017 Plant Study\",\"59d435cd\",\"A0043002\",\"76.50106683\",\"42.44409301\",\"2017\",\"Field_1\",\"Plot_11\",\"SubPlot_112\",\"Plant_1122\",\"Pot_1122\",\"Block_11\",\"Entry_11\",\"Rep_12\",\"27.9\",\"\", \"\",\"\"\n\n\"2019-09-10T18:16:54.868Z\",\"05d1b011\",\"Plant Beta\",   \"0fe3e48b\",\"2017 Plant Study\",\"59d435cd\",\"A0043002\",\"76.50106683\",\"42.44409301\",\"2017\",\"Field_1\",\"Plot_11\",\"SubPlot_112\",\"Plant_1122\",\"Pot_1122\",\"Block_11\",\"Entry_11\",\"Rep_12\",\"\",    \"1\",\"\",\"\"\n\n\"2019-09-10T18:17:34.433Z\",\"67e2d87c\",\"Plant Gamma\",  \"0fe3e48b\",\"2017 Plant Study\",\"06307ec0\",\"A0043001\",\"76.50106681\",\"42.44409356\",\"2017\",\"Field_1\",\"Plot_12\",\"SubPlot_123\",\"Plant_1233\",\"Pot_1233\",\"Block_12\",\"Entry_12\",\"Rep_11\",\"\",    \"3\",\"\",\"\"\n\n\"2019-09-10T18:18:34.433Z\",\"67e2d87c\",\"Plant Gamma\",  \"0fe3e48b\",\"2017 Plant Study\",\"06307ec0\",\"A0043001\",\"76.50106681\",\"42.44409356\",\"2017\",\"Field_1\",\"Plot_12\",\"SubPlot_123\",\"Plant_1233\",\"Pot_1233\",\"Block_12\",\"Entry_12\",\"Rep_11\",\"25.5\",\"\", \"\",\"\"\n\n\"2019-09-10T18:19:15.629Z\",\"d98d0d4c\",\"Plant Epsilon\",\"0fe3e48b\",\"2017 Plant Study\",\"59d435cd\",\"A0043002\",\"76.50106683\",\"42.44409356\",\"2017\",\"Field_1\",\"Plot_12\",\"SubPlot_124\",\"Plant_1244\",\"Pot_1244\",\"Block_12\",\"Entry_12\",\"Rep_12\",\"28.9\",\"\", \"\",\"\"\n\n\"2019-09-10T18:20:15.629Z\",\"d98d0d4c\",\"Plant Epsilon\",\"0fe3e48b\",\"2017 Plant Study\",\"59d435cd\",\"A0043002\",\"76.50106683\",\"42.44409356\",\"2017\",\"Field_1\",\"Plot_12\",\"SubPlot_124\",\"Plant_1244\",\"Pot_1244\",\"Block_12\",\"Entry_12\",\"Rep_12\",\"\",    \"0\",\"\",\"\""},"text\/tsv":{"schema":{"type":"string"},"example":"\"observationUnitDbId\"\\t\"observationUnitName\"\\t\"studyDbId\"\\t\"studyName\"\\t\"germplasmDbId\"\\t\"germplasmName\"\\t\"positionCoordinateX\"\\t\"positionCoordinateY\"\\t\"year\"\\t\"field\"\\t\"plot\"\\t\"sub-plot\"\\t\"plant\"\\t\"pot\"\\t\"block\"\\t\"entry\"\\t\"rep\"\\t\"f959a77d\"\\t\"8341dee0\"\\t\"84c9fd86\"\\t\"93d80c95\"\n\n\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"Plant height\"\\t\"Carotenoid\"\\t\"Root color\"\\t\"Virus severity\"\n      \n\"2019-09-10T18:13:27.223Z\"\\t\"f3a8a3db\"\\t\"Plant Alpha\"\\t  \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"06307ec0\"\\t\"A0043001\"\\t\"76.50106681\"\\t\"42.44409301\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_11\"\\t\"SubPlot_111\"\\t\"Plant_1111\"\\t\"Pot_1111\"\\t\"Block_11\"\\t\"Entry_11\"\\t\"Rep_11\"\\t\"25.3\"\\t\"\"\\t \"\"\\t\"\"\n\n\"2019-09-10T18:14:27.223Z\"\\t\"f3a8a3db\"\\t\"Plant Alpha\"\\t  \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"06307ec0\"\\t\"A0043001\"\\t\"76.50106681\"\\t\"42.44409301\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_11\"\\t\"SubPlot_111\"\\t\"Plant_1111\"\\t\"Pot_1111\"\\t\"Block_11\"\\t\"Entry_11\"\\t\"Rep_11\"\\t\"\"\\t    \"3\"\\t\"\"\\t\"\"\n\n\"2019-09-10T18:15:54.868Z\"\\t\"05d1b011\"\\t\"Plant Beta\"\\t   \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"59d435cd\"\\t\"A0043002\"\\t\"76.50106683\"\\t\"42.44409301\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_11\"\\t\"SubPlot_112\"\\t\"Plant_1122\"\\t\"Pot_1122\"\\t\"Block_11\"\\t\"Entry_11\"\\t\"Rep_12\"\\t\"27.9\"\\t\"\"\\t \"\"\\t\"\"\n\n\"2019-09-10T18:16:54.868Z\"\\t\"05d1b011\"\\t\"Plant Beta\"\\t   \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"59d435cd\"\\t\"A0043002\"\\t\"76.50106683\"\\t\"42.44409301\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_11\"\\t\"SubPlot_112\"\\t\"Plant_1122\"\\t\"Pot_1122\"\\t\"Block_11\"\\t\"Entry_11\"\\t\"Rep_12\"\\t\"\"\\t    \"1\"\\t\"\"\\t\"\"\n\n\"2019-09-10T18:17:34.433Z\"\\t\"67e2d87c\"\\t\"Plant Gamma\"\\t  \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"06307ec0\"\\t\"A0043001\"\\t\"76.50106681\"\\t\"42.44409356\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_12\"\\t\"SubPlot_123\"\\t\"Plant_1233\"\\t\"Pot_1233\"\\t\"Block_12\"\\t\"Entry_12\"\\t\"Rep_11\"\\t\"\"\\t    \"3\"\\t\"\"\\t\"\"\n\n\"2019-09-10T18:18:34.433Z\"\\t\"67e2d87c\"\\t\"Plant Gamma\"\\t  \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"06307ec0\"\\t\"A0043001\"\\t\"76.50106681\"\\t\"42.44409356\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_12\"\\t\"SubPlot_123\"\\t\"Plant_1233\"\\t\"Pot_1233\"\\t\"Block_12\"\\t\"Entry_12\"\\t\"Rep_11\"\\t\"25.5\"\\t\"\"\\t \"\"\\t\"\"\n\n\"2019-09-10T18:19:15.629Z\"\\t\"d98d0d4c\"\\t\"Plant Epsilon\"\\t\"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"59d435cd\"\\t\"A0043002\"\\t\"76.50106683\"\\t\"42.44409356\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_12\"\\t\"SubPlot_124\"\\t\"Plant_1244\"\\t\"Pot_1244\"\\t\"Block_12\"\\t\"Entry_12\"\\t\"Rep_12\"\\t\"28.9\"\\t\"\"\\t \"\"\\t\"\"\n\n\"2019-09-10T18:20:15.629Z\"\\t\"d98d0d4c\"\\t\"Plant Epsilon\"\\t\"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"59d435cd\"\\t\"A0043002\"\\t\"76.50106683\"\\t\"42.44409356\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_12\"\\t\"SubPlot_124\"\\t\"Plant_1244\"\\t\"Pot_1244\"\\t\"Block_12\"\\t\"Entry_12\"\\t\"Rep_12\"\\t\"\"\\t    \"0\"\\t\"\"\\t\"\""}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"WSMIMEDataTypes":true,"ObservationTable":true}},"\/observations\/{observationDbId}":{"definition":{"get":{"tags":["Observations"],"summary":"Get the details of a specific Observations","description":"Get the details of a specific Observations\n\nobservationTimestamp should be ISO8601 format with timezone -> YYYY-MM-DDThh:mm:ss+hhmm","parameters":[{"name":"observationDbId","in":"path","description":"The unique ID of an observation","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Observations"],"summary":"Update an existing Observation","description":"Update an existing Observation","parameters":[{"name":"observationDbId","in":"path","description":"The unique ID of an observation","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Observation":true}},"\/observationunits":{"definition":{"get":{"tags":["Observation Units"],"summary":"Get a filtered set of Observation Units","description":"Get a filtered set of Observation Units","parameters":[{"name":"observationUnitDbId","in":"query","description":"The unique ID of an Observation Unit","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"The unique ID of a germplasm (accession) to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"The unique ID of a studies to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"locationDbId","in":"query","description":"The unique ID of a location where these observations were collected","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"The unique ID of a trial to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"The unique ID of a program to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"seasonDbId","in":"query","description":"The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitLevelName","in":"query","description":"The Observation Unit Level. Returns only the observation unit of the specified Level. References ObservationUnit->observationUnitPosition->observationLevel->levelName","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitLevelOrder","in":"query","description":"The Observation Unit Level Order Number. Returns only the observation unit of the specified Level. References ObservationUnit->observationUnitPosition->observationLevel->levelOrder","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitLevelCode","in":"query","description":"The Observation Unit Level Code. This parameter should be used together with `observationUnitLevelName` or `observationUnitLevelOrder`. References ObservationUnit->observationUnitPosition->observationLevel->levelCode","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"includeObservations","in":"query","description":"Use this parameter to include a list of observations embedded in each ObservationUnit object. \n\nCAUTION - Use this parameter at your own risk. It may return large, unpaginated lists of observation data. Only set this value to True if you are sure you need to.","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Observation Units"],"summary":"Update a set of Observation Units","description":"Update a set of Observation Units\n\nNote - In strictly typed languages, this structure can be represented as a Map or Dictionary of objects and parsed directly to JSON.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"object","additionalProperties":{"$ref":"#\/components\/schemas\/ObservationUnitNewRequest"},"example":{"<observationUnitDbId_1>":{"additionalInfo":[],"externalReferences":[{"referenceID":"doi:10.155454\/12341234","referenceSource":"DOI"}],"germplasmDbId":"e9d9ed57","germplasmName":"A0000001","locationDbId":"0e208b20","locationName":"Field Station Alpha","observationUnitName":"Plot 31","observationUnitPUI":"http:\/\/pui.per\/plot\/1a9afc14","observationUnitPosition":{"entryType":"TEST","geoCoordinates":{"geometry":{"coordinates":[-76.506042,42.417373,123],"type":"Point"},"type":"Feature"},"observationLevel":{"levelCode":"Plot_456","levelName":"plot","levelOrder":2},"observationLevelRelationships":[{"levelCode":"Field_1","levelName":"field","levelOrder":0},{"levelCode":"Block_6","levelName":"block","levelOrder":1},{"levelCode":"Plot_456","levelName":"plot","levelOrder":2}],"positionCoordinateX":"78","positionCoordinateXType":"GRID_COL","positionCoordinateY":8,"positionCoordinateYType":"GRID_ROW"},"programDbId":"2d763a7a","programName":"The Perfect Breeding Program","seedLotDbId":"261ecb09","studyDbId":"9865addc","studyName":"Purple_Tomato_1","treatments":[{"factor":"fertilizer","modality":"low fertilizer"}],"trialDbId":"776a609c","trialName":"Purple Tomato"},"<observationUnitDbId_2>":{"additionalInfo":[],"externalReferences":[{"referenceID":"doi:10.155454\/12341234","referenceSource":"DOI"}],"germplasmDbId":"e9d9ed57","germplasmName":"A0000001","locationDbId":"0e208b20","locationName":"Field Station Alpha","observationUnitName":"Plot 17","observationUnitPUI":"http:\/\/pui.per\/plot\/1a9afc14","observationUnitPosition":{"entryType":"TEST","geoCoordinates":{"geometry":{"coordinates":[-76.506042,42.417373,123],"type":"Point"},"type":"Feature"},"observationLevel":{"levelCode":"Plot_123","levelName":"plot","levelOrder":2},"observationLevelRelationships":[{"levelCode":"Field_1","levelName":"field","levelOrder":0},{"levelCode":"Block_12","levelName":"block","levelOrder":1},{"levelCode":"Plot_123","levelName":"plot","levelOrder":2}],"positionCoordinateX":"74","positionCoordinateXType":"GRID_COL","positionCoordinateY":"03","positionCoordinateYType":"GRID_ROW"},"programDbId":"2d763a7a","programName":"The Perfect Breeding Program","seedLotDbId":"261ecb09","studyDbId":"9865addc","studyName":"Purple_Tomato_1","treatments":[{"factor":"fertilizer","modality":"low fertilizer"}],"trialDbId":"776a609c","trialName":"Purple Tomato"}}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Observation Units"],"summary":"Add new Observation Units","description":"Add new Observation Units","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/ObservationUnitNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ObservationUnit":true}},"\/observationunits\/table":{"definition":{"get":{"tags":["Observation Units"],"summary":"Get a list of Observations in a table format","description":"<p>This service is designed to retrieve a table for observation values as a matrix of Observation Units and Observation Variables.<\/p>\n<p>The table may be represented by JSON, CSV, or TSV. The \"Accept\" HTTP header is used for the client to request different return formats. \nBy default, if the \"Accept\" header is not included in the request, the server should return JSON as described below.<\/p>\n<p>The table is REQUIRED to have the following columns<\/p>\n<ul>\n  <li>observationUnitDbId - Each row is related to one Observation Unit<\/li>\n  <li>At least one column with an observationVariableDbId<\/li>\n<\/ul>\n<p>The table may have any or all of the following OPTIONAL columns. Included columns are decided by the server developer<\/p>\n<ul>\n  <li>observationUnitName<\/li>\n  <li>studyDbId<\/li>\n  <li>studyName<\/li>\n  <li>germplasmDbId<\/li>\n  <li>germplasmName<\/li>\n  <li>positionCoordinateX<\/li>\n  <li>positionCoordinateY<\/li>\n  <li>year<\/li>\n<\/ul>\n<p>The table also may have any number of Observation Unit Hierarchy Level columns. For example:<\/p>\n<ul>\n  <li>field<\/li>\n  <li>plot<\/li>\n  <li>sub-plot<\/li>\n  <li>plant<\/li>\n  <li>pot<\/li>\n  <li>block<\/li>\n  <li>entry<\/li>\n  <li>rep<\/li>\n<\/ul>\n<p>The JSON representation provides a pair of extra arrays for defining the headers of the table. \nThe first array \"headerRow\" will always contain \"observationUnitDbId\" and any or all of the OPTIONAL column header names. \nThe second array \"observationVariables\" contains the names and DbIds for the Observation Variables represented in the table. \nBy appending the two arrays, you can construct the complete header row of the table. <\/p>\n<p>For CSV and TSV representations of the table, an extra header row is needed to describe both the Observation Variable DbId and the Observation Variable Name for each data column. \nSee the example responses below<\/p> ","parameters":[{"name":"observationUnitDbId","in":"query","description":"The unique ID of an Observation Unit","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"The unique ID of a germplasm (accession) to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationVariableDbId","in":"query","description":"The unique ID of an observation variable","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"The unique ID of a studies to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"locationDbId","in":"query","description":"The unique ID of a location where these observations were collected","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"The unique ID of a trial to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"The unique ID of a program to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"seasonDbId","in":"query","description":"The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationLevel","in":"query","description":"The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"Accept","in":"header","description":"The requested content type which should be returned by the server","required":true,"style":"simple","explode":false,"schema":{"$ref":"#\/components\/schemas\/WSMIMEDataTypes"},"example":"application\/json"},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitTableResponse"}},"text\/csv":{"schema":{"type":"string"},"example":"\"observationUnitDbId\",\"observationUnitName\",\"studyDbId\",\"studyName\",\"germplasmDbId\",\"germplasmName\",\"positionCoordinateX\",\"positionCoordinateY\",\"year\",\"field\",\"plot\",\"sub-plot\",\"plant\",\"pot\",\"block\",\"entry\",\"rep\",\"f959a77d\",\"8341dee0\",\"84c9fd86\"\n\n\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Plant Height\",\"Virus severity\",\"Carotenoid\"\n\n\"f3a8a3db\",\"Plant Alpha\",  \"0fe3e48b\",\"2017 Plant Study\",\"06307ec0\",\"A0043001\",\"76.50106681\",\"42.44409301\",\"2017\",\"Field_1\",\"Plot_11\",\"SubPlot_111\",\"Plant_1111\",\"Pot_1111\",\"Block_11\",\"Entry_11\",\"Rep_11\",\"25.3\",\"3\",\"50.75\"\n\n\"05d1b011\",\"Plant Beta\",   \"0fe3e48b\",\"2017 Plant Study\",\"59d435cd\",\"A0043002\",\"76.50106683\",\"42.44409301\",\"2017\",\"Field_1\",\"Plot_11\",\"SubPlot_112\",\"Plant_1122\",\"Pot_1122\",\"Block_11\",\"Entry_11\",\"Rep_12\",\"27.9\",\"1\",\"45.345\"\n\n\"67e2d87c\",\"Plant Gamma\",  \"0fe3e48b\",\"2017 Plant Study\",\"06307ec0\",\"A0043001\",\"76.50106681\",\"42.44409356\",\"2017\",\"Field_1\",\"Plot_12\",\"SubPlot_123\",\"Plant_1233\",\"Pot_1233\",\"Block_12\",\"Entry_12\",\"Rep_11\",\"25.5\",\"3\",\"50.76\"\n\n\"d98d0d4c\",\"Plant Epsilon\",\"0fe3e48b\",\"2017 Plant Study\",\"59d435cd\",\"A0043002\",\"76.50106683\",\"42.44409356\",\"2017\",\"Field_1\",\"Plot_12\",\"SubPlot_124\",\"Plant_1244\",\"Pot_1244\",\"Block_12\",\"Entry_12\",\"Rep_12\",\"28.9\",\"0\",\"46.5\""},"text\/tsv":{"schema":{"type":"string"},"example":"\"observationUnitDbId\"\\t\"observationUnitName\"\\t\"studyDbId\"\\t\"studyName\"\\t\"germplasmDbId\"\\t\"germplasmName\"\\t\"positionCoordinateX\"\\t\"positionCoordinateY\"\\t\"year\"\\t\"field\"\\t\"plot\"\\t\"sub-plot\"\\t\"plant\"\\t\"pot\"\\t\"block\"\\t\"entry\"\\t\"rep\"\\t\"f959a77d\"\\t\"8341dee0\"\\t\"84c9fd86\"\n\n\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"\"\\t\"Plant Height\"\\t\"Virus severity\"\\t\"Carotenoid\"\n\n\"f3a8a3db\"\\t\"Plant Alpha\"\\t  \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"06307ec0\"\\t\"A0043001\"\\t\"76.50106681\"\\t\"42.44409301\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_11\"\\t\"SubPlot_111\"\\t\"Plant_1111\"\\t\"Pot_1111\"\\t\"Block_11\"\\t\"Entry_11\"\\t\"Rep_11\"\\t\"25.3\"\\t\"3\"\\t\"50.75\"\n\n\"05d1b011\"\\t\"Plant Beta\"\\t   \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"59d435cd\"\\t\"A0043002\"\\t\"76.50106683\"\\t\"42.44409301\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_11\"\\t\"SubPlot_112\"\\t\"Plant_1122\"\\t\"Pot_1122\"\\t\"Block_11\"\\t\"Entry_11\"\\t\"Rep_12\"\\t\"27.9\"\\t\"1\"\\t\"45.345\"\n\n\"67e2d87c\"\\t\"Plant Gamma\"\\t  \"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"06307ec0\"\\t\"A0043001\"\\t\"76.50106681\"\\t\"42.44409356\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_12\"\\t\"SubPlot_123\"\\t\"Plant_1233\"\\t\"Pot_1233\"\\t\"Block_12\"\\t\"Entry_12\"\\t\"Rep_11\"\\t\"25.5\"\\t\"3\"\\t\"50.76\"\n\n\"d98d0d4c\"\\t\"Plant Epsilon\"\\t\"0fe3e48b\"\\t\"2017 Plant Study\"\\t\"59d435cd\"\\t\"A0043002\"\\t\"76.50106683\"\\t\"42.44409356\"\\t\"2017\"\\t\"Field_1\"\\t\"Plot_12\"\\t\"SubPlot_124\"\\t\"Plant_1244\"\\t\"Pot_1244\"\\t\"Block_12\"\\t\"Entry_12\"\\t\"Rep_12\"\\t\"28.9\"\\t\"0\"\\t\"46.5\""}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"WSMIMEDataTypes":true,"ObservationUnitTable":true}},"\/observationunits\/{observationUnitDbId}":{"definition":{"get":{"tags":["Observation Units"],"summary":"Get the details of a specific Observation Unit","description":"Get the details of a specific Observation Unit","parameters":[{"name":"observationUnitDbId","in":"path","description":"The unique ID of the specific Observation Unit","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Observation Units"],"summary":"Update an existing Observation Units","description":"Update an existing Observation Units","parameters":[{"name":"observationUnitDbId","in":"path","description":"The unique ID of the specific Observation Unit","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ObservationUnit":true}},"\/ontologies":{"definition":{"get":{"tags":["Ontologies"],"summary":"Get the Ontologies","description":"Call to retrieve a list of observation variable ontologies available in the system.","parameters":[{"name":"ontologyDbId","in":"query","description":"The unique identifier for an ontology definition","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/OntologyListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Ontology":true}},"\/scales":{"definition":{"get":{"tags":["Scales"],"summary":"Get the Scales","description":"Returns a list of Scales available on a server.\n\nAn Observation Variable has 3 critical parts; A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.","parameters":[{"name":"scaleDbId","in":"query","description":"The unique identifier for a scale","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationVariableDbId","in":"query","description":"The unique identifier for an observation variable","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ScaleListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Scales"],"summary":"Add new Scales","description":"Create new scale objects in the database","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/ScaleNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ScaleListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Scale":true}},"\/scales\/{scaleDbId}":{"definition":{"get":{"tags":["Scales"],"summary":"Get the details of a specific Scale","description":"Retrieve details about a specific scale\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.","parameters":[{"name":"scaleDbId","in":"path","description":"Id of the scale to retrieve details of.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ScaleSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Scales"],"summary":"Update an existing Scale","description":"Update the details of an existing scale","parameters":[{"name":"scaleDbId","in":"path","description":"Id of the scale to retrieve details of.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ScaleNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ScaleSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Scale":true}},"\/search\/images":{"definition":{"post":{"tags":["Images"],"summary":"Submit a search request for `XXEntitiesXX`","description":"Submit a search request for `XXEntitiesXX`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/XXEntitiesXX\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.\n<br\/>\n<br\/>\nImage Implementation Notes<br\/>\n- `imageURL` should be a complete URL describing the location of the image. There is no BrAPI call for retrieving the image content, so it could be on a different path, or a different host.<br\/>\n- `descriptiveOntologyTerm` can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.<br\/>","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Image":true}},"\/search\/images\/{searchResultsDbId}":{"definition":{"get":{"tags":["Images"],"summary":"Get the results of a `Images` search request","description":"Get the results of a `Images` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/images` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.\n<br\/>\n<br\/>\nImage Implementation Notes<br\/>\n- `imageURL` should be a complete URL describing the location of the image. There is no BrAPI call for retrieving the image content, so it could be on a different path, or a different host.<br\/>\n- `descriptiveOntologyTerm` can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.<br\/>","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ImageListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Image":true}},"\/search\/observations":{"definition":{"post":{"tags":["Observations"],"summary":"Submit a search request for `Observations`","description":"Submit a search request for `Observations`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/observations\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Observation":true}},"\/search\/observations\/{searchResultsDbId}":{"definition":{"get":{"tags":["Observations"],"summary":"Get the results of a `Observations` search request","description":"Get the results of a `Observations` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/observations` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Accept","in":"header","description":"The requested content type which should be returned by the server","required":true,"style":"simple","explode":false,"schema":{"$ref":"#\/components\/schemas\/WSMIMEDataTypes"},"example":"application\/json"},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"},{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"WSMIMEDataTypes":true,"Observation":true}},"\/search\/observationunits":{"definition":{"post":{"tags":["Observation Units"],"summary":"Submit a search request for `ObservationUnits`","description":"Submit a search request for `ObservationUnits`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/observationunits\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ObservationUnit":true}},"\/search\/observationunits\/{searchResultsDbId}":{"definition":{"get":{"tags":["Observation Units"],"summary":"Get the results of a `ObservationUnits` search request","description":"Get the results of a `ObservationUnits` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/observationunits` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationUnitListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"ObservationUnit":true}},"\/search\/variables":{"definition":{"post":{"tags":["Observation Variables"],"summary":"Submit a search request for Observation `Variables`","description":"Submit a search request for Observation `Variables`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/variables\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ObservationVariable":true}},"\/search\/variables\/{searchResultsDbId}":{"definition":{"get":{"tags":["Observation Variables"],"summary":"Get the results of a Observation `variables` search request","description":"Get the results of a Observation `variables` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/variables` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"ObservationVariable":true}},"\/traits":{"definition":{"get":{"tags":["Traits"],"summary":"Get the Traits","description":"Call to retrieve a list of traits available in the system and their associated variables.\n\nAn Observation Variable has 3 critical parts; A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.'","parameters":[{"name":"traitDbId","in":"query","description":"The unique identifier for a trait","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationVariableDbId","in":"query","description":"The unique identifier for an observation variable","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TraitListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Traits"],"summary":"Add new Traits","description":"Create new trait objects in the database","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/TraitNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TraitListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Trait":true}},"\/traits\/{traitDbId}":{"definition":{"get":{"tags":["Traits"],"summary":"Get the details of a specific Trait","description":"Retrieve the details of a single trait\n\nAn Observation Variable has 3 critical parts: A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.","parameters":[{"name":"traitDbId","in":"path","description":"Id of the trait to retrieve details of.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TraitSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Traits"],"summary":"Update an existing Trait","description":"Update an existing trait","parameters":[{"name":"traitDbId","in":"path","description":"Id of the trait to retrieve details of.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TraitNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/TraitSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Trait":true}},"\/variables":{"definition":{"get":{"tags":["Observation Variables"],"summary":"Get the Observation Variables","description":"Call to retrieve a list of observationVariables available in the system.","parameters":[{"name":"observationVariableDbId","in":"query","description":"Variable's unique ID","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"traitClass","in":"query","description":"Variable's trait class (phenological, physiological, morphological, etc.)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"The unique ID of a studies to filter on","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Observation Variables"],"summary":"Add new Observation Variables","description":"Add new Observation Variables to the system.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/ObservationVariableNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ObservationVariable":true}},"\/variables\/{observationVariableDbId}":{"definition":{"get":{"tags":["Observation Variables"],"summary":"Get the details for a specific Observation Variable","description":"Retrieve variable details","parameters":[{"name":"observationVariableDbId","in":"path","description":"string id of the variable","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Observation Variables"],"summary":"Update an existing Observation Variable","description":"Update an existing Observation Variable","parameters":[{"name":"observationVariableDbId","in":"path","description":"string id of the variable","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ObservationVariableSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"ObservationVariable":true}},"\/calls":{"definition":{"get":{"tags":["Calls"],"summary":"Gets a filtered list of `Calls`","description":"Gets a filtered list of `Call` JSON objects.\n\n** THIS ENDPOINT USES TOKEN BASED PAGING **","parameters":[{"name":"callSetDbId","in":"query","description":"The ID of the `CallSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantDbId","in":"query","description":"The ID of the `Variant` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantSetDbId","in":"query","description":"The ID of the `VariantSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"expandHomozygotes","in":"query","description":"Should homozygotes be expanded (true) or collapsed into a single occurrence (false)","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"unknownString","in":"query","description":"The string to use as a representation for missing data","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepPhased","in":"query","description":"The string to use as a separator for phased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepUnphased","in":"query","description":"The string to use as a separator for unphased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Call":true}},"\/callsets":{"definition":{"get":{"tags":["Call Sets"],"summary":"Gets a filtered list of `CallSet` JSON objects.","description":"Gets a filtered list of `CallSet` JSON objects.","parameters":[{"name":"callSetDbId","in":"query","description":"The ID of the `CallSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"callSetName","in":"query","description":"The human readable name of the `CallSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantSetDbId","in":"query","description":"The ID of the `VariantSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sampleDbId","in":"query","description":"The ID of the `VariantSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"Return only call sets generated from the Sample of this Germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallSetsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"CallSet":true}},"\/callsets\/{callSetDbId}":{"definition":{"get":{"tags":["Call Sets"],"summary":"Gets a `CallSet` by ID.","description":"Gets a `CallSet` by ID.","parameters":[{"name":"callSetDbId","in":"path","description":"The ID of the `CallSet` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/callSetResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"CallSet":true}},"\/callsets\/{callSetDbId}\/calls":{"definition":{"get":{"tags":["Call Sets"],"summary":"Gets a list of `Calls` associated with a `CallSet`.","description":"Gets a list of `Calls` associated with a `CallSet`.\n\n** THIS ENDPOINT USES TOKEN BASED PAGING **","parameters":[{"name":"callSetDbId","in":"path","description":"The ID of the `CallSet` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"expandHomozygotes","in":"query","description":"Should homozygotes be expanded (true) or collapsed into a single occurrence (false)","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"unknownString","in":"query","description":"The string to use as a representation for missing data","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepPhased","in":"query","description":"The string to use as a separator for phased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepUnphased","in":"query","description":"The string to use as a separator for unphased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Call":true}},"\/maps":{"definition":{"get":{"tags":["Genome Maps"],"summary":"Get the Genomic Maps","description":"Get list of maps","parameters":[{"name":"commonCropName","in":"query","description":"The common name of the crop","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"mapDbId","in":"query","description":"The primary DbId for this genomic map","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"mapPUI","in":"query","description":"The DOI or other permanent identifier for this genomic map","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"scientificName","in":"query","description":"Full scientific binomial format name. This includes Genus, Species, and Sub-species","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"type","in":"query","description":"Type of map","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"programDbId","in":"query","description":"Unique Id to filter by Program","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"trialDbId","in":"query","description":"Unique Id to filter by Trial","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"Unique Id to filter by Study","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GenomeMapListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GenomeMap":true}},"\/maps\/{mapDbId}":{"definition":{"get":{"tags":["Genome Maps"],"summary":"Get the details of a specific Genomic Map","description":"Provides the number of markers on each linkageGroup and the max position on the linkageGroup","parameters":[{"name":"mapDbId","in":"path","description":"The internal db id of a selected map","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GenomeMapSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"GenomeMap":true}},"\/maps\/{mapDbId}\/linkagegroups":{"definition":{"get":{"tags":["Genome Maps"],"summary":"Get the Linkage Groups of a specific Genomic Map","description":"Get the Linkage Groups of a specific Genomic Map. A Linkage Group is the BrAPI generic term for a named section of a map. A Linkage Group can represent a Chromosome, Scaffold, or Linkage Group.","parameters":[{"name":"mapDbId","in":"path","description":"The internal db id of a selected map","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/LinkageGroupListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"LinkageGroup":true}},"\/markerpositions":{"definition":{"get":{"tags":["Genome Maps"],"summary":"Get marker position info","description":"Get marker position information, based on Map, Linkage Group, and Marker ID","parameters":[{"name":"mapDbId","in":"query","description":"unique id of a map","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"linkageGroupName","in":"query","description":"The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantDbId","in":"query","description":"The unique id for a marker","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"minPosition","in":"query","description":"The minimum position","required":false,"style":"form","explode":true,"schema":{"type":"integer"}},{"name":"maxPosition","in":"query","description":"The maximum position","required":false,"style":"form","explode":true,"schema":{"type":"integer"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MarkerPositionListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"MarkerPosition":true}},"\/references":{"definition":{"get":{"tags":["References"],"summary":"Gets a filtered list of `Reference` objects.","description":"`GET \/references` will return a filtered list of `Reference` JSON objects.","parameters":[{"name":"referenceDbId","in":"query","description":"The ID of the `Reference` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"referenceSetDbId","in":"query","description":"The ID of the `ReferenceSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"accession","in":"query","description":"If set, return the reference sets for which the `accession` matches this string (case-sensitive, exact match).","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"md5checksum","in":"query","description":"If specified, return the references for which the `md5checksum` matches this string (case-sensitive, exact match).","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"isDerived","in":"query","description":"If the reference is derived from a source sequence","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"minLength","in":"query","description":"The minimum length of the reference sequences to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"integer"}},{"name":"maxLength","in":"query","description":"The maximum length of the reference sequences to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"integer"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferencesListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Reference":true}},"\/references\/{referenceDbId}":{"definition":{"get":{"tags":["References"],"summary":"Gets a `Reference` by ID.","description":"`GET \/references\/{reference_id}` will return a JSON version of\n`Reference`.","parameters":[{"name":"referenceDbId","in":"path","description":"The ID of the `Reference` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"A successful response.","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferenceSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Reference":true}},"\/references\/{referenceDbId}\/bases":{"definition":{"get":{"tags":["References"],"summary":"Lists `Reference` bases by ID and optional range.","description":"Lists `Reference` bases by ID and optional range.","parameters":[{"name":"referenceDbId","in":"path","description":"The ID of the `Reference` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"start","in":"query","description":"The start position (0-based) of this query. Defaults to 0.\nGenomic positions are non-negative integers less than reference length.\nRequests spanning the join of circular genomes are represented as\ntwo requests one on each side of the join (position 0).","required":false,"style":"form","explode":true,"schema":{"type":"integer"}},{"name":"end","in":"query","description":"The end position (0-based, exclusive) of this query. Defaults to the length of this `Reference`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"}},{"name":"pageToken","in":"query","description":"The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"A successful response.","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferenceBasesResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"ReferenceBases":true}},"\/referencesets":{"definition":{"get":{"tags":["Reference Sets"],"summary":"Gets a list of `ReferenceSets`.","description":"Gets a filtered list of `ReferenceSets`.","parameters":[{"name":"referenceSetDbId","in":"query","description":"The ID of the `ReferenceSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"accession","in":"query","description":"If set, return the reference sets for which the `accession` matches this string (case-sensitive, exact match).","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"assemblyPUI","in":"query","description":"If set, return the reference sets for which the `assemblyId` matches this string (case-sensitive, exact match).","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"md5checksum","in":"query","description":"If set, return the reference sets for which the `md5checksum` matches this string (case-sensitive, exact match).","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferenceSetsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ReferenceSet":true}},"\/referencesets\/{referenceSetDbId}":{"definition":{"get":{"tags":["Reference Sets"],"summary":"Gets a `ReferenceSet` by ID.","description":"Gets a `ReferenceSet` by ID.","parameters":[{"name":"referenceSetDbId","in":"path","description":"The ID of the `ReferenceSet` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"A successful response.","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferenceSetsSingleResponse"}}}}}}},"data_types":{"ReferenceSet":true}},"\/samples":{"definition":{"get":{"tags":["Samples"],"summary":"Get the Samples","description":"Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.","parameters":[{"name":"sampleDbId","in":"query","description":"the internal DB id for a sample","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"observationUnitDbId","in":"query","description":"the internal DB id for an observation unit where a sample was taken from","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"plateDbId","in":"query","description":"the internal DB id for a plate of samples","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"the internal DB id for a germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"Filter by study DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Samples"],"summary":"Add new Samples","description":"Call to register the event of a sample being taken. Sample ID is assigned as a result of the operation and returned in response.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/SampleNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Sample":true}},"\/samples\/{sampleDbId}":{"definition":{"get":{"tags":["Samples"],"summary":"Get the details of a specific Sample","description":"Used to retrieve the details of a single Sample from a Sample Tracking system.","parameters":[{"name":"sampleDbId","in":"path","description":"the internal DB id for a sample","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Samples"],"summary":"Update the details of an existing Sample","description":"Update the details of an existing Sample","parameters":[{"name":"sampleDbId","in":"path","description":"the internal DB id for a sample","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Sample":true}},"\/search\/calls":{"definition":{"post":{"tags":["Calls"],"summary":"Submit a search request for `Calls`","description":"Submit a search request for `Calls`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/calls\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details. \n<br\/>\n<br\/>\n<strong>NOTE:<\/strong> This endpoint uses Token based pagination. Please Review the \n<a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Pagination\">Pagination documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"description":"Study Search request","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallsSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Call":true}},"\/search\/calls\/{searchResultsDbId}":{"definition":{"get":{"tags":["Calls"],"summary":"Get the results of a `Calls` search request","description":"Get the results of a `Calls` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/calls` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.\n<br\/>\n<br\/>\n<strong>NOTE:<\/strong> This endpoint uses Token based pagination. Please Review the \n<a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Pagination\">Pagination documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Call":true}},"\/search\/callsets":{"definition":{"post":{"tags":["Call Sets"],"summary":"Submit a search request for `CallSets`","description":"Submit a search request for `CallSets`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/callsets\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"description":"Study Search request","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/callSetsSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallSetsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"CallSet":true}},"\/search\/callsets\/{searchResultsDbId}":{"definition":{"get":{"tags":["Call Sets"],"summary":"Get the results of a `CallSets` search request","description":"Get the results of a `CallSets` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/callsets` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallSetsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"CallSet":true}},"\/search\/markerpositions":{"definition":{"post":{"tags":["Genome Maps"],"summary":"Submit a search request for `MarkerPositions`","description":"Submit a search request for `MarkerPositions`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/markerpositions\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MarkerPositionSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MarkerPositionListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"MarkerPosition":true}},"\/search\/markerpositions\/{searchResultsDbId}":{"definition":{"get":{"tags":["Genome Maps"],"summary":"Get the results of a `MarkerPositions` search request","description":"Get the results of a `MarkerPositions` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/markerpositions` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/MarkerPositionListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"MarkerPosition":true}},"\/search\/references":{"definition":{"post":{"tags":["References"],"summary":"Submit a search request for `References`","description":"Submit a search request for `References`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/references\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"description":"References Search request","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferencesSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferencesListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Reference":true}},"\/search\/references\/{searchResultsDbId}":{"definition":{"get":{"tags":["References"],"summary":"Get the results of a `References` search request","description":"Get the results of a `References` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/references` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferencesListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Reference":true}},"\/search\/referencesets":{"definition":{"post":{"tags":["Reference Sets"],"summary":"Submit a search request for `ReferenceSets`","description":"Submit a search request for `ReferenceSets`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/referencesets\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferenceSetsSearchRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferenceSetsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ReferenceSet":true}},"\/search\/referencesets\/{searchResultsDbId}":{"definition":{"get":{"tags":["Reference Sets"],"summary":"Get the results of a `ReferenceSets` search request","description":"Get the results of a `ReferenceSets` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/referencesets` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/ReferenceSetsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"ReferenceSet":true}},"\/search\/samples":{"definition":{"post":{"tags":["Samples"],"summary":"Submit a search request for `Samples`","description":"Submit a search request for `Samples`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/samples\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Sample":true}},"\/search\/samples\/{searchResultsDbId}":{"definition":{"get":{"tags":["Samples"],"summary":"Get the results of a `Samples` search request","description":"Get the results of a `Samples` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/samples` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SampleListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Sample":true}},"\/search\/variants":{"definition":{"post":{"tags":["Variants"],"summary":"Submit a search request for `Variants`","description":"Submit a search request for `Variants`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/variants\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.\n<br\/>\n<br\/>\n<strong>NOTE:<\/strong> This endpoint uses Token based pagination. Please Review the \n<a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Pagination\">Pagination documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"description":"Study Search request","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/variantsSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Variant":true}},"\/search\/variants\/{searchResultsDbId}":{"definition":{"get":{"tags":["Variants"],"summary":"Get the results of a `Variants` search request","description":"Get the results of a `Variants` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/variants` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.\n<br\/>\n<br\/>\n<strong>NOTE:<\/strong> This endpoint uses Token based pagination. Please Review the \n<a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Pagination\">Pagination documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Variant":true}},"\/search\/variantsets":{"definition":{"post":{"tags":["Variant Sets"],"summary":"Submit a search request for `VariantSets`","description":"Submit a search request for `VariantSets`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/variantsets\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"description":"Study Search request","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantSetsSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantSetsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"VariantSet":true}},"\/search\/variantsets\/{searchResultsDbId}":{"definition":{"get":{"tags":["Variant Sets"],"summary":"Get the results of a `VariantSets` search request","description":"Get the results of a `VariantSets` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/variantsets` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantSetsListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"VariantSet":true}},"\/variants":{"definition":{"get":{"tags":["Variants"],"summary":"Gets a filtered list of `Variants`.","description":"Gets a filtered list of `Variants`.\n\n** THIS ENDPOINT USES TOKEN BASED PAGING **","parameters":[{"name":"variantDbId","in":"query","description":"The ID of the `Variant` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantSetDbId","in":"query","description":"The ID of the `VariantSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Variant":true}},"\/variants\/{variantDbId}":{"definition":{"get":{"tags":["Variants"],"summary":"Gets a `Variant` by ID.","description":"`GET \/variants\/{id}` will return a JSON version of `Variant`.","parameters":[{"name":"variantDbId","in":"path","description":"The ID of the `Variant` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Variant":true}},"\/variants\/{variantDbId}\/calls":{"definition":{"get":{"tags":["Variants"],"summary":"Gets a list of `Calls` associated with a `Variant`.","description":"The variant calls for this particular variant. Each one represents the determination of genotype with respect to this variant. `Calls` in this array are implicitly associated with this `Variant`.\n\n** THIS ENDPOINT USES TOKEN BASED PAGING **","parameters":[{"name":"variantDbId","in":"path","description":"The ID of the `Variant` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"expandHomozygotes","in":"query","description":"Should homozygotes be expanded (true) or collapsed into a single occurrence (false)","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"unknownString","in":"query","description":"The string to use as a representation for missing data","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepPhased","in":"query","description":"The string to use as a separator for phased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepUnphased","in":"query","description":"The string to use as a separator for unphased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Call":true}},"\/variantsets":{"definition":{"get":{"tags":["Variant Sets"],"summary":"Gets a filtered list of `VariantSets`.","description":"Will return a filtered list of `VariantSet`.","parameters":[{"name":"variantSetDbId","in":"query","description":"The ID of the `VariantSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantDbId","in":"query","description":"The ID of the `Variant` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"callSetDbId","in":"query","description":"The ID of the `CallSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"Filter by study DbId","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyName","in":"query","description":"Filter by study name","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantSetsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"VariantSet":true}},"\/variantsets\/extract":{"definition":{"post":{"tags":["Variant Sets"],"summary":"Create new `VariantSet` based on search results","description":"Will perform a search for `Calls` which match the search criteria in `variantSetsExtractRequest`. The results of the search will be used to create a new `VariantSet` on the server. The new `VariantSet` will be returned.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"description":"Study Search request","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantSetsExtractRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/variantSetResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"VariantSet":true}},"\/variantsets\/{variantSetDbId}":{"definition":{"get":{"tags":["Variant Sets"],"summary":"Gets a `VariantSet` by ID.","description":"This call will return a JSON version of a `VariantSet`.","parameters":[{"name":"variantSetDbId","in":"path","description":"The ID of the `Variant` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/variantSetResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"VariantSet":true}},"\/variantsets\/{variantSetDbId}\/calls":{"definition":{"get":{"tags":["Variant Sets"],"summary":"Gets a list of `Calls` associated with a `VariantSet`.","description":"Gets a list of `Calls` associated with a `VariantSet`.\n\n** THIS ENDPOINT USES TOKEN BASED PAGING **","parameters":[{"name":"variantSetDbId","in":"path","description":"The ID of the `VariantSet` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"expandHomozygotes","in":"query","description":"Should homozygotes be expanded (true) or collapsed into a single occurrence (false)","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"unknownString","in":"query","description":"The string to use as a representation for missing data","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepPhased","in":"query","description":"The string to use as a separator for phased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"sepUnphased","in":"query","description":"The string to use as a separator for unphased allele calls","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Call":true}},"\/variantsets\/{variantSetDbId}\/callsets":{"definition":{"get":{"tags":["Variant Sets"],"summary":"Gets a list of `CallSets` associated with a `VariantSet`.","description":"Gets a list of `CallSets` associated with a `VariantSet`.","parameters":[{"name":"callSetDbId","in":"query","description":"The ID of the `CallSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"callSetName","in":"query","description":"The human readable name of the `CallSet` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantSetDbId","in":"path","description":"The ID of the `VariantSet` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CallSetsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"CallSet":true}},"\/variantsets\/{variantSetDbId}\/variants":{"definition":{"get":{"tags":["Variant Sets"],"summary":"Gets a `Variants` for a given `VariantSet`.","description":"This call will return an array of `Variants`.\n\n** THIS ENDPOINT USES TOKEN BASED PAGING **","parameters":[{"name":"variantDbId","in":"query","description":"The ID of the `Variant` to be retrieved.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"variantSetDbId","in":"path","description":"The ID of the `VariantSet` to be retrieved.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"pageToken","in":"query","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","required":false,"style":"form","explode":true,"schema":{"type":"string"},"example":"33c27874"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VariantsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Variant":true}},"\/vendor\/orders":{"definition":{"get":{"tags":["Vendor"],"summary":"List current available orders","description":"List current available orders","parameters":[{"name":"orderId","in":"query","description":"The order id returned by the vendor when the order was successfully submitted. From response of \"POST \/vendor\/orders\"","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"submissionId","in":"query","description":"The submission id returned by the vendor when a set of plates was successfully submitted. From response of \"POST \/vendor\/plates\"","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorOrderListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Vendor"],"summary":"Submit New Order","description":"Submit a new order to a vendor","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorOrderSubmissionRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorOrderSubmissionSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"VendorOrder":true,"VendorOrderSubmission":true}},"\/vendor\/orders\/{orderId}\/plates":{"definition":{"get":{"tags":["Vendor"],"summary":"Get the Plates for a specific Order","description":"Retrieve the plate and sample details of an order being processed","parameters":[{"name":"orderId","in":"path","description":"The order id returned by the vendor when the order was successfully submitted.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorPlateListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"VendorPlate":true}},"\/vendor\/orders\/{orderId}\/results":{"definition":{"get":{"tags":["Vendor"],"summary":"Get the results of a specific Order","description":"Retrieve the data files generated by the vendors analysis","parameters":[{"name":"orderId","in":"path","description":"The order id returned by the vendor when the order was successfully submitted.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorResultFileListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"VendorResultFile":true}},"\/vendor\/orders\/{orderId}\/status":{"definition":{"get":{"tags":["Vendor"],"summary":"Get the status of a specific Order","description":"Retrieve the current status of an order being processed","parameters":[{"name":"orderId","in":"path","description":"The order id returned by the vendor when the order was successfully submitted.","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorOrderStatusResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"VendorOrderStatusResponse_result":true}},"\/vendor\/plates":{"definition":{"post":{"tags":["Vendor"],"summary":"Submit a new set of Sample data","description":"Submit a new set of Sample data","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorPlateSubmissionRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorPlateSubmissionIdSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"VendorPlateSubmissionId":true}},"\/vendor\/plates\/{submissionId}":{"definition":{"get":{"tags":["Vendor"],"summary":"Get the data for a submitted set of plates","description":"Get data for a submitted set of plates","parameters":[{"name":"submissionId","in":"path","description":"The submission id returned by the vendor when a set of plates was successfully submitted. From response of \"POST \/vendor\/plates\"","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorPlateSubmissionSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"VendorPlateSubmission":true}},"\/vendor\/specifications":{"definition":{"get":{"tags":["Vendor"],"summary":"Get the Vendor Specifications","description":"Defines the plate format specification for the vendor.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/VendorSpecificationSingleResponse"}}}}}}},"data_types":{"VendorSpecification":true}},"\/attributes":{"definition":{"get":{"tags":["Germplasm Attributes"],"summary":"Get the Germplasm Attributes","description":"List available attributes.","parameters":[{"name":"attributeCategory","in":"query","description":"The general category for the attribute. very similar to Trait class.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"attributeDbId","in":"query","description":"The unique id for an attribute","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"attributeName","in":"query","description":"The human readable name for an attribute","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"Get all attributes associated with this germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Germplasm Attributes"],"summary":"Create new Germplasm Attributes","description":"Create new Germplasm Attributes","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/GermplasmAttributeNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GermplasmAttribute":true}},"\/attributes\/categories":{"definition":{"get":{"tags":["Germplasm Attributes"],"summary":"Get the Categories of Germplasm Attributes","description":"List all available attribute categories.","parameters":[{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeCategoryListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GermplasmAttributeCategoryListResponse_result":true}},"\/attributes\/{attributeDbId}":{"definition":{"get":{"tags":["Germplasm Attributes"],"summary":"Get the details for a specific Germplasm Attribute","description":"Get the details for a specific Germplasm Attribute","parameters":[{"name":"attributeDbId","in":"path","description":"The unique id for an attribute","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Germplasm Attributes"],"summary":"Update an existing Germplasm Attribute","description":"Update an existing Germplasm Attribute","parameters":[{"name":"attributeDbId","in":"path","description":"The unique id for an attribute","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GermplasmAttribute":true}},"\/attributevalues":{"definition":{"get":{"tags":["Germplasm Attribute Values"],"summary":"Get the Germplasm Attribute Values","description":"Get the Germplasm Attribute Values","parameters":[{"name":"attributeValueDbId","in":"query","description":"The unique id for an attribute value","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"attributeDbId","in":"query","description":"The unique id for an attribute","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"attributeName","in":"query","description":"The human readable name for an attribute","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"Get all attributes associated with this germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Germplasm Attribute Values"],"summary":"Create new Germplasm Attribute Values","description":"Create new Germplasm Attribute Values","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GermplasmAttributeValue":true}},"\/attributevalues\/{attributeValueDbId}":{"definition":{"get":{"tags":["Germplasm Attribute Values"],"summary":"Get the details for a specific Germplasm Attribute","description":"Get the details for a specific Germplasm Attribute","parameters":[{"name":"attributeValueDbId","in":"path","description":"The unique id for an attribute value","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Germplasm Attribute Values"],"summary":"Update an existing Germplasm Attribute Value","description":"Update an existing Germplasm Attribute Value","parameters":[{"name":"attributeValueDbId","in":"path","description":"The unique id for an attribute value","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GermplasmAttributeValue":true}},"\/breedingmethods":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get the Breeding Methods","description":"Get the list of germplasm breeding methods available in a system.","parameters":[{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/BreedingMethodListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"BreedingMethod":true}},"\/breedingmethods\/{breedingMethodDbId}":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get the details of a specific Breeding Method","description":"Get the details of a specific Breeding Method used to produce Germplasm","parameters":[{"name":"breedingMethodDbId","in":"path","description":"Internal database identifier for a breeding method","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/BreedingMethodSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"BreedingMethod":true}},"\/crosses":{"definition":{"get":{"tags":["Crosses"],"summary":"Get a filtered list of Cross entities","description":"Get a filtered list of Cross entities.","parameters":[{"name":"crossingProjectDbId","in":"query","description":"Search for Crossing Projects with this unique id","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"crossDbId","in":"query","description":"Search for Cross with this unique id","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossesListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Crosses"],"summary":"Update existing Cross entities on this server","description":"Update existing Cross entities on this server","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"object","additionalProperties":{"$ref":"#\/components\/schemas\/CrossNewRequest"},"description":"A map of new Cross entities. The key is the crossDbId of the entity to be updated, the value is the Cross object.","example":{"<crossDbId_1>":{"additionalInfo":[],"crossAttributes":[{"crossAttributeName":"string","crossAttributeValue":"string"}],"crossName":"my_Crosses_2018_01","crossType":"BIPARENTAL","crossingProjectDbId":"696d7c92","crossingProjectName":"my_Crosses_2018","parent1":{"germplasmDbId":"d34b10c3","germplasmName":"TME_419","observationUnitDbId":"3f0a1798","observationUnitName":"my_Plot_9001","parentType":"FEMALE"},"parent2":{"germplasmDbId":"776a609c","germplasmName":"TME_419","observationUnitDbId":"2e1926a7","observationUnitName":"my_Plot_9002","parentType":"MALE"},"pollinationTimeStamp":"2019-08-15T18:49:00.327Z"},"<crossDbId_2>":{"additionalInfo":[],"crossAttributes":[{"crossAttributeName":"string","crossAttributeValue":"string"}],"crossName":"my_Crosses_2018_02","crossType":"BIPARENTAL","crossingProjectDbId":"696d7c92","crossingProjectName":"my_Crosses_2018","parent1":{"germplasmDbId":"c43a2fd2","germplasmName":"TME_419","observationUnitDbId":"3f2a37b8","observationUnitName":"my_Plot_9013","parentType":"FEMALE"},"parent2":{"germplasmDbId":"124b10ad","germplasmName":"TME_419","observationUnitDbId":27194637,"observationUnitName":"my_Plot_9014","parentType":"MALE"},"pollinationTimeStamp":"2019-08-15T18:49:00.327Z"}}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossesListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Crosses"],"summary":"Create new Cross entities on this server","description":"Create new Cross entities on this server","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/CrossNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossesListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Cross":true}},"\/crossingprojects":{"definition":{"get":{"tags":["Crossing Projects"],"summary":"Get a filtered list of Crossing Projects","description":"Get a filtered list of Crossing Projects.","parameters":[{"name":"crossingProjectDbId","in":"query","description":"Search for Crossing Projects with this unique id","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossingProjectsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Crossing Projects"],"summary":"Create new Crossing Project entities on this server","description":"Create new Crossing Project entities on this server","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/CrossingProjectNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossingProjectsListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"CrossingProject":true}},"\/crossingprojects\/{crossingProjectDbId}":{"definition":{"get":{"tags":["Crossing Projects"],"summary":"Get a filtered list of Crossing Projects","description":"Get a filtered list of Crossing Projects.","parameters":[{"name":"crossingProjectDbId","in":"path","description":"Search for Crossing Projects with this unique id","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossingProjectsSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Crossing Projects"],"summary":"Update an existing Crossing Project","description":"Update an existing Crossing Project entity on this server","parameters":[{"name":"crossingProjectDbId","in":"path","description":"Search for Crossing Projects with this unique id","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossingProjectNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/CrossingProjectsSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"CrossingProject":true}},"\/germplasm":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get a filtered list of Germplasm","description":"Addresses these needs\n\n- General germplasm search mechanism that accepts POST for complex queries \n\n- Possibility to search germplasm by more parameters than those allowed by the existing germplasm search \n\n- Possibility to get MCPD details by PUID rather than dbId","parameters":[{"name":"germplasmPUI","in":"query","description":"Permanent unique identifier (DOI, URI, etc.)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"Internal database identifier","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmName","in":"query","description":"Name of the germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"commonCropName","in":"query","description":"The common crop name related to this germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"accessionNumber","in":"query","description":"Unique identifiers for accessions within a genebank","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"collection","in":"query","description":"A specific panel\/collection\/population name this germplasm belongs to.","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"genus","in":"query","description":"Genus name to identify germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"species","in":"query","description":"Species name to identify germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"studyDbId","in":"query","description":"Search for Germplasm that are associated with a particular Study","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"synonym","in":"query","description":"Alternative name or ID used to reference this germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"parentDbId","in":"query","description":"Search for Germplasm with this parent","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"progenyDbId","in":"query","description":"Search for Germplasm with this child","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Germplasm"],"summary":"Create new Germplasm entities on this server","description":"Create new Germplasm entities on this server","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/GermplasmNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Germplasm":true}},"\/germplasm\/{germplasmDbId}":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get the details of a specific Germplasm","description":"Germplasm Details by germplasmDbId was merged with Germplasm Multi Crop Passport Data. The MCPD fields are optional and marked with the prefix [MCPD].","parameters":[{"name":"germplasmDbId","in":"path","description":"The internal id of the germplasm","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Germplasm"],"summary":"Update the details of an existing Germplasm","description":"Germplasm Details by germplasmDbId was merged with Germplasm Multi Crop Passport Data. The MCPD fields are optional and marked with the prefix [MCPD].","parameters":[{"name":"germplasmDbId","in":"path","description":"The internal id of the germplasm","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Germplasm":true}},"\/germplasm\/{germplasmDbId}\/mcpd":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get the details of a specific Germplasm in MCPD format","description":"Get all MCPD details of a germplasm\n\n<a target=\"_blank\" href=\"https:\/\/www.bioversityInternational.org\/fileadmin\/user_upload\/online_library\/publications\/pdfs\/FAOBIOVERSITY_MULTI-CROP_PASSPORT_DESCRIPTORS_V.2.1_2015_2020.pdf\"> MCPD v2.1 spec can be found here <\/a>\n\nImplementation Notes\n\n- When the MCPD spec identifies a field which can have multiple values returned, the JSON response should be an array instead of a semi-colon separated string.","parameters":[{"name":"germplasmDbId","in":"path","description":"the internal id of the germplasm","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmMCPDResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"GermplasmMCPD":true}},"\/germplasm\/{germplasmDbId}\/pedigree":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get the pedigree details of a specific Germplasm","description":"Get the parentage information of a specific Germplasm","parameters":[{"name":"germplasmDbId","in":"path","description":"the internal id of the germplasm","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"notation","in":"query","description":"text representation of the pedigree","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"includeSiblings","in":"query","description":"include array of siblings in response","required":false,"style":"form","explode":true,"schema":{"type":"boolean"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmPedigreeResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"PedigreeNode":true}},"\/germplasm\/{germplasmDbId}\/progeny":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get the progeny details of a specific Germplasm","description":"Get the germplasmDbIds for all the Progeny of a particular germplasm.\n\nImplementation Notes\n\n- Regarding the ''parentType'' field in the progeny object. Given a germplasm A having a progeny B and C, ''parentType'' for progeny B refers to the ''parentType'' of A toward B.","parameters":[{"name":"germplasmDbId","in":"path","description":"the internal id of the germplasm","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmProgenyResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"ProgenyNode":true}},"\/plannedcrosses":{"definition":{"get":{"tags":["Crosses"],"summary":"Get a filtered list of Planned Cross entities","description":"Get a filtered list of Planned Cross entities.","parameters":[{"name":"crossingProjectDbId","in":"query","description":"Search for Crossing Projects with this unique id","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"plannedCrossDbId","in":"query","description":"Search for Planned Cross with this unique id","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PlannedCrossesListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"put":{"tags":["Crosses"],"summary":"Update existing Planned Cross entities on this server","description":"Update existing Planned Cross entities on this server","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"object","additionalProperties":{"$ref":"#\/components\/schemas\/PlannedCrossNewRequest"},"description":"A map of new Planned Cross entities. The key is the plannedCrossDbId of the entity to be updated, the value is the Planned Cross object.","example":{"<plannedCrossDbId_1>":{"additionalInfo":[],"crossAttributes":[{"crossAttributeName":"string","crossAttributeValue":"string"}],"crossType":"BIPARENTAL","crossingProjectDbId":"696d7c92","crossingProjectName":"my_Crosses_2018","parent1":{"germplasmDbId":"d34b10c3","germplasmName":"TME_419","observationUnitDbId":"3f0a1798","observationUnitName":"my_Plot_9001","parentType":"FEMALE"},"parent2":{"germplasmDbId":"776a609c","germplasmName":"TME_419","observationUnitDbId":"2e1926a7","observationUnitName":"my_Plot_9002","parentType":"MALE"},"plannedCrossName":"my_Crosses_2018_01","pollinationTimeStamp":"2019-08-15T18:49:00.327Z"},"<plannedCrossDbId_2>":{"additionalInfo":[],"crossAttributes":[{"crossAttributeName":"string","crossAttributeValue":"string"}],"crossType":"BIPARENTAL","crossingProjectDbId":"696d7c92","crossingProjectName":"my_Crosses_2018","parent1":{"germplasmDbId":"c43a2fd2","germplasmName":"TME_419","observationUnitDbId":"3f2a37b8","observationUnitName":"my_Plot_9013","parentType":"FEMALE"},"parent2":{"germplasmDbId":"124b10ad","germplasmName":"TME_419","observationUnitDbId":27194637,"observationUnitName":"my_Plot_9014","parentType":"MALE"},"plannedCrossName":"my_Crosses_2018_02","pollinationTimeStamp":"2019-08-15T18:49:00.327Z"}}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PlannedCrossesListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Crosses"],"summary":"Create new Planned Cross entities on this server","description":"Create new Planned Cross entities on this server","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/PlannedCrossNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/PlannedCrossesListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"PlannedCross":true}},"\/search\/attributes":{"definition":{"post":{"tags":["Germplasm Attributes"],"summary":"Submit a search request for Germplasm `Attributes`","description":"Submit a search request for Germplasm `Attributes`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/attributes\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GermplasmAttribute":true}},"\/search\/attributes\/{searchResultsDbId}":{"definition":{"get":{"tags":["Germplasm Attributes"],"summary":"Get the results of a Germplasm `Attributes` search request","description":"Get the results of a Germplasm `Attributes` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/attributes` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"GermplasmAttribute":true}},"\/search\/attributevalues":{"definition":{"post":{"tags":["Germplasm Attribute Values"],"summary":"Submit a search request for Germplasm `AttributeValues`","description":"Submit a search request for Germplasm `AttributeValues`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/attributevalues\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"GermplasmAttributeValue":true}},"\/search\/attributevalues\/{searchResultsDbId}":{"definition":{"get":{"tags":["Germplasm Attribute Values"],"summary":"Get the results of a Germplasm `AttributeValues` search request","description":"Get the results of a Germplasm `AttributeValues` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/attributevalues` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmAttributeValueListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"GermplasmAttributeValue":true}},"\/search\/germplasm":{"definition":{"post":{"tags":["Germplasm"],"summary":"Submit a search request for `Germplasm`","description":"Submit a search request for `Germplasm`<br\/>\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse the corresponding `GET \/search\/germplasm\/{searchResultsDbId}` to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmSearchRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"Germplasm":true}},"\/search\/germplasm\/{searchResultsDbId}":{"definition":{"get":{"tags":["Germplasm"],"summary":"Get the results of a `Germplasm` search request","description":"Get the results of a `Germplasm` search request <br\/>\nClients should submit a search request using the corresponding `POST \/search\/germplasm` endpoint.\nSearch requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \nIf a server needs more time to process the request, it might respond with a `searchResultsDbId`. \nUse this endpoint to retrieve the results of the search. <br\/> \nReview the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Search_Services#POST_Search_Entity\">Search Services documentation<\/a> for additional implementation details.","parameters":[{"name":"searchResultsDbId","in":"path","description":"Unique identifier which references the search results","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/GermplasmListResponse"}}}},"202":{"description":"Accepted","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/202AcceptedSearchResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"Germplasm":true}},"\/seedlots":{"definition":{"get":{"tags":["Seed Lots"],"summary":"Get a filtered list of Seed Lot descriptions","description":"Get a filtered list of Seed Lot descriptions available in a system.","parameters":[{"name":"seedLotDbId","in":"query","description":"Unique id for a seed lot on this server","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"The internal id of the germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Seed Lots"],"summary":"Add new Seed Lot descriptions to a server","description":"Add new Seed Lot descriptions to a server","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/SeedLotNewRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"SeedLot":true}},"\/seedlots\/transactions":{"definition":{"get":{"tags":["Seed Lots"],"summary":"Get a filtered list of Seed Lot Transactions","description":"Get a filtered list of Seed Lot Transactions","parameters":[{"name":"transactionDbId","in":"query","description":"Unique id for a transaction on this server","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"seedLotDbId","in":"query","description":"Unique id for a seed lot on this server","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"germplasmDbId","in":"query","description":"The internal id of the germplasm","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceID","in":"query","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"externalReferenceSource","in":"query","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotTransactionListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}},"post":{"tags":["Seed Lots"],"summary":"Add new Seed Lot Transaction to be recorded","description":"Add new Seed Lot Transaction to be recorded","parameters":[{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"type":"array","items":{"$ref":"#\/components\/schemas\/SeedLotNewTransactionRequest"}}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotTransactionListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}}}}},"data_types":{"SeedLotTransaction":true}},"\/seedlots\/{seedLotDbId}":{"definition":{"get":{"tags":["Seed Lots"],"summary":"Get a specific Seed Lot","description":"Get a specific Seed Lot by seedLotDbId","parameters":[{"name":"seedLotDbId","in":"path","description":"Unique id for a seed lot on this server","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}},"put":{"tags":["Seed Lots"],"summary":"Update an existing Seed Lot","description":"Update an existing Seed Lot","parameters":[{"name":"seedLotDbId","in":"path","description":"Unique id for a seed lot on this server","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"requestBody":{"content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotNewRequest"}}}},"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotSingleResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"SeedLot":true}},"\/seedlots\/{seedLotDbId}\/transactions":{"definition":{"get":{"tags":["Seed Lots"],"summary":"Get all Transactions related to a specific Seed Lot","description":"Get all Transactions related to a specific Seed Lot","parameters":[{"name":"seedLotDbId","in":"path","description":"Unique id for a seed lot on this server","required":true,"style":"simple","explode":false,"schema":{"type":"string"}},{"name":"transactionDbId","in":"query","description":"Unique id for a Transaction that has occurred","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"transactionDirection","in":"query","description":"Filter results to only include transactions directed to the specific Seed Lot (TO), away from the specific Seed Lot (FROM), or both (BOTH). The default value for this parameter is BOTH","required":false,"style":"form","explode":true,"schema":{"type":"string","enum":["TO","FROM","BOTH"]}},{"name":"page","in":"query","description":"Used to request a specific page of data to be returned.\n\nThe page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":"0"},{"name":"pageSize","in":"query","description":"The size of the pages to be returned. Default is `1000`.","required":false,"style":"form","explode":true,"schema":{"type":"integer"},"example":1000},{"name":"Authorization","in":"header","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","required":false,"style":"simple","explode":false,"schema":{"pattern":"^Bearer .*$","type":"string"},"example":"Bearer XXXX"}],"responses":{"200":{"description":"OK","content":{"application\/json":{"schema":{"$ref":"#\/components\/schemas\/SeedLotTransactionListResponse"}}}},"400":{"description":"Bad Request","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Malformed JSON Request Object\n\nERROR - 2018-10-08T18:15:11Z - Invalid query parameter\n\nERROR - 2018-10-08T18:15:11Z - Required parameter is missing"}}},"401":{"description":"Unauthorized","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - Missing or expired authorization token"}}},"403":{"description":"Forbidden","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - User does not have permission to perform this action"}}},"404":{"description":"Not Found","content":{"application\/json":{"schema":{"type":"string"},"example":"ERROR - 2018-10-08T18:15:11Z - The requested object DbId is not found"}}}}}},"data_types":{"SeedLotTransaction":true}}},"data_types":{"Contact":{"type":"object","description":"","fields":{"contactDbId":{"type":"string","required":true},"email":{"type":"string","required":false},"instituteName":{"type":"string","required":false},"name":{"type":"string","required":false},"orcid":{"type":"string","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"Context":{"type":"array","description":"The JSON-LD Context is used to provide JSON-LD definitions to each field in a JSON object. By providing an array of context file urls, a BrAPI response object becomes JSON-LD compatible.  \n\nFor more information, see https:\/\/w3c.github.io\/json-ld-syntax\/#the-context","fields":[],"calls":[],"as_field_in":[]},"DataLink":{"type":"object","description":"","fields":{"dataFormat":{"type":"string","required":false},"description":{"type":"string","required":false},"fileFormat":{"type":"string","required":false},"name":{"type":"string","required":false},"provenance":{"type":"string","required":false},"scientificType":{"type":"string","required":false},"url":{"type":"string","required":false},"version":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"EnvironmentParameter":{"type":"object","description":"","fields":{"description":{"type":"string","required":true},"parameterName":{"type":"string","required":true},"parameterPUI":{"type":"string","required":false},"unit":{"type":"string","required":false},"unitPUI":{"type":"string","required":false},"value":{"type":"string","required":false},"valuePUI":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ExternalReferences":{"type":"array","description":"An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.","fields":[],"calls":[],"as_field_in":{"VariableBaseClass":true}},"ListBaseFields":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"dateCreated":{"type":"string","required":false},"dateModified":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"listDescription":{"type":"string","required":false},"listName":{"type":"string","required":false},"listOwnerName":{"type":"string","required":false},"listOwnerPersonDbId":{"type":"string","required":false},"listSize":{"type":"integer","required":false},"listSource":{"type":"string","required":false},"listType":{"type":"string","required":true}},"calls":[],"as_field_in":[]},"ListDetails":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"data":{"type":"string[]","required":false},"dateCreated":{"type":"string","required":false},"dateModified":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"listDbId":{"type":"string","required":false},"listDescription":{"type":"string","required":false},"listName":{"type":"string","required":false},"listOwnerName":{"type":"string","required":false},"listOwnerPersonDbId":{"type":"string","required":false},"listSize":{"type":"integer","required":false},"listSource":{"type":"string","required":false},"listType":{"type":"string","required":false}},"calls":{"\/lists\/{listDbId}":true,"\/lists\/{listDbId}\/items":true},"as_field_in":[]},"ListNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"data":{"type":"string[]","required":false},"dateCreated":{"type":"string","required":false},"dateModified":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"listDescription":{"type":"string","required":false},"listName":{"type":"string","required":false},"listOwnerName":{"type":"string","required":false},"listOwnerPersonDbId":{"type":"string","required":false},"listSize":{"type":"integer","required":false},"listSource":{"type":"string","required":false},"listType":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ListSearchRequest":{"type":"object","description":"","fields":{"dateCreatedRangeEnd":{"type":"string","required":false},"dateCreatedRangeStart":{"type":"string","required":false},"dateModifiedRangeEnd":{"type":"string","required":false},"dateModifiedRangeStart":{"type":"string","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"listDbIds":{"type":"string[]","required":false},"listNames":{"type":"string[]","required":false},"listOwnerNames":{"type":"string[]","required":false},"listOwnerPersonDbIds":{"type":"string[]","required":false},"listSources":{"type":"string[]","required":false},"listType":{"type":"string","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"ListSummary":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"dateCreated":{"type":"string","required":false},"dateModified":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"listDbId":{"type":"string","required":false},"listDescription":{"type":"string","required":false},"listName":{"type":"string","required":false},"listOwnerName":{"type":"string","required":false},"listOwnerPersonDbId":{"type":"string","required":false},"listSize":{"type":"integer","required":false},"listSource":{"type":"string","required":false},"listType":{"type":"string","required":false}},"calls":{"\/lists":true,"\/search\/lists":true,"\/search\/lists\/{searchResultsDbId}":true},"as_field_in":[]},"ListTypes":{"type":"string","description":"","fields":[],"calls":{"\/lists":true},"as_field_in":[]},"Location":{"type":"object","description":"","fields":{"abbreviation":{"type":"string","required":false},"additionalInfo":{"type":"object","required":false},"coordinateDescription":{"type":"string","required":false},"coordinateUncertainty":{"type":"string","required":false},"coordinates":{"type":"GeoJSON","required":false},"countryCode":{"type":"string","required":false},"countryName":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"environmentType":{"type":"string","required":false},"exposure":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"instituteAddress":{"type":"string","required":false},"instituteName":{"type":"string","required":false},"locationDbId":{"type":"string","required":false},"locationName":{"type":"string","required":false},"locationType":{"type":"string","required":false},"siteStatus":{"type":"string","required":false},"slope":{"type":"string","required":false},"topography":{"type":"string","required":false}},"calls":{"\/locations":true,"\/locations\/{locationDbId}":true,"\/search\/locations":true,"\/search\/locations\/{searchResultsDbId}":true},"as_field_in":[]},"LocationNewRequest":{"type":"object","description":"","fields":{"abbreviation":{"type":"string","required":false},"additionalInfo":{"type":"object","required":false},"coordinateDescription":{"type":"string","required":false},"coordinateUncertainty":{"type":"string","required":false},"coordinates":{"type":"GeoJSON","required":false},"countryCode":{"type":"string","required":false},"countryName":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"environmentType":{"type":"string","required":false},"exposure":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"instituteAddress":{"type":"string","required":false},"instituteName":{"type":"string","required":false},"locationName":{"type":"string","required":false},"locationType":{"type":"string","required":false},"siteStatus":{"type":"string","required":false},"slope":{"type":"string","required":false},"topography":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"LocationSearchRequest":{"type":"object","description":"","fields":{"abbreviations":{"type":"string[]","required":false},"altitudeMax":{"type":"number","required":false},"altitudeMin":{"type":"number","required":false},"coordinates":{"type":"GeoJSONSearchArea","required":false},"countryCodes":{"type":"string[]","required":false},"countryNames":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"instituteAddresses":{"type":"string[]","required":false},"instituteNames":{"type":"string[]","required":false},"locationDbIds":{"type":"string[]","required":false},"locationNames":{"type":"string[]","required":false},"locationTypes":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"MethodBaseClass":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"bibliographicalReference":{"type":"string","required":false},"description":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"formula":{"type":"string","required":false},"methodClass":{"type":"string","required":false},"methodName":{"type":"string","required":false},"ontologyReference":{"type":"MethodBaseClass_ontologyReference","required":false}},"calls":[],"as_field_in":[]},"ObservationUnitHierarchyLevel":{"type":"object","description":"Observation levels indicate the granularity level at which the measurements are taken. `levelName` defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6). ","fields":{"levelName":{"type":"string","required":false},"levelOrder":{"type":"integer","required":false}},"calls":{"\/observationlevels":true},"as_field_in":[]},"OntologyReference":{"type":"object","description":"MIAPPE V1.1\n\n(DM-85) Variable accession number - Accession number of the variable in the Crop Ontology\n\n(DM-87) Trait accession number - Accession number of the trait in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-89) Method accession number - Accession number of the method in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-93) Scale accession number - Accession number of the scale in a suitable controlled vocabulary (Crop Ontology).","fields":{"documentationLinks":{"type":"MethodBaseClass_ontologyReference_documentationLinks[]","required":false},"ontologyDbId":{"type":"string","required":true},"ontologyName":{"type":"string","required":true},"version":{"type":"string","required":false}},"calls":[],"as_field_in":{"VariableBaseClass":true}},"Person":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"description":{"type":"string","required":false},"emailAddress":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"firstName":{"type":"string","required":false},"lastName":{"type":"string","required":false},"mailingAddress":{"type":"string","required":false},"middleName":{"type":"string","required":false},"personDbId":{"type":"string","required":false},"phoneNumber":{"type":"string","required":false},"userID":{"type":"string","required":false}},"calls":{"\/people":true,"\/people\/{personDbId}":true,"\/search\/people":true,"\/search\/people\/{searchResultsDbId}":true},"as_field_in":[]},"PersonNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"description":{"type":"string","required":false},"emailAddress":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"firstName":{"type":"string","required":false},"lastName":{"type":"string","required":false},"mailingAddress":{"type":"string","required":false},"middleName":{"type":"string","required":false},"phoneNumber":{"type":"string","required":false},"userID":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"PersonSearchRequest":{"type":"object","description":"","fields":{"emailAddresses":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"firstNames":{"type":"string[]","required":false},"lastNames":{"type":"string[]","required":false},"mailingAddresses":{"type":"string[]","required":false},"middleNames":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"personDbIds":{"type":"string[]","required":false},"phoneNumbers":{"type":"string[]","required":false},"userIDs":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"Program":{"type":"object","description":"","fields":{"abbreviation":{"type":"string","required":false},"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"leadPersonDbId":{"type":"string","required":false},"leadPersonName":{"type":"string","required":false},"objective":{"type":"string","required":false},"programDbId":{"type":"string","required":false},"programName":{"type":"string","required":false}},"calls":{"\/programs":true,"\/programs\/{programDbId}":true,"\/search\/programs":true,"\/search\/programs\/{searchResultsDbId}":true},"as_field_in":[]},"ProgramNewRequest":{"type":"object","description":"","fields":{"abbreviation":{"type":"string","required":false},"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"leadPersonDbId":{"type":"string","required":false},"leadPersonName":{"type":"string","required":false},"objective":{"type":"string","required":false},"programName":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ProgramSearchRequest":{"type":"object","description":"","fields":{"abbreviations":{"type":"string[]","required":false},"commonCropNames":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"leadPersonDbIds":{"type":"string[]","required":false},"leadPersonNames":{"type":"string[]","required":false},"objectives":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"programDbIds":{"type":"string[]","required":false},"programNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"ScaleBaseClass":{"type":"object","description":"Scale metadata","fields":{"additionalInfo":{"type":"object","required":false},"dataType":{"type":"string","required":false},"decimalPlaces":{"type":"integer","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"ontologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"scaleName":{"type":"string","required":true},"validValues":{"type":"ScaleBaseClass_validValues","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersCommonCropNames":{"type":"object","description":"","fields":{"commonCropNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersExternalReferences":{"type":"object","description":"","fields":{"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersGermplasm":{"type":"object","description":"","fields":{"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersLocations":{"type":"object","description":"","fields":{"locationDbIds":{"type":"string[]","required":false},"locationNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersObservationVariables":{"type":"object","description":"","fields":{"observationVariableDbIds":{"type":"string[]","required":false},"observationVariableNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersPaging":{"type":"object","description":"","fields":{"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersPrograms":{"type":"object","description":"","fields":{"programDbIds":{"type":"string[]","required":false},"programNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersStudies":{"type":"object","description":"","fields":{"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersTokenPaging":{"type":"object","description":"","fields":{"pageSize":{"type":"integer","required":false},"pageToken":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"SearchRequestParametersTrials":{"type":"object","description":"","fields":{"trialDbIds":{"type":"string[]","required":false},"trialNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"Season":{"type":"object","description":"","fields":{"seasonDbId":{"type":"string","required":true},"seasonName":{"type":"string","required":false},"year":{"type":"integer","required":false},"season":{"type":"string","required":false}},"calls":{"\/seasons":true,"\/seasons\/{seasonDbId}":true},"as_field_in":[]},"ServerInfo":{"type":"object","description":"","fields":{"calls":{"type":"Service[]","required":true},"contactEmail":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"location":{"type":"string","required":false},"organizationName":{"type":"string","required":false},"organizationURL":{"type":"string","required":false},"serverDescription":{"type":"string","required":false},"serverName":{"type":"string","required":false}},"calls":{"\/serverinfo":true},"as_field_in":[]},"Service":{"type":"object","description":"","fields":{"dataTypes":{"type":"WSMIMEDataTypes[]","required":false},"methods":{"type":"string[]","required":true},"service":{"type":"string","required":true},"versions":{"type":"string[]","required":true}},"calls":[],"as_field_in":{"ServerInfo":true}},"Study":{"type":"object","description":"","fields":{"active":{"type":"boolean","required":false},"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"contacts":{"type":"Study_contacts[]","required":false},"culturalPractices":{"type":"string","required":false},"dataLinks":{"type":"Study_dataLinks[]","required":false},"documentationURL":{"type":"string","required":false},"endDate":{"type":"string","required":false},"environmentParameters":{"type":"Study_environmentParameters[]","required":false},"experimentalDesign":{"type":"Study_experimentalDesign","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"growthFacility":{"type":"Study_growthFacility","required":false},"lastUpdate":{"type":"Study_lastUpdate","required":false},"license":{"type":"string","required":false},"locationDbId":{"type":"string","required":false},"locationName":{"type":"string","required":false},"observationLevels":{"type":"ObservationUnitHierarchyLevel_1[]","required":false},"observationUnitsDescription":{"type":"string","required":false},"seasons":{"type":"string[]","required":false},"startDate":{"type":"string","required":false},"studyCode":{"type":"string","required":false},"studyDbId":{"type":"string","required":false},"studyDescription":{"type":"string","required":false},"studyName":{"type":"string","required":false},"studyPUI":{"type":"string","required":false},"studyType":{"type":"string","required":false},"trialDbId":{"type":"string","required":false},"trialName":{"type":"string","required":false}},"calls":{"\/search\/studies":true,"\/search\/studies\/{searchResultsDbId}":true,"\/studies":true,"\/studies\/{studyDbId}":true},"as_field_in":[]},"StudyNewRequest":{"type":"object","description":"","fields":{"active":{"type":"boolean","required":false},"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"contacts":{"type":"Study_contacts[]","required":false},"culturalPractices":{"type":"string","required":false},"dataLinks":{"type":"Study_dataLinks[]","required":false},"documentationURL":{"type":"string","required":false},"endDate":{"type":"string","required":false},"environmentParameters":{"type":"Study_environmentParameters[]","required":false},"experimentalDesign":{"type":"Study_experimentalDesign","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"growthFacility":{"type":"Study_growthFacility","required":false},"lastUpdate":{"type":"Study_lastUpdate","required":false},"license":{"type":"string","required":false},"locationDbId":{"type":"string","required":false},"locationName":{"type":"string","required":false},"observationLevels":{"type":"ObservationUnitHierarchyLevel_1[]","required":false},"observationUnitsDescription":{"type":"string","required":false},"seasons":{"type":"string[]","required":false},"startDate":{"type":"string","required":false},"studyCode":{"type":"string","required":false},"studyDescription":{"type":"string","required":false},"studyName":{"type":"string","required":false},"studyPUI":{"type":"string","required":false},"studyType":{"type":"string","required":false},"trialDbId":{"type":"string","required":false},"trialName":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"StudySearchRequest":{"type":"object","description":"","fields":{"active":{"type":"boolean","required":false},"commonCropNames":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false},"locationDbIds":{"type":"string[]","required":false},"locationNames":{"type":"string[]","required":false},"observationVariableDbIds":{"type":"string[]","required":false},"observationVariableNames":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"programDbIds":{"type":"string[]","required":false},"programNames":{"type":"string[]","required":false},"seasonDbIds":{"type":"string[]","required":false},"sortBy":{"type":"string","required":false},"sortOrder":{"type":"string","required":false},"studyCodes":{"type":"string[]","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false},"studyPUIs":{"type":"string[]","required":false},"studyTypes":{"type":"string[]","required":false},"trialDbIds":{"type":"string[]","required":false},"trialNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"TraitBaseClass":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"alternativeAbbreviations":{"type":"string[]","required":false},"attribute":{"type":"string","required":false},"entity":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"mainAbbreviation":{"type":"string","required":false},"ontologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"status":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"traitClass":{"type":"string","required":false},"traitDescription":{"type":"string","required":false},"traitName":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"TraitDataType":{"type":"string","description":"<p>Class of the scale, entries can be<\/p>\n<p>\"Code\" -  This scale class is exceptionally used to express complex traits. Code is a nominal scale that combines the expressions of the different traits composing the complex trait. For example a severity trait might be expressed by a 2 digit and 2 character code. The first 2 digits are the percentage of the plant covered by a fungus and the 2 characters refer to the delay in development, e.g. \"75VD\" means \"75 %\" of the plant is infected and the plant is very delayed.<\/p>\n<p>\"Date\" - The date class is for events expressed in a time format, See ISO 8601<\/p>\n<p>\"Duration\" - The Duration class is for time elapsed between two events expressed in a time format, e.g. days, hours, months<\/p>\n<p>\"Nominal\" - Categorical scale that can take one of a limited and fixed number of categories. There is no intrinsic ordering to the categories<\/p>\n<p>\"Numerical\" - Numerical scales express the trait with real numbers. The numerical scale defines the unit e.g. centimeter, ton per hectare, branches<\/p>\n<p>\"Ordinal\" - Ordinal scales are scales composed of ordered categories<\/p>\n<p>\"Text\" - A free text is used to express the trait.<\/p>","fields":[],"calls":[],"as_field_in":[]},"Trial":{"type":"object","description":"","fields":{"active":{"type":"boolean","required":false},"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"contacts":{"type":"Study_contacts[]","required":false},"datasetAuthorships":{"type":"Trial_datasetAuthorships[]","required":false},"documentationURL":{"type":"string","required":false},"endDate":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"programDbId":{"type":"string","required":false},"programName":{"type":"string","required":false},"publications":{"type":"Trial_publications[]","required":false},"startDate":{"type":"string","required":false},"trialDbId":{"type":"string","required":false},"trialDescription":{"type":"string","required":false},"trialName":{"type":"string","required":false},"trialPUI":{"type":"string","required":false}},"calls":{"\/search\/trials":true,"\/search\/trials\/{searchResultsDbId}":true,"\/trials":true,"\/trials\/{trialDbId}":true},"as_field_in":[]},"TrialNewRequest":{"type":"object","description":"","fields":{"active":{"type":"boolean","required":false},"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"contacts":{"type":"Study_contacts[]","required":false},"datasetAuthorships":{"type":"Trial_datasetAuthorships[]","required":false},"documentationURL":{"type":"string","required":false},"endDate":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"programDbId":{"type":"string","required":false},"programName":{"type":"string","required":false},"publications":{"type":"Trial_publications[]","required":false},"startDate":{"type":"string","required":false},"trialDescription":{"type":"string","required":false},"trialName":{"type":"string","required":false},"trialPUI":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"TrialSearchRequest":{"type":"object","description":"","fields":{"active":{"type":"boolean","required":false},"commonCropNames":{"type":"string[]","required":false},"contactDbIds":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"locationDbIds":{"type":"string[]","required":false},"locationNames":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"programDbIds":{"type":"string[]","required":false},"programNames":{"type":"string[]","required":false},"searchDateRangeEnd":{"type":"string","required":false},"searchDateRangeStart":{"type":"string","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false},"trialDbIds":{"type":"string[]","required":false},"trialNames":{"type":"string[]","required":false},"trialPUIs":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"VariableBaseClass":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"contextOfUse":{"type":"string[]","required":false},"defaultValue":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"externalReferences":{"type":"ExternalReferences","required":false},"growthStage":{"type":"string","required":false},"institution":{"type":"string","required":false},"language":{"type":"string","required":false},"method":{"type":"VariableBaseClass_method","required":true},"ontologyReference":{"type":"OntologyReference","required":false},"scale":{"type":"VariableBaseClass_scale","required":true},"scientist":{"type":"string","required":false},"status":{"type":"string","required":false},"submissionTimestamp":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"trait":{"type":"VariableBaseClass_trait","required":true}},"calls":[],"as_field_in":[]},"WSMIMEDataTypes":{"type":"string","description":"","fields":[],"calls":{"\/serverinfo":true,"\/observations\/table":true,"\/observationunits\/table":true,"\/search\/observations\/{searchResultsDbId}":true},"as_field_in":{"Service":true}},"basePagination":{"type":"object","description":"","fields":{"pageSize":{"type":"integer","required":true},"totalCount":{"type":"integer","required":false},"totalPages":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"dataFile":{"type":"object","description":"A dataFile contains a URL and the relevant file metadata to represent a file","fields":{"fileDescription":{"type":"string","required":false},"fileMD5Hash":{"type":"string","required":false},"fileName":{"type":"string","required":false},"fileSize":{"type":"integer","required":false},"fileType":{"type":"string","required":false},"fileURL":{"type":"string","required":true}},"calls":[],"as_field_in":[]},"geoJSON":{"type":"object","description":"One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.\n\nCopied from RFC 7946 Section 3.1.1\n\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.","fields":{"geometry":{"type":"object","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"geoJSONSearchArea":{"type":"object","description":"A GeoJSON Polygon which describes an area to search for other GeoJSON objects. All contained Points and intersecting Polygons should be returned as search results. \n\nAll coordinates are decimal values on the WGS84 geographic coordinate reference system.","fields":{"geometry":{"type":"object","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"indexPagination":{"type":"object","description":"The pagination object is applicable only when the payload contains a \"data\" key. It describes the pagination of the data contained in the \"data\" array, as a way to identify which subset of data is being returned. \n\nPages are zero indexed, so the first page will be page 0 (zero).","fields":{"currentPage":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"totalCount":{"type":"integer","required":false},"totalPages":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"linearRing":{"type":"array","description":"An array of at least four positions where the first equals the last","fields":[],"calls":[],"as_field_in":[]},"metadata":{"type":"object","description":"","fields":{"datafiles":{"type":"metadata_datafiles[]","required":false},"pagination":{"type":"metadata_pagination","required":false},"status":{"type":"metadata_status[]","required":false}},"calls":[],"as_field_in":[]},"metadataBase":{"type":"object","description":"","fields":{"datafiles":{"type":"metadata_datafiles[]","required":false},"status":{"type":"metadata_status[]","required":false}},"calls":[],"as_field_in":[]},"metadataTokenPagination":{"type":"object","description":"","fields":{"datafiles":{"type":"metadata_datafiles[]","required":false},"pagination":{"type":"metadataTokenPagination_pagination","required":false},"status":{"type":"metadata_status[]","required":false}},"calls":[],"as_field_in":[]},"pointGeometry":{"type":"object","description":"Copied from RFC 7946 Section 3.1.1\n\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.","fields":{"coordinates":{"type":"number[]","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"polygon":{"type":"array","description":"An array of linear rings","fields":[],"calls":[],"as_field_in":[]},"polygonGeometry":{"type":"object","description":"An array of Linear Rings. Each Linear Ring is an array of Points. \n\nA Point is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.","fields":{"coordinates":{"type":"array[]","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"position":{"type":"array","description":"A single position","fields":[],"calls":[],"as_field_in":[]},"status":{"type":"object","description":"An array of status messages to convey technical logging information from the server to the client.","fields":{"message":{"type":"string","required":true},"messageType":{"type":"string","required":true}},"calls":[],"as_field_in":[]},"tokenPagination":{"type":"object","description":"The pagination object is applicable only when the payload contains a \"data\" key. It describes the pagination of the data contained in the \"data\" array, as a way to identify which subset of data is being returned. \n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken to construct an additional query and move to the next or previous page respectively.  ","fields":{"currentPageToken":{"type":"string","required":false},"nextPageToken":{"type":"string","required":false},"pageSize":{"type":"integer","required":false},"prevPageToken":{"type":"string","required":false},"totalCount":{"type":"integer","required":false},"totalPages":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"ExternalReferences_inner":{"type":"object","description":"","fields":{"referenceID":{"type":"string","required":false},"referenceSource":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ListBaseFields_externalReferences":{"type":"object","description":"","fields":{"referenceID":{"type":"string","required":false},"referenceSource":{"type":"string","required":false}},"calls":[],"as_field_in":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true,"Location":true,"LocationNewRequest":true,"MethodBaseClass":true,"Person":true,"PersonNewRequest":true,"Program":true,"ProgramNewRequest":true,"ScaleBaseClass":true,"Study":true,"StudyNewRequest":true,"TraitBaseClass":true,"Trial":true,"TrialNewRequest":true,"VariableBaseClass_method":true,"VariableBaseClass_scale":true,"VariableBaseClass_trait":true}},"GeoJSON":{"type":"object","description":"One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.\n\nCopied from RFC 7946 Section 3.1.1\n\nA position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or\neasting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.","fields":{"geometry":{"type":"object","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":{"Location":true,"LocationNewRequest":true,"Image":true,"ImageNewRequest":true,"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true,"GermplasmOrigin":true,"Germplasm_germplasmOrigin":true}},"GeoJSONSearchArea":{"type":"object","description":"A GeoJSON Polygon which describes an area to search for other GeoJSON objects. All contained Points and intersecting Polygons should be returned as search results. \n\nAll coordinates are decimal values on the WGS84 geographic coordinate reference system.","fields":{"geometry":{"type":"object","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":{"LocationSearchRequest":true,"ImageSearchRequest":true}},"MethodBaseClass_ontologyReference_documentationLinks":{"type":"object","description":"","fields":{"URL":{"type":"string","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":{"OntologyReference":true,"MethodBaseClass_ontologyReference":true}},"MethodBaseClass_ontologyReference":{"type":"object","description":"MIAPPE V1.1\n\n(DM-85) Variable accession number - Accession number of the variable in the Crop Ontology\n\n(DM-87) Trait accession number - Accession number of the trait in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-89) Method accession number - Accession number of the method in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-93) Scale accession number - Accession number of the scale in a suitable controlled vocabulary (Crop Ontology).","fields":{"documentationLinks":{"type":"MethodBaseClass_ontologyReference_documentationLinks[]","required":false},"ontologyDbId":{"type":"string","required":true},"ontologyName":{"type":"string","required":true},"version":{"type":"string","required":false}},"calls":[],"as_field_in":{"MethodBaseClass":true,"ScaleBaseClass":true,"TraitBaseClass":true,"VariableBaseClass_method":true,"VariableBaseClass_scale":true,"VariableBaseClass_trait":true,"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"ScaleBaseClass_validValues_categories":{"type":"object","description":"","fields":{"label":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":[],"as_field_in":{"ScaleBaseClass_validValues":true}},"ScaleBaseClass_validValues":{"type":"object","description":"","fields":{"categories":{"type":"ScaleBaseClass_validValues_categories[]","required":false},"max":{"type":"integer","required":false},"min":{"type":"integer","required":false}},"calls":[],"as_field_in":{"ScaleBaseClass":true,"VariableBaseClass_scale":true}},"Study_contacts":{"type":"object","description":"","fields":{"contactDbId":{"type":"string","required":true},"email":{"type":"string","required":false},"instituteName":{"type":"string","required":false},"name":{"type":"string","required":false},"orcid":{"type":"string","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":{"Study":true,"StudyNewRequest":true,"Trial":true,"TrialNewRequest":true}},"Study_dataLinks":{"type":"object","description":"","fields":{"dataFormat":{"type":"string","required":false},"description":{"type":"string","required":false},"fileFormat":{"type":"string","required":false},"name":{"type":"string","required":false},"provenance":{"type":"string","required":false},"scientificType":{"type":"string","required":false},"url":{"type":"string","required":false},"version":{"type":"string","required":false}},"calls":[],"as_field_in":{"Study":true,"StudyNewRequest":true}},"Study_environmentParameters":{"type":"object","description":"","fields":{"description":{"type":"string","required":true},"parameterName":{"type":"string","required":true},"parameterPUI":{"type":"string","required":false},"unit":{"type":"string","required":false},"unitPUI":{"type":"string","required":false},"value":{"type":"string","required":false},"valuePUI":{"type":"string","required":false}},"calls":[],"as_field_in":{"Study":true,"StudyNewRequest":true}},"Study_experimentalDesign":{"type":"object","description":"The experimental and statistical design full description plus a category PUI taken from crop research ontology or agronomy ontology","fields":{"PUI":{"type":"string","required":false},"description":{"type":"string","required":false}},"calls":[],"as_field_in":{"Study":true,"StudyNewRequest":true}},"Study_growthFacility":{"type":"object","description":"Short description of the facility in which the study was carried out.","fields":{"PUI":{"type":"string","required":false},"description":{"type":"string","required":false}},"calls":[],"as_field_in":{"Study":true,"StudyNewRequest":true}},"Study_lastUpdate":{"type":"object","description":"The date and time when this study was last modified","fields":{"timestamp":{"type":"string","required":false},"version":{"type":"string","required":false}},"calls":[],"as_field_in":{"Study":true,"StudyNewRequest":true}},"ObservationUnitHierarchyLevel_1":{"type":"object","description":"Observation levels indicate the granularity level at which the measurements are taken. `levelName` defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6). ","fields":{"levelName":{"type":"string","required":false},"levelOrder":{"type":"integer","required":false}},"calls":[],"as_field_in":{"Study":true,"StudyNewRequest":true}},"Trial_datasetAuthorships":{"type":"object","description":"","fields":{"datasetPUI":{"type":"string","required":false},"license":{"type":"string","required":false},"publicReleaseDate":{"type":"string","required":false},"submissionDate":{"type":"string","required":false}},"calls":[],"as_field_in":{"Trial":true,"TrialNewRequest":true}},"Trial_publications":{"type":"object","description":"","fields":{"publicationPUI":{"type":"string","required":false},"publicationReference":{"type":"string","required":false}},"calls":[],"as_field_in":{"Trial":true,"TrialNewRequest":true}},"VariableBaseClass_method":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"bibliographicalReference":{"type":"string","required":false},"description":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"formula":{"type":"string","required":false},"methodClass":{"type":"string","required":false},"methodDbId":{"type":"string","required":false},"methodName":{"type":"string","required":false},"ontologyReference":{"type":"MethodBaseClass_ontologyReference","required":false}},"calls":[],"as_field_in":{"VariableBaseClass":true}},"VariableBaseClass_scale":{"type":"object","description":"Scale metadata","fields":{"additionalInfo":{"type":"object","required":false},"dataType":{"type":"string","required":false},"decimalPlaces":{"type":"integer","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"ontologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"scaleDbId":{"type":"string","required":false},"scaleName":{"type":"string","required":false},"validValues":{"type":"ScaleBaseClass_validValues","required":false}},"calls":[],"as_field_in":{"VariableBaseClass":true}},"VariableBaseClass_trait":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"alternativeAbbreviations":{"type":"string[]","required":false},"attribute":{"type":"string","required":false},"entity":{"type":"string","required":false},"externalReferences":{"type":"ListBaseFields_externalReferences[]","required":false},"mainAbbreviation":{"type":"string","required":false},"ontologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"status":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"traitClass":{"type":"string","required":false},"traitDbId":{"type":"string","required":false},"traitDescription":{"type":"string","required":false},"traitName":{"type":"string","required":false}},"calls":[],"as_field_in":{"VariableBaseClass":true}},"metadata_datafiles":{"type":"object","description":"A dataFile contains a URL and the relevant file metadata to represent a file","fields":{"fileDescription":{"type":"string","required":false},"fileMD5Hash":{"type":"string","required":false},"fileName":{"type":"string","required":false},"fileSize":{"type":"integer","required":false},"fileType":{"type":"string","required":false},"fileURL":{"type":"string","required":true}},"calls":[],"as_field_in":{"metadata":true,"metadataBase":true,"metadataTokenPagination":true}},"metadata_pagination":{"type":"object","description":"The pagination object is applicable only when the payload contains a \"data\" key. It describes the pagination of the data contained in the \"data\" array, as a way to identify which subset of data is being returned. \n\nPages are zero indexed, so the first page will be page 0 (zero).","fields":{"currentPage":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"totalCount":{"type":"integer","required":false},"totalPages":{"type":"integer","required":false}},"calls":[],"as_field_in":{"metadata":true}},"metadata_status":{"type":"object","description":"An array of status messages to convey technical logging information from the server to the client.","fields":{"message":{"type":"string","required":true},"messageType":{"type":"string","required":true}},"calls":[],"as_field_in":{"metadata":true,"metadataBase":true,"metadataTokenPagination":true}},"metadataTokenPagination_pagination":{"type":"object","description":"The pagination object is applicable only when the payload contains a \"data\" key. It describes the pagination of the data contained in the \"data\" array, as a way to identify which subset of data is being returned. \n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken to construct an additional query and move to the next or previous page respectively.  ","fields":{"currentPageToken":{"type":"string","required":false},"nextPageToken":{"type":"string","required":false},"pageSize":{"type":"integer","required":false},"prevPageToken":{"type":"string","required":false},"totalCount":{"type":"integer","required":false},"totalPages":{"type":"integer","required":false}},"calls":[],"as_field_in":{"metadataTokenPagination":true}},"commonCropNamesResponse_result":{"type":"object","description":"","fields":{"data":{"type":"string[]","required":true}},"calls":{"\/commoncropnames":true},"as_field_in":[]},"202AcceptedSearchResponse_result":{"type":"object","description":"","fields":{"searchResultsDbId":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"studyTypesResponse_result":{"type":"object","description":"","fields":{"data":{"type":"string[]","required":true}},"calls":{"\/studytypes":true},"as_field_in":[]},"Event":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"date":{"type":"string[]","required":false},"eventDbId":{"type":"string","required":true},"eventDescription":{"type":"string","required":false},"eventParameters":{"type":"Event_eventParameters[]","required":false},"eventType":{"type":"string","required":true},"eventTypeDbId":{"type":"string","required":false},"observationUnitDbIds":{"type":"string[]","required":false},"studyDbId":{"type":"string","required":false}},"calls":{"\/events":true},"as_field_in":[]},"Image":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"copyright":{"type":"string","required":false},"description":{"type":"string","required":false},"descriptiveOntologyTerms":{"type":"string[]","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"imageDbId":{"type":"string","required":false},"imageFileName":{"type":"string","required":false},"imageFileSize":{"type":"integer","required":false},"imageHeight":{"type":"integer","required":false},"imageLocation":{"type":"GeoJSON","required":false},"imageName":{"type":"string","required":false},"imageTimeStamp":{"type":"string","required":false},"imageURL":{"type":"string","required":false},"imageWidth":{"type":"integer","required":false},"mimeType":{"type":"string","required":false},"observationDbIds":{"type":"string[]","required":false},"observationUnitDbId":{"type":"string","required":false}},"calls":{"\/images":true,"\/images\/{imageDbId}":true,"\/images\/{imageDbId}\/imagecontent":true,"\/search\/images":true,"\/search\/images\/{searchResultsDbId}":true},"as_field_in":[]},"ImageNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"copyright":{"type":"string","required":false},"description":{"type":"string","required":false},"descriptiveOntologyTerms":{"type":"string[]","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"imageFileName":{"type":"string","required":false},"imageFileSize":{"type":"integer","required":false},"imageHeight":{"type":"integer","required":false},"imageLocation":{"type":"GeoJSON","required":false},"imageName":{"type":"string","required":false},"imageTimeStamp":{"type":"string","required":false},"imageURL":{"type":"string","required":false},"imageWidth":{"type":"integer","required":false},"mimeType":{"type":"string","required":false},"observationDbIds":{"type":"string[]","required":false},"observationUnitDbId":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ImageSearchRequest":{"type":"object","description":"","fields":{"descriptiveOntologyTerms":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"imageDbIds":{"type":"string[]","required":false},"imageFileNames":{"type":"string[]","required":false},"imageFileSizeMax":{"type":"integer","required":false},"imageFileSizeMin":{"type":"integer","required":false},"imageHeightMax":{"type":"integer","required":false},"imageHeightMin":{"type":"integer","required":false},"imageLocation":{"type":"GeoJSONSearchArea","required":false},"imageNames":{"type":"string[]","required":false},"imageTimeStampRangeEnd":{"type":"string","required":false},"imageTimeStampRangeStart":{"type":"string","required":false},"imageWidthMax":{"type":"integer","required":false},"imageWidthMin":{"type":"integer","required":false},"mimeTypes":{"type":"string[]","required":false},"observationDbIds":{"type":"string[]","required":false},"observationUnitDbIds":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"Method":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"bibliographicalReference":{"type":"string","required":false},"description":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"formula":{"type":"string","required":false},"methodClass":{"type":"string","required":false},"methodDbId":{"type":"string","required":false},"methodName":{"type":"string","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false}},"calls":{"\/methods":true,"\/methods\/{methodDbId}":true},"as_field_in":[]},"Observation":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"collector":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"observationDbId":{"type":"string","required":false},"observationTimeStamp":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"observationUnitName":{"type":"string","required":false},"observationVariableDbId":{"type":"string","required":false},"observationVariableName":{"type":"string","required":false},"season":{"type":"Observation_season","required":false},"studyDbId":{"type":"string","required":false},"uploadedBy":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":{"\/observations":true,"\/observations\/{observationDbId}":true,"\/search\/observations":true,"\/search\/observations\/{searchResultsDbId}":true},"as_field_in":[]},"ObservationNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"collector":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"observationTimeStamp":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"observationUnitName":{"type":"string","required":false},"observationVariableDbId":{"type":"string","required":false},"observationVariableName":{"type":"string","required":false},"season":{"type":"Observation_season","required":false},"studyDbId":{"type":"string","required":false},"uploadedBy":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ObservationSearchRequest":{"type":"object","description":"","fields":{"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false},"locationDbIds":{"type":"string[]","required":false},"locationNames":{"type":"string[]","required":false},"observationDbIds":{"type":"string[]","required":false},"observationLevelRelationships":{"type":"ObservationUnitLevelRelationship_1[]","required":false},"observationLevels":{"type":"ObservationUnitLevelRelationship_1[]","required":false},"observationTimeStampRangeEnd":{"type":"string","required":false},"observationTimeStampRangeStart":{"type":"string","required":false},"observationUnitDbIds":{"type":"string[]","required":false},"observationVariableDbIds":{"type":"string[]","required":false},"observationVariableNames":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"programDbIds":{"type":"string[]","required":false},"programNames":{"type":"string[]","required":false},"seasonDbIds":{"type":"string[]","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false},"trialDbIds":{"type":"string[]","required":false},"trialNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"ObservationTable":{"type":"object","description":"","fields":{"data":{"type":"array[]","required":false},"headerRow":{"type":"string[]","required":false},"observationVariables":{"type":"ObservationTable_observationVariables[]","required":false}},"calls":{"\/observations\/table":true},"as_field_in":[]},"ObservationTreatment":{"type":"object","description":"","fields":{"factor":{"type":"string","required":false},"modality":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ObservationUnit":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"locationDbId":{"type":"string","required":false},"locationName":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"observationUnitName":{"type":"string","required":false},"observationUnitPUI":{"type":"string","required":false},"observationUnitPosition":{"type":"ObservationUnit_observationUnitPosition","required":false},"observations":{"type":"ObservationUnit_observations[]","required":false},"programDbId":{"type":"string","required":false},"programName":{"type":"string","required":false},"seedLotDbId":{"type":"string","required":false},"studyDbId":{"type":"string","required":false},"studyName":{"type":"string","required":false},"treatments":{"type":"ObservationUnit_treatments[]","required":false},"trialDbId":{"type":"string","required":false},"trialName":{"type":"string","required":false}},"calls":{"\/observationunits":true,"\/observationunits\/{observationUnitDbId}":true,"\/search\/observationunits":true,"\/search\/observationunits\/{searchResultsDbId}":true},"as_field_in":[]},"ObservationUnitLevelRelationship":{"type":"object","description":"Observation levels indicate the granularity level at which the measurements are taken. \n\n`levelName` defines the level \n\n`levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6). \n\n`levelCode` is an ID code for this level tag. Identify this observation unit by each level of the hierarchy where it exists","fields":{"levelCode":{"type":"string","required":false},"levelName":{"type":"string","required":false},"levelOrder":{"type":"integer","required":false}},"calls":[],"as_field_in":[]},"ObservationUnitNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"locationDbId":{"type":"string","required":false},"locationName":{"type":"string","required":false},"observationUnitName":{"type":"string","required":false},"observationUnitPUI":{"type":"string","required":false},"observationUnitPosition":{"type":"ObservationUnit_observationUnitPosition","required":false},"programDbId":{"type":"string","required":false},"programName":{"type":"string","required":false},"seedLotDbId":{"type":"string","required":false},"studyDbId":{"type":"string","required":false},"studyName":{"type":"string","required":false},"treatments":{"type":"ObservationUnit_treatments[]","required":false},"trialDbId":{"type":"string","required":false},"trialName":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ObservationUnitPosition":{"type":"object","description":"All positional and layout information related to this Observation Unit\n\nMIAPPE V1.1 (DM-73) Spatial distribution - Type and value of a spatial coordinate (georeference or relative) or level of observation (plot 45, subblock 7, block 2) provided as a key-value pair of the form type:value. Levels of observation must be consistent with those listed in the Study section.","fields":{"entryType":{"type":"string","required":false},"geoCoordinates":{"type":"GeoJSON","required":false},"observationLevel":{"type":"ObservationUnitLevelRelationship_2","required":false},"observationLevelRelationships":{"type":"ObservationUnitLevelRelationship_1[]","required":false},"positionCoordinateX":{"type":"string","required":false},"positionCoordinateXType":{"type":"string","required":false},"positionCoordinateY":{"type":"string","required":false},"positionCoordinateYType":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ObservationUnitSearchRequest":{"type":"object","description":"","fields":{"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false},"includeObservations":{"type":"boolean","required":false},"locationDbIds":{"type":"string[]","required":false},"locationNames":{"type":"string[]","required":false},"observationLevelRelationships":{"type":"ObservationUnitLevelRelationship_1[]","required":false},"observationLevels":{"type":"ObservationUnitLevelRelationship_1[]","required":false},"observationUnitDbIds":{"type":"string[]","required":false},"observationVariableDbIds":{"type":"string[]","required":false},"observationVariableNames":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"programDbIds":{"type":"string[]","required":false},"programNames":{"type":"string[]","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false},"trialDbIds":{"type":"string[]","required":false},"trialNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"ObservationUnitTable":{"type":"object","description":"","fields":{"data":{"type":"array[]","required":false},"headerRow":{"type":"string[]","required":false},"observationVariables":{"type":"ObservationTable_observationVariables[]","required":false}},"calls":{"\/observationunits\/table":true},"as_field_in":[]},"ObservationVariable":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"contextOfUse":{"type":"string[]","required":false},"defaultValue":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"growthStage":{"type":"string","required":false},"institution":{"type":"string","required":false},"language":{"type":"string","required":false},"method":{"type":"ObservationVariable_method","required":false},"observationVariableDbId":{"type":"string","required":false},"observationVariableName":{"type":"string","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false},"scale":{"type":"ObservationVariable_scale","required":false},"scientist":{"type":"string","required":false},"status":{"type":"string","required":false},"submissionTimestamp":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"trait":{"type":"ObservationVariable_trait","required":false}},"calls":{"\/search\/variables":true,"\/search\/variables\/{searchResultsDbId}":true,"\/variables":true,"\/variables\/{observationVariableDbId}":true},"as_field_in":[]},"ObservationVariableNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"contextOfUse":{"type":"string[]","required":false},"defaultValue":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"growthStage":{"type":"string","required":false},"institution":{"type":"string","required":false},"language":{"type":"string","required":false},"method":{"type":"ObservationVariable_method","required":false},"observationVariableName":{"type":"string","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false},"scale":{"type":"ObservationVariable_scale","required":false},"scientist":{"type":"string","required":false},"status":{"type":"string","required":false},"submissionTimestamp":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"trait":{"type":"ObservationVariable_trait","required":false}},"calls":[],"as_field_in":[]},"ObservationVariableSearchRequest":{"type":"object","description":"","fields":{"dataTypes":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"methodDbIds":{"type":"string[]","required":false},"observationVariableDbIds":{"type":"string[]","required":false},"observationVariableNames":{"type":"string[]","required":false},"ontologyDbIds":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"scaleDbIds":{"type":"string[]","required":false},"studyDbId":{"type":"string[]","required":false},"traitClasses":{"type":"string[]","required":false},"traitDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"Ontology":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"authors":{"type":"string","required":false},"copyright":{"type":"string","required":false},"description":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"licence":{"type":"string","required":false},"ontologyDbId":{"type":"string","required":true},"ontologyName":{"type":"string","required":true},"version":{"type":"string","required":false}},"calls":{"\/ontologies":true},"as_field_in":[]},"Scale":{"type":"object","description":"Scale metadata","fields":{"additionalInfo":{"type":"object","required":false},"dataType":{"type":"string","required":false},"decimalPlaces":{"type":"integer","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false},"scaleDbId":{"type":"string","required":false},"scaleName":{"type":"string","required":false},"validValues":{"type":"ObservationVariable_scale_validValues","required":false}},"calls":{"\/scales":true,"\/scales\/{scaleDbId}":true},"as_field_in":[]},"Trait":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"alternativeAbbreviations":{"type":"string[]","required":false},"attribute":{"type":"string","required":false},"entity":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"mainAbbreviation":{"type":"string","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false},"status":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"traitClass":{"type":"string","required":false},"traitDbId":{"type":"string","required":false},"traitDescription":{"type":"string","required":false},"traitName":{"type":"string","required":false}},"calls":{"\/traits":true,"\/traits\/{traitDbId}":true},"as_field_in":[]},"Event_eventParameters":{"type":"object","description":"","fields":{"key":{"type":"string","required":false},"rdfValue":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":[],"as_field_in":{"Event":true}},"Image_externalReferences":{"type":"object","description":"","fields":{"referenceID":{"type":"string","required":false},"referenceSource":{"type":"string","required":false}},"calls":[],"as_field_in":{"Image":true,"ImageNewRequest":true,"Method":true,"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Scale":true,"Trait":true,"ObservationUnit_observations":true,"ObservationVariable_method":true,"ObservationVariable_scale":true,"ObservationVariable_trait":true}},"Method_ontologyReference_documentationLinks":{"type":"object","description":"","fields":{"URL":{"type":"string","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":{"Method_ontologyReference":true}},"Method_ontologyReference":{"type":"object","description":"MIAPPE V1.1\n\n(DM-85) Variable accession number - Accession number of the variable in the Crop Ontology\n\n(DM-87) Trait accession number - Accession number of the trait in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-89) Method accession number - Accession number of the method in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-93) Scale accession number - Accession number of the scale in a suitable controlled vocabulary (Crop Ontology).","fields":{"documentationLinks":{"type":"Method_ontologyReference_documentationLinks[]","required":false},"ontologyDbId":{"type":"string","required":true},"ontologyName":{"type":"string","required":true},"version":{"type":"string","required":false}},"calls":[],"as_field_in":{"Method":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Scale":true,"Trait":true,"ObservationVariable_method":true,"ObservationVariable_scale":true,"ObservationVariable_trait":true}},"Observation_season":{"type":"object","description":"","fields":{"season":{"type":"string","required":false},"seasonDbId":{"type":"string","required":true},"year":{"type":"integer","required":false}},"calls":[],"as_field_in":{"Observation":true,"ObservationNewRequest":true,"ObservationUnit_observations":true}},"ObservationUnitLevelRelationship_1":{"type":"object","description":"Observation levels indicate the granularity level at which the measurements are taken. \n\n`levelName` defines the level \n\n`levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6). \n\n`levelCode` is an ID code for this level tag. Identify this observation unit by each level of the hierarchy where it exists","fields":{"levelCode":{"type":"string","required":false},"levelName":{"type":"string","required":false},"levelOrder":{"type":"integer","required":false}},"calls":[],"as_field_in":{"ObservationSearchRequest":true,"ObservationUnitPosition":true,"ObservationUnitSearchRequest":true,"ObservationUnit_observationUnitPosition":true}},"ObservationTable_observationVariables":{"type":"object","description":"","fields":{"observationVariableDbId":{"type":"string","required":false},"observationVariableName":{"type":"string","required":false}},"calls":[],"as_field_in":{"ObservationTable":true,"ObservationUnitTable":true}},"ObservationUnitLevelRelationship_2":{"type":"object","description":"The exact level and level code of an observation unit. \n\nFor more information on Observation Levels, please review the <a target=\"_blank\" href=\"https:\/\/wiki.brapi.org\/index.php\/Observation_Levels\">Observation Levels documentation<\/a>.\n\nMIAPPE V1.1 DM-71 Observation unit type \"Type of observation unit in textual form, usually one of the following: study, block, sub-block, plot, sub-plot, pot, plant. Use of other observation unit types is possible but not recommended. \nThe observation unit type can not be used to indicate sub-plant levels. However, observations can still be made on the sub-plant level, as long as the details are indicated in the associated observed variable (see observed variables).\nAlternatively, it is possible to use samples for more detailed tracing of sub-plant units, attaching the observations to them instead.\"","fields":{"levelCode":{"type":"string","required":false},"levelName":{"type":"string","required":false},"levelOrder":{"type":"integer","required":false}},"calls":[],"as_field_in":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"ObservationUnit_observationUnitPosition":{"type":"object","description":"All positional and layout information related to this Observation Unit\n\nMIAPPE V1.1 (DM-73) Spatial distribution - Type and value of a spatial coordinate (georeference or relative) or level of observation (plot 45, subblock 7, block 2) provided as a key-value pair of the form type:value. Levels of observation must be consistent with those listed in the Study section.","fields":{"entryType":{"type":"string","required":false},"geoCoordinates":{"type":"GeoJSON","required":false},"observationLevel":{"type":"ObservationUnitLevelRelationship_2","required":false},"observationLevelRelationships":{"type":"ObservationUnitLevelRelationship_1[]","required":false},"positionCoordinateX":{"type":"string","required":false},"positionCoordinateXType":{"type":"string","required":false},"positionCoordinateY":{"type":"string","required":false},"positionCoordinateYType":{"type":"string","required":false}},"calls":[],"as_field_in":{"ObservationUnit":true,"ObservationUnitNewRequest":true}},"ObservationUnit_observations":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"collector":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"observationDbId":{"type":"string","required":false},"observationTimeStamp":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"observationUnitName":{"type":"string","required":false},"observationVariableDbId":{"type":"string","required":false},"observationVariableName":{"type":"string","required":false},"season":{"type":"Observation_season","required":false},"studyDbId":{"type":"string","required":false},"uploadedBy":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":[],"as_field_in":{"ObservationUnit":true}},"ObservationUnit_treatments":{"type":"object","description":"","fields":{"factor":{"type":"string","required":false},"modality":{"type":"string","required":false}},"calls":[],"as_field_in":{"ObservationUnit":true,"ObservationUnitNewRequest":true}},"ObservationVariable_method":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"bibliographicalReference":{"type":"string","required":false},"description":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"formula":{"type":"string","required":false},"methodClass":{"type":"string","required":false},"methodDbId":{"type":"string","required":false},"methodName":{"type":"string","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false}},"calls":[],"as_field_in":{"ObservationVariable":true,"ObservationVariableNewRequest":true}},"ObservationVariable_scale_validValues_categories":{"type":"object","description":"","fields":{"label":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":[],"as_field_in":{"ObservationVariable_scale_validValues":true}},"ObservationVariable_scale_validValues":{"type":"object","description":"","fields":{"categories":{"type":"ObservationVariable_scale_validValues_categories[]","required":false},"max":{"type":"integer","required":false},"min":{"type":"integer","required":false}},"calls":[],"as_field_in":{"Scale":true,"ObservationVariable_scale":true}},"ObservationVariable_scale":{"type":"object","description":"Scale metadata","fields":{"additionalInfo":{"type":"object","required":false},"dataType":{"type":"string","required":false},"decimalPlaces":{"type":"integer","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false},"scaleDbId":{"type":"string","required":false},"scaleName":{"type":"string","required":false},"validValues":{"type":"ObservationVariable_scale_validValues","required":false}},"calls":[],"as_field_in":{"ObservationVariable":true,"ObservationVariableNewRequest":true}},"ObservationVariable_trait":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"alternativeAbbreviations":{"type":"string[]","required":false},"attribute":{"type":"string","required":false},"entity":{"type":"string","required":false},"externalReferences":{"type":"Image_externalReferences[]","required":false},"mainAbbreviation":{"type":"string","required":false},"ontologyReference":{"type":"Method_ontologyReference","required":false},"status":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"traitClass":{"type":"string","required":false},"traitDbId":{"type":"string","required":false},"traitDescription":{"type":"string","required":false},"traitName":{"type":"string","required":false}},"calls":[],"as_field_in":{"ObservationVariable":true,"ObservationVariableNewRequest":true}},"Analysis":{"type":"object","description":"An analysis contains an interpretation of one or several experiments. (e.g. SNVs, copy number variations, methylation status) together with information about the methodology used.","fields":{"analysisDbId":{"type":"string","required":false},"analysisName":{"type":"string","required":false},"created":{"type":"string","required":false},"description":{"type":"string","required":false},"software":{"type":"string[]","required":false},"type":{"type":"string","required":false},"updated":{"type":"string","required":false}},"calls":[],"as_field_in":{"VariantSet":true}},"Call":{"type":"object","description":"A `Call` represents the determination of genotype with respect to a particular `Variant`.\n\nIt may include associated information such as quality and phasing. For example, a call might assign a probability of 0.32 to the occurrence of a SNP named RS_1234 in a call set with the name NA_12345.","fields":{"additionalInfo":{"type":"object","required":false},"callSetDbId":{"type":"string","required":false},"callSetName":{"type":"string","required":false},"genotype":{"type":"ListValue","required":false},"genotype_likelihood":{"type":"number[]","required":false},"phaseSet":{"type":"string","required":false},"variantDbId":{"type":"string","required":false},"variantName":{"type":"string","required":false}},"calls":{"\/calls":true,"\/callsets\/{callSetDbId}\/calls":true,"\/search\/calls":true,"\/search\/calls\/{searchResultsDbId}":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/calls":true},"as_field_in":[]},"CallSet":{"type":"object","description":"A CallSet is a collection of calls that were generated by the same analysis of the same sample.","fields":{"additionalInfo":{"type":"object","required":false},"callSetDbId":{"type":"string","required":false},"callSetName":{"type":"string","required":false},"created":{"type":"string","required":false},"sampleDbId":{"type":"string","required":false},"studyDbId":{"type":"string","required":false},"updated":{"type":"string","required":false},"variantSetDbIds":{"type":"string[]","required":false}},"calls":{"\/callsets":true,"\/callsets\/{callSetDbId}":true,"\/search\/callsets":true,"\/search\/callsets\/{searchResultsDbId}":true,"\/variantsets\/{variantSetDbId}\/callsets":true},"as_field_in":[]},"CallsSearchRequest":{"type":"object","description":"","fields":{"callSetDbIds":{"type":"string[]","required":false},"expandHomozygotes":{"type":"boolean","required":false},"pageSize":{"type":"integer","required":false},"pageToken":{"type":"string","required":false},"sepPhased":{"type":"string","required":false},"sepUnphased":{"type":"string","required":false},"unknownString":{"type":"string","required":false},"variantDbIds":{"type":"string[]","required":false},"variantSetDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"GenomeMap":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"comments":{"type":"string","required":false},"commonCropName":{"type":"string","required":true},"documentationURL":{"type":"string","required":false},"linkageGroupCount":{"type":"integer","required":false},"mapDbId":{"type":"string","required":true},"mapName":{"type":"string","required":false},"mapPUI":{"type":"string","required":false},"markerCount":{"type":"integer","required":false},"publishedDate":{"type":"string","required":false},"scientificName":{"type":"string","required":false},"type":{"type":"string","required":true},"unit":{"type":"string","required":false}},"calls":{"\/maps":true,"\/maps\/{mapDbId}":true},"as_field_in":[]},"LinkageGroup":{"type":"object","description":"a Linkage Group is the BrAPI generic term for a named section of a map. A Linkage Group can represent a Chromosome, Scaffold, or Linkage Group.","fields":{"additionalInfo":{"type":"object","required":false},"linkageGroupName":{"type":"string","required":false},"markerCount":{"type":"integer","required":false},"maxPosition":{"type":"integer","required":false}},"calls":{"\/maps\/{mapDbId}\/linkagegroups":true},"as_field_in":[]},"ListValue":{"type":"object","description":"`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is JSON array.","fields":{"values":{"type":"array","required":false}},"calls":[],"as_field_in":{"Call":true}},"MarkerPosition":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"linkageGroupName":{"type":"string","required":false},"mapDbId":{"type":"string","required":false},"mapName":{"type":"string","required":false},"position":{"type":"integer","required":false},"variantDbId":{"type":"string","required":false},"variantName":{"type":"string","required":false}},"calls":{"\/markerpositions":true,"\/search\/markerpositions":true,"\/search\/markerpositions\/{searchResultsDbId}":true},"as_field_in":[]},"MarkerPositionSearchRequest":{"type":"object","description":"","fields":{"linkageGroupNames":{"type":"string[]","required":false},"mapDbIds":{"type":"string[]","required":false},"maxPosition":{"type":"integer","required":false},"minPosition":{"type":"integer","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"variantDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"Measurement":{"type":"object","description":"A value with units","fields":{"units":{"type":"string","required":false},"value":{"type":"number","required":false}},"calls":[],"as_field_in":[]},"OntologyTerm":{"type":"object","description":"An ontology term describing an attribute.","fields":{"term":{"type":"string","required":false},"termURI":{"type":"string","required":false}},"calls":[],"as_field_in":{"Reference":true,"ReferenceSet":true}},"PlateFormat":{"type":"string","description":"Enum for plate formats, usually \"PLATE_96\" for a 96 well plate or \"TUBES\" for plateless format","fields":[],"calls":[],"as_field_in":{"VendorPlate":true,"VendorPlateSubmission_plates":true}},"Reference":{"type":"object","description":"A `Reference` is a canonical assembled contig, intended to act as a reference coordinate space for other genomic annotations. A single `Reference` might represent the human chromosome 1, for instance. `References` are designed to be immutable.","fields":{"additionalInfo":{"type":"object","required":false},"isDerived":{"type":"boolean","required":false},"length":{"type":"integer","required":false},"md5checksum":{"type":"string","required":false},"referenceDbId":{"type":"string","required":false},"referenceName":{"type":"string","required":false},"referenceSetDbId":{"type":"string","required":false},"sourceAccessions":{"type":"string[]","required":false},"sourceDivergence":{"type":"number","required":false},"sourceURI":{"type":"string","required":false},"species":{"type":"OntologyTerm","required":false}},"calls":{"\/references":true,"\/references\/{referenceDbId}":true,"\/search\/references":true,"\/search\/references\/{searchResultsDbId}":true},"as_field_in":[]},"ReferenceBases":{"type":"object","description":"A string representation of the reference base alleles.","fields":{"nextPageToken":{"type":"string","required":false},"offset":{"type":"integer","required":false},"sequence":{"type":"string","required":false}},"calls":{"\/references\/{referenceDbId}\/bases":true},"as_field_in":[]},"ReferenceSet":{"type":"object","description":"A `ReferenceSet` is a set of `Reference` s which typically comprise a reference assembly, such as `GRCH_38`. A `ReferenceSet` defines a common coordinate space for comparing reference-aligned experimental data.","fields":{"additionalInfo":{"type":"object","required":false},"assemblyPUI":{"type":"string","required":false},"description":{"type":"string","required":false},"isDerived":{"type":"boolean","required":false},"md5checksum":{"type":"string","required":false},"referenceSetDbId":{"type":"string","required":false},"referenceSetName":{"type":"string","required":false},"sourceAccessions":{"type":"string[]","required":false},"sourceURI":{"type":"string","required":false},"species":{"type":"OntologyTerm","required":false}},"calls":{"\/referencesets":true,"\/referencesets\/{referenceSetDbId}":true,"\/search\/referencesets":true,"\/search\/referencesets\/{searchResultsDbId}":true},"as_field_in":[]},"ReferenceSetsSearchRequest":{"type":"object","description":"","fields":{"accessions":{"type":"string[]","required":false},"assemblyPUIs":{"type":"string[]","required":false},"md5checksums":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"referenceSetDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"ReferencesSearchRequest":{"type":"object","description":"","fields":{"accessions":{"type":"string[]","required":false},"isDerived":{"type":"boolean","required":false},"maxLength":{"type":"integer","required":false},"md5checksums":{"type":"string[]","required":false},"minLength":{"type":"integer","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"referenceDbIds":{"type":"string[]","required":false},"referenceSetDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"Sample":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"column":{"type":"integer","required":false},"externalReferences":{"type":"MethodBaseClass_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"plateDbId":{"type":"string","required":false},"plateName":{"type":"string","required":false},"programDbId":{"type":"string","required":false},"row":{"type":"string","required":false},"sampleBarcode":{"type":"string","required":false},"sampleDbId":{"type":"string","required":false},"sampleDescription":{"type":"string","required":false},"sampleGroupDbId":{"type":"string","required":false},"sampleName":{"type":"string","required":false},"samplePUI":{"type":"string","required":false},"sampleTimestamp":{"type":"string","required":false},"sampleType":{"type":"string","required":false},"studyDbId":{"type":"string","required":false},"takenBy":{"type":"string","required":false},"tissueType":{"type":"string","required":false},"trialDbId":{"type":"string","required":false},"well":{"type":"string","required":false}},"calls":{"\/samples":true,"\/samples\/{sampleDbId}":true,"\/search\/samples":true,"\/search\/samples\/{searchResultsDbId}":true},"as_field_in":[]},"SampleNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"column":{"type":"integer","required":false},"externalReferences":{"type":"MethodBaseClass_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"plateDbId":{"type":"string","required":false},"plateName":{"type":"string","required":false},"programDbId":{"type":"string","required":false},"row":{"type":"string","required":false},"sampleBarcode":{"type":"string","required":false},"sampleDescription":{"type":"string","required":false},"sampleGroupDbId":{"type":"string","required":false},"sampleName":{"type":"string","required":false},"samplePUI":{"type":"string","required":false},"sampleTimestamp":{"type":"string","required":false},"sampleType":{"type":"string","required":false},"studyDbId":{"type":"string","required":false},"takenBy":{"type":"string","required":false},"tissueType":{"type":"string","required":false},"trialDbId":{"type":"string","required":false},"well":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"SampleSearchRequest":{"type":"object","description":"","fields":{"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false},"observationUnitDbIds":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"plateDbIds":{"type":"string[]","required":false},"sampleDbIds":{"type":"string[]","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"Variant":{"type":"object","description":"A `Variant` represents a change in DNA sequence relative to some reference.\nFor example, a variant could represent a SNP or an insertion.\nVariants belong to a `VariantSet`.\nThis is equivalent to a row in VCF.","fields":{"additionalInfo":{"type":"object","required":false},"alternate_bases":{"type":"string[]","required":false},"ciend":{"type":"integer[]","required":false},"cipos":{"type":"integer[]","required":false},"created":{"type":"string","required":false},"end":{"type":"integer","required":false},"filtersApplied":{"type":"boolean","required":false},"filtersFailed":{"type":"string[]","required":false},"filtersPassed":{"type":"boolean","required":false},"referenceBases":{"type":"string","required":false},"referenceName":{"type":"string","required":false},"start":{"type":"integer","required":false},"svlen":{"type":"integer","required":false},"updated":{"type":"string","required":false},"variantDbId":{"type":"string","required":false},"variantNames":{"type":"string[]","required":false},"variantSetDbId":{"type":"string[]","required":false},"variantType":{"type":"string","required":false}},"calls":{"\/search\/variants":true,"\/search\/variants\/{searchResultsDbId}":true,"\/variants":true,"\/variants\/{variantDbId}":true,"\/variantsets\/{variantSetDbId}\/variants":true},"as_field_in":[]},"VariantSet":{"type":"object","description":"A VariantSet is a collection of variants and variant calls intended to be analyzed together.","fields":{"additionalInfo":{"type":"object","required":false},"analysis":{"type":"Analysis[]","required":false},"availableFormats":{"type":"VariantSet_availableFormats[]","required":false},"callSetCount":{"type":"integer","required":false},"referenceSetDbId":{"type":"string","required":false},"studyDbId":{"type":"string","required":false},"variantCount":{"type":"integer","required":false},"variantSetDbId":{"type":"string","required":false},"variantSetName":{"type":"string","required":false}},"calls":{"\/search\/variantsets":true,"\/search\/variantsets\/{searchResultsDbId}":true,"\/variantsets":true,"\/variantsets\/extract":true,"\/variantsets\/{variantSetDbId}":true},"as_field_in":[]},"VariantSetsExtractRequest":{"type":"object","description":"Request object for extracting data subsets as new Variant Sets","fields":{"callSetDbIds":{"type":"string[]","required":false},"expandHomozygotes":{"type":"boolean","required":false},"sepPhased":{"type":"string","required":false},"sepUnphased":{"type":"string","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false},"unknownString":{"type":"string","required":false},"variantDbIds":{"type":"string[]","required":false},"variantSetDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"VariantSetsSearchRequest":{"type":"object","description":"","fields":{"callSetDbIds":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false},"variantDbIds":{"type":"string[]","required":false},"variantSetDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"VendorContact":{"type":"object","description":"","fields":{"vendorAddress":{"type":"string","required":false},"vendorCity":{"type":"string","required":false},"vendorContactName":{"type":"string","required":false},"vendorCountry":{"type":"string","required":false},"vendorDescription":{"type":"string","required":false},"vendorEmail":{"type":"string","required":false},"vendorName":{"type":"string","required":true},"vendorPhone":{"type":"string","required":false},"vendorURL":{"type":"string","required":false}},"calls":[],"as_field_in":{"VendorSpecification":true}},"VendorOrder":{"type":"object","description":"The details of a vendor order","fields":{"clientId":{"type":"string","required":true},"numberOfSamples":{"type":"integer","required":true},"orderId":{"type":"string","required":true},"requiredServiceInfo":{"type":"object","required":false},"serviceIds":{"type":"string[]","required":true}},"calls":{"\/vendor\/orders":true},"as_field_in":[]},"VendorOrderSubmission":{"type":"object","description":"Response to an order request","fields":{"orderId":{"type":"string","required":true},"shipmentForms":{"type":"ShipmentForm[]","required":false}},"calls":{"\/vendor\/orders":true},"as_field_in":[]},"VendorOrderSubmissionRequest":{"type":"object","description":"Request object structure to submit plate data to a vendor","fields":{"clientId":{"type":"string","required":false},"numberOfSamples":{"type":"integer","required":false},"plates":{"type":"VendorOrderSubmissionRequest_plates[]","required":false},"requiredServiceInfo":{"type":"object","required":false},"sampleType":{"type":"string","required":false},"serviceIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"VendorPlate":{"type":"object","description":"","fields":{"clientPlateBarcode":{"type":"string","required":false},"clientPlateId":{"type":"string","required":false},"sampleSubmissionFormat":{"type":"PlateFormat","required":false},"samples":{"type":"VendorSample[]","required":false}},"calls":{"\/vendor\/orders\/{orderId}\/plates":true},"as_field_in":[]},"VendorPlateSubmission":{"type":"object","description":"Response of a plate submission","fields":{"clientId":{"type":"string","required":true},"numberOfSamples":{"type":"integer","required":true},"plates":{"type":"VendorPlateSubmission_plates[]","required":true}},"calls":{"\/vendor\/plates\/{submissionId}":true},"as_field_in":[]},"VendorPlateSubmissionId":{"type":"object","description":"Response to an order request","fields":{"submissionId":{"type":"string","required":true}},"calls":{"\/vendor\/plates":true},"as_field_in":[]},"VendorPlateSubmissionRequest":{"type":"object","description":"Request object structure to submit plate data to a vendor","fields":{"clientId":{"type":"string","required":true},"numberOfSamples":{"type":"integer","required":true},"plates":{"type":"VendorOrderSubmissionRequest_plates[]","required":true},"sampleType":{"type":"string","required":true}},"calls":[],"as_field_in":[]},"VendorResultFile":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"clientSampleIds":{"type":"string[]","required":true},"fileName":{"type":"string","required":true},"fileType":{"type":"string","required":true},"fileURL":{"type":"string","required":true},"md5sum":{"type":"string","required":false}},"calls":{"\/vendor\/orders\/{orderId}\/results":true},"as_field_in":[]},"VendorSample":{"type":"object","description":"","fields":{"clientSampleBarCode":{"type":"string","required":false},"clientSampleId":{"type":"string","required":true},"column":{"type":"integer","required":false},"comments":{"type":"string","required":false},"concentration":{"type":"VendorOrderSubmissionRequest_concentration","required":false},"organismName":{"type":"string","required":false},"row":{"type":"string","required":false},"speciesName":{"type":"string","required":false},"taxonomyOntologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"tissueType":{"type":"string","required":false},"tissueTypeOntologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"volume":{"type":"VendorOrderSubmissionRequest_concentration","required":false},"well":{"type":"string","required":false}},"calls":[],"as_field_in":{"VendorPlate":true,"VendorPlateSubmission_plates":true}},"VendorSpecification":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"services":{"type":"VendorSpecificationService[]","required":false},"vendorContact":{"type":"VendorContact","required":false}},"calls":{"\/vendor\/specifications":true},"as_field_in":[]},"VendorSpecificationService":{"type":"object","description":"","fields":{"serviceDescription":{"type":"string","required":false},"serviceId":{"type":"string","required":true},"serviceName":{"type":"string","required":true},"servicePlatformMarkerType":{"type":"string","required":false},"servicePlatformName":{"type":"string","required":false},"specificRequirements":{"type":"VendorSpecificationService_specificRequirements[]","required":false}},"calls":[],"as_field_in":{"VendorSpecification":true}},"callSetsSearchRequest":{"type":"object","description":"","fields":{"callSetDbIds":{"type":"string[]","required":false},"callSetNames":{"type":"string[]","required":false},"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"sampleDbIds":{"type":"string[]","required":false},"sampleNames":{"type":"string[]","required":false},"variantSetDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"variantsSearchRequest":{"type":"object","description":"","fields":{"callSetDbIds":{"type":"string[]","required":false},"end":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"pageToken":{"type":"string","required":false},"referenceDbId":{"type":"string","required":false},"start":{"type":"integer","required":false},"variantDbIds":{"type":"string[]","required":false},"variantSetDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"MethodBaseClass_externalReferences":{"type":"object","description":"","fields":{"referenceID":{"type":"string","required":false},"referenceSource":{"type":"string","required":false}},"calls":[],"as_field_in":{"Sample":true,"SampleNewRequest":true}},"VariantSet_availableFormats":{"type":"object","description":"Each 'availableFormat' object is a pairing of dataFormat and fileFormat. These must be communicated in pairs because they are not independant parameters and sometimes one influences the other.","fields":{"dataFormat":{"type":"string","required":false},"fileFormat":{"type":"string","required":false},"fileURL":{"type":"string","required":false}},"calls":[],"as_field_in":{"VariantSet":true}},"ShipmentForm":{"type":"object","description":"","fields":{"fileDescription":{"type":"string","required":false},"fileName":{"type":"string","required":false},"fileURL":{"type":"string","required":true}},"calls":[],"as_field_in":{"VendorOrderSubmission":true}},"VendorOrderSubmissionRequest_concentration":{"type":"object","description":"A value with units","fields":{"units":{"type":"string","required":false},"value":{"type":"number","required":false}},"calls":[],"as_field_in":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"VendorOrderSubmissionRequest_samples":{"type":"object","description":"","fields":{"clientSampleBarCode":{"type":"string","required":false},"clientSampleId":{"type":"string","required":true},"column":{"type":"integer","required":false},"comments":{"type":"string","required":false},"concentration":{"type":"VendorOrderSubmissionRequest_concentration","required":false},"organismName":{"type":"string","required":false},"row":{"type":"string","required":false},"speciesName":{"type":"string","required":false},"taxonomyOntologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"tissueType":{"type":"string","required":false},"tissueTypeOntologyReference":{"type":"MethodBaseClass_ontologyReference","required":false},"volume":{"type":"VendorOrderSubmissionRequest_concentration","required":false},"well":{"type":"string","required":false}},"calls":[],"as_field_in":{"VendorOrderSubmissionRequest_plates":true}},"VendorOrderSubmissionRequest_plates":{"type":"object","description":"","fields":{"clientPlateBarcode":{"type":"string","required":false},"clientPlateId":{"type":"string","required":false},"sampleSubmissionFormat":{"type":"string","required":false},"samples":{"type":"VendorOrderSubmissionRequest_samples[]","required":false}},"calls":[],"as_field_in":{"VendorOrderSubmissionRequest":true,"VendorPlateSubmissionRequest":true}},"VendorPlateSubmission_plates":{"type":"object","description":"","fields":{"clientPlateBarcode":{"type":"string","required":false},"clientPlateId":{"type":"string","required":false},"sampleSubmissionFormat":{"type":"PlateFormat","required":false},"samples":{"type":"VendorSample[]","required":false}},"calls":[],"as_field_in":{"VendorPlateSubmission":true}},"VendorSpecificationService_specificRequirements":{"type":"object","description":"","fields":{"description":{"type":"string","required":false},"key":{"type":"string","required":false}},"calls":[],"as_field_in":{"VendorSpecificationService":true}},"VendorOrderStatusResponse_result":{"type":"object","description":"","fields":{"status":{"type":"string","required":false}},"calls":{"\/vendor\/orders\/{orderId}\/status":true},"as_field_in":[]},"BreedingMethod":{"type":"object","description":"","fields":{"abbreviation":{"type":"string","required":false},"breedingMethodDbId":{"type":"string","required":true},"breedingMethodName":{"type":"string","required":false},"description":{"type":"string","required":false}},"calls":{"\/breedingmethods":true,"\/breedingmethods\/{breedingMethodDbId}":true},"as_field_in":[]},"Cross":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"crossAttributes":{"type":"Cross_crossAttributes[]","required":false},"crossDbId":{"type":"string","required":false},"crossName":{"type":"string","required":false},"crossType":{"type":"string","required":false},"crossingProjectDbId":{"type":"string","required":false},"crossingProjectName":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"parent1":{"type":"Cross_parent1","required":false},"parent2":{"type":"Cross_parent1","required":false},"pollinationTimeStamp":{"type":"string","required":false}},"calls":{"\/crosses":true},"as_field_in":[]},"CrossNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"crossAttributes":{"type":"Cross_crossAttributes[]","required":false},"crossName":{"type":"string","required":false},"crossType":{"type":"string","required":false},"crossingProjectDbId":{"type":"string","required":false},"crossingProjectName":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"parent1":{"type":"Cross_parent1","required":false},"parent2":{"type":"Cross_parent1","required":false},"pollinationTimeStamp":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"CrossParent":{"type":"object","description":"","fields":{"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"observationUnitName":{"type":"string","required":false},"parentType":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"CrossingProject":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"crossingProjectDbId":{"type":"string","required":false},"crossingProjectDescription":{"type":"string","required":false},"crossingProjectName":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"programDbId":{"type":"string","required":false},"programName":{"type":"string","required":false}},"calls":{"\/crossingprojects":true,"\/crossingprojects\/{crossingProjectDbId}":true},"as_field_in":[]},"CrossingProjectNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"commonCropName":{"type":"string","required":false},"crossingProjectDescription":{"type":"string","required":false},"crossingProjectName":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"programDbId":{"type":"string","required":false},"programName":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"Germplasm":{"type":"object","description":"","fields":{"accessionNumber":{"type":"string","required":false},"acquisitionDate":{"type":"string","required":false},"additionalInfo":{"type":"object","required":false},"biologicalStatusOfAccessionCode":{"type":"string","required":false},"biologicalStatusOfAccessionDescription":{"type":"string","required":false},"breedingMethodDbId":{"type":"string","required":false},"collection":{"type":"string","required":false},"commonCropName":{"type":"string","required":false},"countryOfOriginCode":{"type":"string","required":false},"defaultDisplayName":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"donors":{"type":"Germplasm_donors[]","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"genus":{"type":"string","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"germplasmOrigin":{"type":"Germplasm_germplasmOrigin[]","required":false},"germplasmPUI":{"type":"string","required":false},"germplasmPreprocessing":{"type":"string","required":false},"instituteCode":{"type":"string","required":false},"instituteName":{"type":"string","required":false},"pedigree":{"type":"string","required":false},"seedSource":{"type":"string","required":false},"seedSourceDescription":{"type":"string","required":false},"species":{"type":"string","required":false},"speciesAuthority":{"type":"string","required":false},"storageTypes":{"type":"Germplasm_storageTypes[]","required":false},"subtaxa":{"type":"string","required":false},"subtaxaAuthority":{"type":"string","required":false},"synonyms":{"type":"Germplasm_synonyms[]","required":false},"taxonIds":{"type":"Germplasm_taxonIds[]","required":false}},"calls":{"\/germplasm":true,"\/germplasm\/{germplasmDbId}":true,"\/search\/germplasm":true,"\/search\/germplasm\/{searchResultsDbId}":true},"as_field_in":[]},"GermplasmAttribute":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"attributeCategory":{"type":"string","required":false},"attributeDbId":{"type":"string","required":false},"attributeDescription":{"type":"string","required":false},"attributeName":{"type":"string","required":false},"commonCropName":{"type":"string","required":false},"contextOfUse":{"type":"string[]","required":false},"defaultValue":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"growthStage":{"type":"string","required":false},"institution":{"type":"string","required":false},"language":{"type":"string","required":false},"method":{"type":"GermplasmAttribute_method","required":false},"ontologyReference":{"type":"GermplasmAttribute_method_ontologyReference","required":false},"scale":{"type":"GermplasmAttribute_scale","required":false},"scientist":{"type":"string","required":false},"status":{"type":"string","required":false},"submissionTimestamp":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"trait":{"type":"GermplasmAttribute_trait","required":false}},"calls":{"\/attributes":true,"\/attributes\/{attributeDbId}":true,"\/search\/attributes":true,"\/search\/attributes\/{searchResultsDbId}":true},"as_field_in":[]},"GermplasmAttributeNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"attributeCategory":{"type":"string","required":false},"attributeDescription":{"type":"string","required":false},"attributeName":{"type":"string","required":false},"commonCropName":{"type":"string","required":false},"contextOfUse":{"type":"string[]","required":false},"defaultValue":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"growthStage":{"type":"string","required":false},"institution":{"type":"string","required":false},"language":{"type":"string","required":false},"method":{"type":"GermplasmAttribute_method","required":false},"ontologyReference":{"type":"GermplasmAttribute_method_ontologyReference","required":false},"scale":{"type":"GermplasmAttribute_scale","required":false},"scientist":{"type":"string","required":false},"status":{"type":"string","required":false},"submissionTimestamp":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"trait":{"type":"GermplasmAttribute_trait","required":false}},"calls":[],"as_field_in":[]},"GermplasmAttributeSearchRequest":{"type":"object","description":"","fields":{"attributeDbIds":{"type":"string[]","required":false},"attributeNames":{"type":"string[]","required":false},"dataTypes":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"methodDbIds":{"type":"string[]","required":false},"ontologyDbIds":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"scaleDbIds":{"type":"string[]","required":false},"studyDbId":{"type":"string[]","required":false},"traitClasses":{"type":"string[]","required":false},"traitDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"GermplasmAttributeValue":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"attributeDbId":{"type":"string","required":false},"attributeName":{"type":"string","required":false},"attributeValueDbId":{"type":"string","required":false},"determinedDate":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":{"\/attributevalues":true,"\/attributevalues\/{attributeValueDbId}":true,"\/search\/attributevalues":true,"\/search\/attributevalues\/{searchResultsDbId}":true},"as_field_in":[]},"GermplasmAttributeValueNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"attributeDbId":{"type":"string","required":false},"attributeName":{"type":"string","required":true},"determinedDate":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"GermplasmAttributeValueSearchRequest":{"type":"object","description":"","fields":{"attributeDbIds":{"type":"string[]","required":false},"attributeNames":{"type":"string[]","required":false},"attributeValueDbIds":{"type":"string[]","required":false},"dataTypes":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false},"methodDbIds":{"type":"string[]","required":false},"ontologyDbIds":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"scaleDbIds":{"type":"string[]","required":false},"traitClasses":{"type":"string[]","required":false},"traitDbIds":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"GermplasmMCPD":{"type":"object","description":"","fields":{"accessionNames":{"type":"string[]","required":false},"accessionNumber":{"type":"string","required":false},"acquisitionDate":{"type":"string","required":false},"acquisitionSourceCode":{"type":"string","required":false},"alternateIDs":{"type":"string[]","required":false},"ancestralData":{"type":"string","required":false},"biologicalStatusOfAccessionCode":{"type":"string","required":false},"breedingInstitutes":{"type":"GermplasmMCPD_breedingInstitutes[]","required":false},"collectingInfo":{"type":"GermplasmMCPD_collectingInfo","required":false},"commonCropName":{"type":"string","required":false},"countryOfOrigin":{"type":"string","required":false},"donorInfo":{"type":"GermplasmMCPD_donorInfo","required":false},"genus":{"type":"string","required":false},"germplasmDbId":{"type":"string","required":false},"germplasmPUI":{"type":"string","required":false},"instituteCode":{"type":"string","required":false},"mlsStatus":{"type":"string","required":false},"remarks":{"type":"string","required":false},"safetyDuplicateInstitutes":{"type":"GermplasmMCPD_safetyDuplicateInstitutes[]","required":false},"species":{"type":"string","required":false},"speciesAuthority":{"type":"string","required":false},"storageTypeCodes":{"type":"string[]","required":false},"subtaxon":{"type":"string","required":false},"subtaxonAuthority":{"type":"string","required":false}},"calls":{"\/germplasm\/{germplasmDbId}\/mcpd":true},"as_field_in":[]},"GermplasmNewRequest":{"type":"object","description":"","fields":{"accessionNumber":{"type":"string","required":false},"acquisitionDate":{"type":"string","required":false},"additionalInfo":{"type":"object","required":false},"biologicalStatusOfAccessionCode":{"type":"string","required":false},"biologicalStatusOfAccessionDescription":{"type":"string","required":false},"breedingMethodDbId":{"type":"string","required":false},"collection":{"type":"string","required":false},"commonCropName":{"type":"string","required":true},"countryOfOriginCode":{"type":"string","required":false},"defaultDisplayName":{"type":"string","required":false},"documentationURL":{"type":"string","required":false},"donors":{"type":"Germplasm_donors[]","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"genus":{"type":"string","required":false},"germplasmName":{"type":"string","required":true},"germplasmOrigin":{"type":"Germplasm_germplasmOrigin[]","required":false},"germplasmPUI":{"type":"string","required":true},"germplasmPreprocessing":{"type":"string","required":false},"instituteCode":{"type":"string","required":false},"instituteName":{"type":"string","required":false},"pedigree":{"type":"string","required":false},"seedSource":{"type":"string","required":false},"seedSourceDescription":{"type":"string","required":false},"species":{"type":"string","required":false},"speciesAuthority":{"type":"string","required":false},"storageTypes":{"type":"Germplasm_storageTypes[]","required":false},"subtaxa":{"type":"string","required":false},"subtaxaAuthority":{"type":"string","required":false},"synonyms":{"type":"Germplasm_synonyms[]","required":false},"taxonIds":{"type":"Germplasm_taxonIds[]","required":false}},"calls":[],"as_field_in":[]},"GermplasmOrigin":{"type":"object","description":"MIAPPE V1.1 (DM-52) \n\nMIAPPE V1.1 (DM-53) \n\nMIAPPE V1.1 (DM-54) \n\nMIAPPE V1.1 (DM-55)\n\nMCPD (v2.1) (COORDUNCERT) 15.5 \n\nMCPD (v2.1) (ELEVATION) 16. \n\nMCPD (v2.1) (GEOREFMETH) 15.7 \n\nMCPD (v2.1) (DECLATITUDE) 15.1 \n\nMCPD (v2.1) (DECLONGITUDE) 15.3 ","fields":{"coordinateUncertainty":{"type":"string","required":false},"coordinates":{"type":"GeoJSON","required":false}},"calls":[],"as_field_in":[]},"GermplasmSearchRequest":{"type":"object","description":"","fields":{"accessionNumbers":{"type":"string[]","required":false},"collections":{"type":"string[]","required":false},"commonCropNames":{"type":"string[]","required":false},"externalReferenceIDs":{"type":"string[]","required":false},"externalReferenceSources":{"type":"string[]","required":false},"genus":{"type":"string[]","required":false},"germplasmDbIds":{"type":"string[]","required":false},"germplasmNames":{"type":"string[]","required":false},"germplasmPUIs":{"type":"string[]","required":false},"page":{"type":"integer","required":false},"pageSize":{"type":"integer","required":false},"parentDbIds":{"type":"string[]","required":false},"progenyDbIds":{"type":"string[]","required":false},"species":{"type":"string[]","required":false},"studyDbIds":{"type":"string[]","required":false},"studyNames":{"type":"string[]","required":false},"synonyms":{"type":"string[]","required":false}},"calls":[],"as_field_in":[]},"PedigreeNode":{"type":"object","description":"","fields":{"crossingProjectDbId":{"type":"string","required":false},"crossingYear":{"type":"integer","required":false},"familyCode":{"type":"string","required":false},"germplasmDbId":{"type":"string","required":true},"germplasmName":{"type":"string","required":false},"parents":{"type":"PedigreeNode_parents[]","required":false},"pedigree":{"type":"string","required":false},"siblings":{"type":"PedigreeNode_siblings[]","required":false}},"calls":{"\/germplasm\/{germplasmDbId}\/pedigree":true},"as_field_in":[]},"PlannedCross":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"crossType":{"type":"string","required":false},"crossingProjectDbId":{"type":"string","required":false},"crossingProjectName":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"parent1":{"type":"Cross_parent1","required":false},"parent2":{"type":"Cross_parent1","required":false},"plannedCrossDbId":{"type":"string","required":false},"plannedCrossName":{"type":"string","required":false}},"calls":{"\/plannedcrosses":true},"as_field_in":[]},"PlannedCrossNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"crossType":{"type":"string","required":false},"crossingProjectDbId":{"type":"string","required":false},"crossingProjectName":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"parent1":{"type":"Cross_parent1","required":false},"parent2":{"type":"Cross_parent1","required":false},"plannedCrossName":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"ProgenyNode":{"type":"object","description":"","fields":{"germplasmDbId":{"type":"string","required":true},"germplasmName":{"type":"string","required":false},"progeny":{"type":"ProgenyNode_progeny[]","required":true}},"calls":{"\/germplasm\/{germplasmDbId}\/progeny":true},"as_field_in":[]},"SeedLot":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"amount":{"type":"number","required":false},"createdDate":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"lastUpdated":{"type":"string","required":false},"locationDbId":{"type":"string","required":false},"programDbId":{"type":"string","required":false},"seedLotDbId":{"type":"string","required":false},"seedLotDescription":{"type":"string","required":false},"seedLotName":{"type":"string","required":false},"sourceCollection":{"type":"string","required":false},"storageLocation":{"type":"string","required":false},"units":{"type":"string","required":false}},"calls":{"\/seedlots":true,"\/seedlots\/{seedLotDbId}":true},"as_field_in":[]},"SeedLotNewRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"amount":{"type":"number","required":false},"createdDate":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"germplasmDbId":{"type":"string","required":false},"lastUpdated":{"type":"string","required":false},"locationDbId":{"type":"string","required":false},"programDbId":{"type":"string","required":false},"seedLotDescription":{"type":"string","required":false},"seedLotName":{"type":"string","required":false},"sourceCollection":{"type":"string","required":false},"storageLocation":{"type":"string","required":false},"units":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"SeedLotNewTransactionRequest":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"amount":{"type":"number","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"fromSeedLotDbId":{"type":"string","required":false},"toSeedLotDbId":{"type":"string","required":false},"transactionDescription":{"type":"string","required":false},"transactionTimestamp":{"type":"string","required":false},"units":{"type":"string","required":false}},"calls":[],"as_field_in":[]},"SeedLotTransaction":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"amount":{"type":"number","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"fromSeedLotDbId":{"type":"string","required":false},"toSeedLotDbId":{"type":"string","required":false},"transactionDbId":{"type":"string","required":false},"transactionDescription":{"type":"string","required":false},"transactionTimestamp":{"type":"string","required":false},"units":{"type":"string","required":false}},"calls":{"\/seedlots\/transactions":true,"\/seedlots\/{seedLotDbId}\/transactions":true},"as_field_in":[]},"TaxonID":{"type":"object","description":"","fields":{"sourceName":{"type":"string","required":true},"taxonId":{"type":"string","required":true}},"calls":[],"as_field_in":[]},"Cross_crossAttributes":{"type":"object","description":"a custom attributes associated with a cross","fields":{"crossAttributeName":{"type":"string","required":false},"crossAttributeValue":{"type":"string","required":false}},"calls":[],"as_field_in":{"Cross":true,"CrossNewRequest":true}},"Cross_externalReferences":{"type":"object","description":"","fields":{"referenceID":{"type":"string","required":false},"referenceSource":{"type":"string","required":false}},"calls":[],"as_field_in":{"Cross":true,"CrossNewRequest":true,"CrossingProject":true,"CrossingProjectNewRequest":true,"Germplasm":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true,"GermplasmNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true,"SeedLot":true,"SeedLotNewRequest":true,"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true,"GermplasmAttribute_method":true,"GermplasmAttribute_scale":true,"GermplasmAttribute_trait":true}},"Cross_parent1":{"type":"object","description":"","fields":{"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"observationUnitDbId":{"type":"string","required":false},"observationUnitName":{"type":"string","required":false},"parentType":{"type":"string","required":false}},"calls":[],"as_field_in":{"Cross":true,"CrossNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true}},"Germplasm_donors":{"type":"object","description":"","fields":{"donorAccessionNumber":{"type":"string","required":false},"donorInstituteCode":{"type":"string","required":false},"germplasmPUI":{"type":"string","required":false}},"calls":[],"as_field_in":{"Germplasm":true,"GermplasmNewRequest":true}},"Germplasm_germplasmOrigin":{"type":"object","description":"MIAPPE V1.1 (DM-52) \n\nMIAPPE V1.1 (DM-53) \n\nMIAPPE V1.1 (DM-54) \n\nMIAPPE V1.1 (DM-55)\n\nMCPD (v2.1) (COORDUNCERT) 15.5 \n\nMCPD (v2.1) (ELEVATION) 16. \n\nMCPD (v2.1) (GEOREFMETH) 15.7 \n\nMCPD (v2.1) (DECLATITUDE) 15.1 \n\nMCPD (v2.1) (DECLONGITUDE) 15.3 ","fields":{"coordinateUncertainty":{"type":"string","required":false},"coordinates":{"type":"GeoJSON","required":false}},"calls":[],"as_field_in":{"Germplasm":true,"GermplasmNewRequest":true}},"Germplasm_storageTypes":{"type":"object","description":"","fields":{"code":{"type":"string","required":false},"description":{"type":"string","required":false}},"calls":[],"as_field_in":{"Germplasm":true,"GermplasmNewRequest":true}},"Germplasm_synonyms":{"type":"object","description":"","fields":{"synonym":{"type":"string","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":{"Germplasm":true,"GermplasmNewRequest":true}},"Germplasm_taxonIds":{"type":"object","description":"","fields":{"sourceName":{"type":"string","required":true},"taxonId":{"type":"string","required":true}},"calls":[],"as_field_in":{"Germplasm":true,"GermplasmNewRequest":true}},"GermplasmAttribute_method_ontologyReference_documentationLinks":{"type":"object","description":"","fields":{"URL":{"type":"string","required":false},"type":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmAttribute_method_ontologyReference":true}},"GermplasmAttribute_method_ontologyReference":{"type":"object","description":"MIAPPE V1.1\n\n(DM-85) Variable accession number - Accession number of the variable in the Crop Ontology\n\n(DM-87) Trait accession number - Accession number of the trait in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-89) Method accession number - Accession number of the method in a suitable controlled vocabulary (Crop Ontology, Trait Ontology).\n\n(DM-93) Scale accession number - Accession number of the scale in a suitable controlled vocabulary (Crop Ontology).","fields":{"documentationLinks":{"type":"GermplasmAttribute_method_ontologyReference_documentationLinks[]","required":false},"ontologyDbId":{"type":"string","required":true},"ontologyName":{"type":"string","required":true},"version":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmAttribute_method":true,"GermplasmAttribute_scale":true,"GermplasmAttribute_trait":true}},"GermplasmAttribute_method":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"bibliographicalReference":{"type":"string","required":false},"description":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"formula":{"type":"string","required":false},"methodClass":{"type":"string","required":false},"methodDbId":{"type":"string","required":false},"methodName":{"type":"string","required":false},"ontologyReference":{"type":"GermplasmAttribute_method_ontologyReference","required":false}},"calls":[],"as_field_in":{"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"GermplasmAttribute_scale_validValues_categories":{"type":"object","description":"","fields":{"label":{"type":"string","required":false},"value":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmAttribute_scale_validValues":true}},"GermplasmAttribute_scale_validValues":{"type":"object","description":"","fields":{"categories":{"type":"GermplasmAttribute_scale_validValues_categories[]","required":false},"max":{"type":"integer","required":false},"min":{"type":"integer","required":false}},"calls":[],"as_field_in":{"GermplasmAttribute_scale":true}},"GermplasmAttribute_scale":{"type":"object","description":"Scale metadata","fields":{"additionalInfo":{"type":"object","required":false},"dataType":{"type":"string","required":false},"decimalPlaces":{"type":"integer","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"ontologyReference":{"type":"GermplasmAttribute_method_ontologyReference","required":false},"scaleDbId":{"type":"string","required":false},"scaleName":{"type":"string","required":false},"validValues":{"type":"GermplasmAttribute_scale_validValues","required":false}},"calls":[],"as_field_in":{"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"GermplasmAttribute_trait":{"type":"object","description":"","fields":{"additionalInfo":{"type":"object","required":false},"alternativeAbbreviations":{"type":"string[]","required":false},"attribute":{"type":"string","required":false},"entity":{"type":"string","required":false},"externalReferences":{"type":"Cross_externalReferences[]","required":false},"mainAbbreviation":{"type":"string","required":false},"ontologyReference":{"type":"GermplasmAttribute_method_ontologyReference","required":false},"status":{"type":"string","required":false},"synonyms":{"type":"string[]","required":false},"traitClass":{"type":"string","required":false},"traitDbId":{"type":"string","required":false},"traitDescription":{"type":"string","required":false},"traitName":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"GermplasmMCPD_breedingInstitutes":{"type":"object","description":"","fields":{"instituteCode":{"type":"string","required":false},"instituteName":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmMCPD":true}},"GermplasmMCPD_collectingInfo_collectingInstitutes":{"type":"object","description":"","fields":{"instituteAddress":{"type":"string","required":false},"instituteCode":{"type":"string","required":false},"instituteName":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmMCPD_collectingInfo":true}},"GermplasmMCPD_collectingInfo_collectingSite":{"type":"object","description":"Information about the location where the sample was collected","fields":{"coordinateUncertainty":{"type":"string","required":false},"elevation":{"type":"string","required":false},"georeferencingMethod":{"type":"string","required":false},"latitudeDecimal":{"type":"string","required":false},"latitudeDegrees":{"type":"string","required":false},"locationDescription":{"type":"string","required":false},"longitudeDecimal":{"type":"string","required":false},"longitudeDegrees":{"type":"string","required":false},"spatialReferenceSystem":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmMCPD_collectingInfo":true}},"GermplasmMCPD_collectingInfo":{"type":"object","description":"Information about the collection of this germplasm","fields":{"collectingDate":{"type":"string","required":false},"collectingInstitutes":{"type":"GermplasmMCPD_collectingInfo_collectingInstitutes[]","required":false},"collectingMissionIdentifier":{"type":"string","required":false},"collectingNumber":{"type":"string","required":false},"collectingSite":{"type":"GermplasmMCPD_collectingInfo_collectingSite","required":false}},"calls":[],"as_field_in":{"GermplasmMCPD":true}},"GermplasmMCPD_donorInfo_donorInstitute":{"type":"object","description":"","fields":{"instituteCode":{"type":"string","required":false},"instituteName":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmMCPD_donorInfo":true}},"GermplasmMCPD_donorInfo":{"type":"object","description":"Information about the donor","fields":{"donorAccessionNumber":{"type":"string","required":false},"donorAccessionPui":{"type":"string","required":false},"donorInstitute":{"type":"GermplasmMCPD_donorInfo_donorInstitute","required":false}},"calls":[],"as_field_in":{"GermplasmMCPD":true}},"GermplasmMCPD_safetyDuplicateInstitutes":{"type":"object","description":"","fields":{"instituteCode":{"type":"string","required":false},"instituteName":{"type":"string","required":false}},"calls":[],"as_field_in":{"GermplasmMCPD":true}},"PedigreeNode_parents":{"type":"object","description":"","fields":{"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false},"parentType":{"type":"string","required":false}},"calls":[],"as_field_in":{"PedigreeNode":true}},"PedigreeNode_siblings":{"type":"object","description":"","fields":{"germplasmDbId":{"type":"string","required":false},"germplasmName":{"type":"string","required":false}},"calls":[],"as_field_in":{"PedigreeNode":true}},"ProgenyNode_progeny":{"type":"object","description":"","fields":{"germplasmDbId":{"type":"string","required":true},"germplasmName":{"type":"string","required":false},"parentType":{"type":"string","required":true}},"calls":[],"as_field_in":{"ProgenyNode":true}},"GermplasmAttributeCategoryListResponse_result":{"type":"object","description":"","fields":{"data":{"type":"string[]","required":true}},"calls":{"\/attributes\/categories":true},"as_field_in":[]}},"fields":{"contactDbId":{"type":"string","description":"The ID which uniquely identifies this contact\n\nMIAPPE V1.1 (DM-33) Person ID - An identifier for the data submitter. If that submitter is an individual, ORCID identifiers are recommended.","example":"5f4e5509","calls":{"\/trials":true},"data_types":{"Contact":true,"Study_contacts":true}},"email":{"type":"string","description":"The contacts email address\n\nMIAPPE V1.1 (DM-32) Person email - The electronic mail address of the person.","example":"bob@bob.com","calls":[],"data_types":{"Contact":true,"Study_contacts":true}},"instituteName":{"type":"string","description":"The name of the institution which this contact is part of\n\nMIAPPE V1.1 (DM-35) Person affiliation - The institution the person belongs to","example":"The BrAPI Institute","calls":[],"data_types":{"Contact":true,"Location":true,"LocationNewRequest":true,"Study_contacts":true,"Germplasm":true,"GermplasmNewRequest":true,"GermplasmMCPD_breedingInstitutes":true,"GermplasmMCPD_collectingInfo_collectingInstitutes":true,"GermplasmMCPD_donorInfo_donorInstitute":true,"GermplasmMCPD_safetyDuplicateInstitutes":true}},"name":{"type":"string","description":"The full name of this contact person\n\nMIAPPE V1.1 (DM-31) Person name - The name of the person (either full name or as used in scientific publications)","example":"Bob Robertson","calls":[],"data_types":{"Contact":true,"DataLink":true,"Study_contacts":true,"Study_dataLinks":true}},"orcid":{"type":"string","description":"The Open Researcher and Contributor ID for this contact person (orcid.org)\n\nMIAPPE V1.1 (DM-33) Person ID - An identifier for the data submitter. If that submitter is an individual, ORCID identifiers are recommended.","example":"http:\/\/orcid.org\/0000-0001-8640-1750","calls":[],"data_types":{"Contact":true,"Study_contacts":true}},"type":{"type":"string","description":"The type of person this contact represents (ex: Coordinator, Scientist, PI, etc.)\n\nMIAPPE V1.1 (DM-34) Person role - Type of contribution of the person to the investigation","example":"PI","calls":{"\/maps":true},"data_types":{"Contact":true,"geoJSON":true,"geoJSONSearchArea":true,"pointGeometry":true,"polygonGeometry":true,"GeoJSON":true,"GeoJSONSearchArea":true,"MethodBaseClass_ontologyReference_documentationLinks":true,"Study_contacts":true,"Method_ontologyReference_documentationLinks":true,"Analysis":true,"GenomeMap":true,"Germplasm_synonyms":true,"GermplasmAttribute_method_ontologyReference_documentationLinks":true}},"dataFormat":{"type":"string","description":"The structure of the data within a file. For example - VCF, table, image archive, multispectral image archives in EDAM ontology (used in Galaxy)\n\nMIAPPE V1.1 (DM-38) Data file description - Description of the format of the data file. May be a standard file format name, or a description of organization of the data in a tabular file.","example":"Image Archive","calls":[],"data_types":{"DataLink":true,"Study_dataLinks":true,"VariantSet_availableFormats":true}},"description":{"type":"string","description":"The general description of this data link\n\nMIAPPE V1.1 (DM-38) Data file description - Description of the format of the data file. May be a standard file format name, or a description of organization of the data in a tabular file.","example":"Raw drone images collected for this study","calls":[],"data_types":{"DataLink":true,"EnvironmentParameter":true,"MethodBaseClass":true,"Person":true,"PersonNewRequest":true,"Study_dataLinks":true,"Study_environmentParameters":true,"Study_experimentalDesign":true,"Study_growthFacility":true,"VariableBaseClass_method":true,"Image":true,"ImageNewRequest":true,"Method":true,"Ontology":true,"ObservationVariable_method":true,"Analysis":true,"ReferenceSet":true,"VendorSpecificationService_specificRequirements":true,"BreedingMethod":true,"Germplasm_storageTypes":true,"GermplasmAttribute_method":true}},"fileFormat":{"type":"string","description":"The MIME type of the file (ie text\/csv, application\/excel, application\/zip).\n\nMIAPPE V1.1 (DM-38) Data file description - Description of the format of the data file. May be a standard file format name, or a description of organization of the data in a tabular file.","example":"application\/zip","calls":[],"data_types":{"DataLink":true,"Study_dataLinks":true,"VariantSet_availableFormats":true}},"provenance":{"type":"string","description":"The description of the origin or ownership of this linked data. Could be a formal reference to software, method, or workflow.","example":"Image Processing Pipeline, built at the University of Antarctica: https:\/\/github.com\/antarctica\/pipeline","calls":[],"data_types":{"DataLink":true,"Study_dataLinks":true}},"scientificType":{"type":"string","description":"The general type of data. For example- Genotyping, Phenotyping raw data, Phenotyping reduced data, Environmental, etc","example":"Environmental","calls":[],"data_types":{"DataLink":true,"Study_dataLinks":true}},"url":{"type":"string","description":"URL describing the location of this data file to view or download\n\nMIAPPE V1.1 (DM-37) Data file link - Link to the data file (or digital object) in a public database or in a persistent institutional repository; or identifier of the data file when submitted together with the MIAPPE submission.","example":"https:\/\/brapi.org\/image-archive.zip","calls":[],"data_types":{"DataLink":true,"Study_dataLinks":true}},"version":{"type":"string","description":"The version number for this data \n\nMIAPPE V1.1 (DM-39) Data file version - The version of the dataset (the actual data).","example":"1.0.3","calls":[],"data_types":{"DataLink":true,"OntologyReference":true,"MethodBaseClass_ontologyReference":true,"Study_dataLinks":true,"Study_lastUpdate":true,"Ontology":true,"Method_ontologyReference":true,"GermplasmAttribute_method_ontologyReference":true}},"parameterName":{"type":"string","description":"Name of the environment parameter constant within the experiment\n\nMIAPPE V1.1 (DM-58) Environment parameter - Name of the environment parameter constant within the experiment. ","example":"soil type","calls":[],"data_types":{"EnvironmentParameter":true,"Study_environmentParameters":true}},"parameterPUI":{"type":"string","description":"URI pointing to an ontology class for the parameter","example":"PECO:0007155","calls":[],"data_types":{"EnvironmentParameter":true,"Study_environmentParameters":true}},"unit":{"type":"string","description":"Unit of the value for this parameter","example":"pH","calls":[],"data_types":{"EnvironmentParameter":true,"Study_environmentParameters":true,"GenomeMap":true}},"unitPUI":{"type":"string","description":"URI pointing to an ontology class for the unit","example":"PECO:0007059","calls":[],"data_types":{"EnvironmentParameter":true,"Study_environmentParameters":true}},"value":{"type":"string","description":"Numerical or categorical value\n\nMIAPPE V1.1 (DM-59) Environment parameter value - Value of the environment parameter (defined above) constant within the experiment.","example":"clay soil","calls":[],"data_types":{"EnvironmentParameter":true,"ScaleBaseClass_validValues_categories":true,"Study_environmentParameters":true,"Observation":true,"ObservationNewRequest":true,"Event_eventParameters":true,"ObservationUnit_observations":true,"ObservationVariable_scale_validValues_categories":true,"Measurement":true,"VendorOrderSubmissionRequest_concentration":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true,"GermplasmAttribute_scale_validValues_categories":true}},"valuePUI":{"type":"string","description":"URI pointing to an ontology class for the parameter value","example":"ENVO:00002262","calls":[],"data_types":{"EnvironmentParameter":true,"Study_environmentParameters":true}},"additionalInfo":{"type":"object","description":"Additional arbitrary info","example":[],"calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true,"Location":true,"LocationNewRequest":true,"MethodBaseClass":true,"Person":true,"PersonNewRequest":true,"Program":true,"ProgramNewRequest":true,"ScaleBaseClass":true,"Study":true,"StudyNewRequest":true,"TraitBaseClass":true,"Trial":true,"TrialNewRequest":true,"VariableBaseClass":true,"VariableBaseClass_method":true,"VariableBaseClass_scale":true,"VariableBaseClass_trait":true,"Event":true,"Image":true,"ImageNewRequest":true,"Method":true,"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Ontology":true,"Scale":true,"Trait":true,"ObservationUnit_observations":true,"ObservationVariable_method":true,"ObservationVariable_scale":true,"ObservationVariable_trait":true,"Call":true,"CallSet":true,"GenomeMap":true,"LinkageGroup":true,"MarkerPosition":true,"Reference":true,"ReferenceSet":true,"Sample":true,"SampleNewRequest":true,"Variant":true,"VariantSet":true,"VendorResultFile":true,"VendorSpecification":true,"Cross":true,"CrossNewRequest":true,"CrossingProject":true,"CrossingProjectNewRequest":true,"Germplasm":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true,"GermplasmNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true,"SeedLot":true,"SeedLotNewRequest":true,"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true,"GermplasmAttribute_method":true,"GermplasmAttribute_scale":true,"GermplasmAttribute_trait":true}},"dateCreated":{"type":"string","description":"Timestamp when the entity was first created","example":"","calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"dateModified":{"type":"string","description":"Timestamp when the entity was last updated","example":"","calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"externalReferences":{"type":"ListBaseFields_externalReferences[]","description":"An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.","example":[{"referenceID":"doi:10.155454\/12341234","referenceSource":"DOI"},{"referenceID":"http:\/\/purl.obolibrary.org\/obo\/ro.owl","referenceSource":"OBO Library"},{"referenceID":"75a50e76","referenceSource":"Remote Data Collection Upload Tool"}],"calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true,"Location":true,"LocationNewRequest":true,"MethodBaseClass":true,"Person":true,"PersonNewRequest":true,"Program":true,"ProgramNewRequest":true,"ScaleBaseClass":true,"Study":true,"StudyNewRequest":true,"TraitBaseClass":true,"Trial":true,"TrialNewRequest":true,"VariableBaseClass":true,"VariableBaseClass_method":true,"VariableBaseClass_scale":true,"VariableBaseClass_trait":true,"Image":true,"ImageNewRequest":true,"Method":true,"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Scale":true,"Trait":true,"ObservationUnit_observations":true,"ObservationVariable_method":true,"ObservationVariable_scale":true,"ObservationVariable_trait":true,"Sample":true,"SampleNewRequest":true,"Cross":true,"CrossNewRequest":true,"CrossingProject":true,"CrossingProjectNewRequest":true,"Germplasm":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true,"GermplasmNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true,"SeedLot":true,"SeedLotNewRequest":true,"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true,"GermplasmAttribute_method":true,"GermplasmAttribute_scale":true,"GermplasmAttribute_trait":true}},"listDescription":{"type":"string","description":"Description of a List","example":"This is a list of germplasm I would like to investigate next season","calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"listName":{"type":"string","description":"Human readable name of a List","example":"MyGermplasm_Sept_2020","calls":{"\/lists":true},"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"listOwnerName":{"type":"string","description":"Human readable name of a List Owner. (usually a user or person)","example":"Bob Robertson","calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"listOwnerPersonDbId":{"type":"string","description":"The unique identifier for a List Owner. (usually a user or person)","example":"58db0628","calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"listSize":{"type":"integer","description":"The number of elements in a List","example":53,"calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"listSource":{"type":"string","description":"The description of where a List originated from","example":"GeneBank Repository 1.3","calls":{"\/lists":true},"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSummary":true}},"listType":{"type":"string","description":"","example":"germplasm","calls":[],"data_types":{"ListBaseFields":true,"ListDetails":true,"ListNewRequest":true,"ListSearchRequest":true,"ListSummary":true}},"data":{"type":"string[]","description":"The list of DbIds contained in this list","example":["758a78c0","2c78f9ee"],"calls":[],"data_types":{"ListDetails":true,"ListNewRequest":true,"commonCropNamesResponse_result":true,"studyTypesResponse_result":true,"ObservationTable":true,"ObservationUnitTable":true,"GermplasmAttributeCategoryListResponse_result":true}},"listDbId":{"type":"string","description":"The unique identifier for a List","example":"6f621cfa","calls":{"\/lists":true,"\/lists\/{listDbId}":true,"\/lists\/{listDbId}\/items":true},"data_types":{"ListDetails":true,"ListSummary":true}},"dateCreatedRangeEnd":{"type":"string","description":"","example":"","calls":[],"data_types":{"ListSearchRequest":true}},"dateCreatedRangeStart":{"type":"string","description":"","example":"","calls":[],"data_types":{"ListSearchRequest":true}},"dateModifiedRangeEnd":{"type":"string","description":"","example":"","calls":[],"data_types":{"ListSearchRequest":true}},"dateModifiedRangeStart":{"type":"string","description":"","example":"","calls":[],"data_types":{"ListSearchRequest":true}},"externalReferenceIDs":{"type":"string[]","description":"List of external reference IDs. Could be a simple strings or a URIs. (use with `externalReferenceSources` parameter)","example":["http:\/\/purl.obolibrary.org\/obo\/ro.owl","14a19841"],"calls":[],"data_types":{"ListSearchRequest":true,"LocationSearchRequest":true,"PersonSearchRequest":true,"ProgramSearchRequest":true,"SearchRequestParametersExternalReferences":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ImageSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"ObservationVariableSearchRequest":true,"SampleSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true,"GermplasmSearchRequest":true}},"externalReferenceSources":{"type":"string[]","description":"List of identifiers for the source system or database of an external reference (use with `externalReferenceIDs` parameter)","example":["OBO Library","Field App Name"],"calls":[],"data_types":{"ListSearchRequest":true,"LocationSearchRequest":true,"PersonSearchRequest":true,"ProgramSearchRequest":true,"SearchRequestParametersExternalReferences":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ImageSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"ObservationVariableSearchRequest":true,"SampleSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true,"GermplasmSearchRequest":true}},"listDbIds":{"type":"string[]","description":"","example":["55f20cf6","3193ca3d"],"calls":[],"data_types":{"ListSearchRequest":true}},"listNames":{"type":"string[]","description":"","example":["Planing List 1","Bobs List"],"calls":[],"data_types":{"ListSearchRequest":true}},"listOwnerNames":{"type":"string[]","description":"","example":["Bob Robertson","Rob Robertson"],"calls":[],"data_types":{"ListSearchRequest":true}},"listOwnerPersonDbIds":{"type":"string[]","description":"","example":["bob@bob.com","rob@bob.com"],"calls":[],"data_types":{"ListSearchRequest":true}},"listSources":{"type":"string[]","description":"","example":["USER","SYSTEM","EXTERNAL"],"calls":[],"data_types":{"ListSearchRequest":true}},"page":{"type":"integer","description":"Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.","example":0,"calls":{"\/commoncropnames":true,"\/lists":true,"\/locations":true,"\/people":true,"\/programs":true,"\/search\/lists\/{searchResultsDbId}":true,"\/search\/locations\/{searchResultsDbId}":true,"\/search\/people\/{searchResultsDbId}":true,"\/search\/programs\/{searchResultsDbId}":true,"\/search\/studies\/{searchResultsDbId}":true,"\/search\/trials\/{searchResultsDbId}":true,"\/seasons":true,"\/studies":true,"\/studytypes":true,"\/trials":true,"\/events":true,"\/images":true,"\/methods":true,"\/observationlevels":true,"\/observations":true,"\/observationunits":true,"\/ontologies":true,"\/scales":true,"\/search\/images\/{searchResultsDbId}":true,"\/search\/observations\/{searchResultsDbId}":true,"\/search\/observationunits\/{searchResultsDbId}":true,"\/search\/variables\/{searchResultsDbId}":true,"\/traits":true,"\/variables":true,"\/callsets":true,"\/maps":true,"\/maps\/{mapDbId}\/linkagegroups":true,"\/markerpositions":true,"\/references":true,"\/referencesets":true,"\/samples":true,"\/search\/callsets\/{searchResultsDbId}":true,"\/search\/markerpositions\/{searchResultsDbId}":true,"\/search\/references\/{searchResultsDbId}":true,"\/search\/referencesets\/{searchResultsDbId}":true,"\/search\/samples\/{searchResultsDbId}":true,"\/search\/variantsets\/{searchResultsDbId}":true,"\/variantsets":true,"\/variantsets\/{variantSetDbId}\/callsets":true,"\/vendor\/orders":true,"\/vendor\/orders\/{orderId}\/plates":true,"\/vendor\/orders\/{orderId}\/results":true,"\/attributes":true,"\/attributes\/categories":true,"\/attributevalues":true,"\/breedingmethods":true,"\/crosses":true,"\/crossingprojects":true,"\/germplasm":true,"\/plannedcrosses":true,"\/search\/attributes\/{searchResultsDbId}":true,"\/search\/attributevalues\/{searchResultsDbId}":true,"\/search\/germplasm\/{searchResultsDbId}":true,"\/seedlots":true,"\/seedlots\/transactions":true,"\/seedlots\/{seedLotDbId}\/transactions":true},"data_types":{"ListSearchRequest":true,"LocationSearchRequest":true,"PersonSearchRequest":true,"ProgramSearchRequest":true,"SearchRequestParametersPaging":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ImageSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"ObservationVariableSearchRequest":true,"MarkerPositionSearchRequest":true,"ReferenceSetsSearchRequest":true,"ReferencesSearchRequest":true,"SampleSearchRequest":true,"VariantSetsSearchRequest":true,"callSetsSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true,"GermplasmSearchRequest":true}},"pageSize":{"type":"integer","description":"The size of the pages to be returned. Default is `1000`.","example":1000,"calls":{"\/commoncropnames":true,"\/lists":true,"\/locations":true,"\/people":true,"\/programs":true,"\/search\/lists\/{searchResultsDbId}":true,"\/search\/locations\/{searchResultsDbId}":true,"\/search\/people\/{searchResultsDbId}":true,"\/search\/programs\/{searchResultsDbId}":true,"\/search\/studies\/{searchResultsDbId}":true,"\/search\/trials\/{searchResultsDbId}":true,"\/seasons":true,"\/studies":true,"\/studytypes":true,"\/trials":true,"\/events":true,"\/images":true,"\/methods":true,"\/observationlevels":true,"\/observations":true,"\/observationunits":true,"\/ontologies":true,"\/scales":true,"\/search\/images\/{searchResultsDbId}":true,"\/search\/observations\/{searchResultsDbId}":true,"\/search\/observationunits\/{searchResultsDbId}":true,"\/search\/variables\/{searchResultsDbId}":true,"\/traits":true,"\/variables":true,"\/calls":true,"\/callsets":true,"\/callsets\/{callSetDbId}\/calls":true,"\/maps":true,"\/maps\/{mapDbId}\/linkagegroups":true,"\/markerpositions":true,"\/references":true,"\/referencesets":true,"\/samples":true,"\/search\/calls\/{searchResultsDbId}":true,"\/search\/callsets\/{searchResultsDbId}":true,"\/search\/markerpositions\/{searchResultsDbId}":true,"\/search\/references\/{searchResultsDbId}":true,"\/search\/referencesets\/{searchResultsDbId}":true,"\/search\/samples\/{searchResultsDbId}":true,"\/search\/variants\/{searchResultsDbId}":true,"\/search\/variantsets\/{searchResultsDbId}":true,"\/variants":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets":true,"\/variantsets\/{variantSetDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/callsets":true,"\/variantsets\/{variantSetDbId}\/variants":true,"\/vendor\/orders":true,"\/vendor\/orders\/{orderId}\/plates":true,"\/vendor\/orders\/{orderId}\/results":true,"\/attributes":true,"\/attributes\/categories":true,"\/attributevalues":true,"\/breedingmethods":true,"\/crosses":true,"\/crossingprojects":true,"\/germplasm":true,"\/plannedcrosses":true,"\/search\/attributes\/{searchResultsDbId}":true,"\/search\/attributevalues\/{searchResultsDbId}":true,"\/search\/germplasm\/{searchResultsDbId}":true,"\/seedlots":true,"\/seedlots\/transactions":true,"\/seedlots\/{seedLotDbId}\/transactions":true},"data_types":{"ListSearchRequest":true,"LocationSearchRequest":true,"PersonSearchRequest":true,"ProgramSearchRequest":true,"SearchRequestParametersPaging":true,"SearchRequestParametersTokenPaging":true,"StudySearchRequest":true,"TrialSearchRequest":true,"basePagination":true,"indexPagination":true,"tokenPagination":true,"metadata_pagination":true,"metadataTokenPagination_pagination":true,"ImageSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"ObservationVariableSearchRequest":true,"CallsSearchRequest":true,"MarkerPositionSearchRequest":true,"ReferenceSetsSearchRequest":true,"ReferencesSearchRequest":true,"SampleSearchRequest":true,"VariantSetsSearchRequest":true,"callSetsSearchRequest":true,"variantsSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true,"GermplasmSearchRequest":true}},"abbreviation":{"type":"string","description":"An abbreviation which represents this location","example":"L1","calls":{"\/programs":true},"data_types":{"Location":true,"LocationNewRequest":true,"Program":true,"ProgramNewRequest":true,"BreedingMethod":true}},"coordinateDescription":{"type":"string","description":"Describes the precision and landmarks of the coordinate values used for this location. (ex. the site, the nearest town, a 10 kilometers radius circle, +\/- 20 meters, etc)","example":"North East corner of greenhouse","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"coordinateUncertainty":{"type":"string","description":"Uncertainty associated with the coordinates in meters. Leave the value empty if the uncertainty is unknown.","example":"20","calls":[],"data_types":{"Location":true,"LocationNewRequest":true,"GermplasmOrigin":true,"Germplasm_germplasmOrigin":true,"GermplasmMCPD_collectingInfo_collectingSite":true}},"coordinates":{"type":"GeoJSON","description":"","example":"","calls":[],"data_types":{"Location":true,"LocationNewRequest":true,"LocationSearchRequest":true,"pointGeometry":true,"polygonGeometry":true,"GermplasmOrigin":true,"Germplasm_germplasmOrigin":true}},"countryCode":{"type":"string","description":" [ISO_3166-1_alpha-3](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-3) spec\nMIAPPE V1.1 (DM-17) Geographic location (country) - The country where the experiment took place, either as a full name or preferably as a 2-letter code.","example":"PER","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"countryName":{"type":"string","description":"The full name of the country where this location is\n\nMIAPPE V1.1 (DM-17) Geographic location (country) - The country where the experiment took place, either as a full name or preferably as a 2-letter code.","example":"Peru","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"documentationURL":{"type":"string","description":"A URL to the human readable documentation of this object","example":"https:\/\/brapi.org","calls":[],"data_types":{"Location":true,"LocationNewRequest":true,"Program":true,"ProgramNewRequest":true,"ServerInfo":true,"Study":true,"StudyNewRequest":true,"Trial":true,"TrialNewRequest":true,"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Ontology":true,"GenomeMap":true,"Germplasm":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmNewRequest":true}},"environmentType":{"type":"string","description":"Describes the general type of environment of the location. (ex. forest, field, nursery, etc)","example":"Nursery","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"exposure":{"type":"string","description":"Describes the level of protection\/exposure for things like sun light and wind.","example":"Structure, no exposure","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"instituteAddress":{"type":"string","description":"The street address of the institute representing this location\n\nMIAPPE V1.1 (DM-16) Contact institution - Name and address of the institution responsible for the study.","example":"71 Pilgrim Avenue Chevy Chase MD 20815","calls":[],"data_types":{"Location":true,"LocationNewRequest":true,"GermplasmMCPD_collectingInfo_collectingInstitutes":true}},"locationDbId":{"type":"string","description":"The unique identifier for a Location","example":"3cfdd67d","calls":{"\/locations":true,"\/locations\/{locationDbId}":true,"\/studies":true,"\/trials":true,"\/observations":true,"\/observations\/table":true,"\/observationunits":true,"\/observationunits\/table":true},"data_types":{"Location":true,"Study":true,"StudyNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"SeedLot":true,"SeedLotNewRequest":true}},"locationName":{"type":"string","description":"A human readable name for this location\n\nMIAPPE V1.1 (DM-18) Experimental site name - The name of the natural site, experimental field, greenhouse, phenotyping facility, etc. where the experiment took place.","example":"Location 1","calls":[],"data_types":{"Location":true,"LocationNewRequest":true,"Study":true,"StudyNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true}},"locationType":{"type":"string","description":"The type of location this represents (ex. Breeding Location, Storage Location, etc)","example":"Storage Location","calls":{"\/locations":true},"data_types":{"Location":true,"LocationNewRequest":true}},"siteStatus":{"type":"string","description":"Description of the accessibility of the location (ex. Public, Private)","example":"Private","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"slope":{"type":"string","description":"Describes the approximate slope (height\/distance) of the location.","example":"0","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"topography":{"type":"string","description":"Describes the topography of the land at the location. (ex. Plateau, Cirque, Hill, Valley, etc)","example":"Valley","calls":[],"data_types":{"Location":true,"LocationNewRequest":true}},"abbreviations":{"type":"string[]","description":"An abbreviation which represents this location","example":["L1","LHC"],"calls":[],"data_types":{"LocationSearchRequest":true,"ProgramSearchRequest":true}},"altitudeMax":{"type":"number","description":"The maximum altitude to search for","example":200,"calls":[],"data_types":{"LocationSearchRequest":true}},"altitudeMin":{"type":"number","description":"The minimum altitude to search for","example":20,"calls":[],"data_types":{"LocationSearchRequest":true}},"countryCodes":{"type":"string[]","description":"[ISO_3166-1_alpha-3](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-3) spec","example":["USA","PER"],"calls":[],"data_types":{"LocationSearchRequest":true}},"countryNames":{"type":"string[]","description":"The full name of the country to search for","example":["United States of America","Peru"],"calls":[],"data_types":{"LocationSearchRequest":true}},"instituteAddresses":{"type":"string[]","description":"The street address of the institute to search for","example":["123 Main Street","456 Side Street"],"calls":[],"data_types":{"LocationSearchRequest":true}},"instituteNames":{"type":"string[]","description":"The name of the institute to search for","example":["The Institute","The Other Institute"],"calls":[],"data_types":{"LocationSearchRequest":true}},"locationDbIds":{"type":"string[]","description":"The location ids to search for","example":["b28911cf","5071d1e4"],"calls":[],"data_types":{"LocationSearchRequest":true,"SearchRequestParametersLocations":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true}},"locationNames":{"type":"string[]","description":"A human readable names to search for","example":["Location Alpha","The Large Hadron Collider"],"calls":[],"data_types":{"LocationSearchRequest":true,"SearchRequestParametersLocations":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true}},"locationTypes":{"type":"string[]","description":"The type of location this represents (ex. Breeding Location, Storage Location, etc)","example":["Nursery","Storage Location"],"calls":[],"data_types":{"LocationSearchRequest":true}},"bibliographicalReference":{"type":"string","description":"Bibliographical reference describing the method.\n\nMIAPPE V1.1 (DM-91) Reference associated to the method - URI\/DOI of reference describing the method.","example":"Smith, 1893, Really Cool Paper, Popular Journal","calls":[],"data_types":{"MethodBaseClass":true,"VariableBaseClass_method":true,"Method":true,"ObservationVariable_method":true,"GermplasmAttribute_method":true}},"formula":{"type":"string","description":"For computational methods i.e., when the method consists in assessing the trait by computing measurements, write the generic formula used for the calculation","example":"a^2 + b^2 = c^2","calls":[],"data_types":{"MethodBaseClass":true,"VariableBaseClass_method":true,"Method":true,"ObservationVariable_method":true,"GermplasmAttribute_method":true}},"methodClass":{"type":"string","description":"Method class (examples: \"Measurement\", \"Counting\", \"Estimation\", \"Computation\", etc.)","example":"Measurement","calls":[],"data_types":{"MethodBaseClass":true,"VariableBaseClass_method":true,"Method":true,"ObservationVariable_method":true,"GermplasmAttribute_method":true}},"methodName":{"type":"string","description":"Human readable name for the method\n\nMIAPPE V1.1 (DM-88) Method  Name of the method of observation","example":"Measuring Tape","calls":[],"data_types":{"MethodBaseClass":true,"VariableBaseClass_method":true,"Method":true,"ObservationVariable_method":true,"GermplasmAttribute_method":true}},"ontologyReference":{"type":"MethodBaseClass_ontologyReference","description":"","example":"","calls":[],"data_types":{"MethodBaseClass":true,"ScaleBaseClass":true,"TraitBaseClass":true,"VariableBaseClass":true,"VariableBaseClass_method":true,"VariableBaseClass_scale":true,"VariableBaseClass_trait":true,"Method":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Scale":true,"Trait":true,"ObservationVariable_method":true,"ObservationVariable_scale":true,"ObservationVariable_trait":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmAttribute_method":true,"GermplasmAttribute_scale":true,"GermplasmAttribute_trait":true}},"levelName":{"type":"string","description":"A name for this level","example":"plot","calls":[],"data_types":{"ObservationUnitHierarchyLevel":true,"ObservationUnitHierarchyLevel_1":true,"ObservationUnitLevelRelationship":true,"ObservationUnitLevelRelationship_1":true,"ObservationUnitLevelRelationship_2":true}},"levelOrder":{"type":"integer","description":"`levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`'s lower numbers are at the top of the hierarchy (ie field -> 1) and higher numbers are at the bottom of the hierarchy (ie plant -> 9).","example":2,"calls":[],"data_types":{"ObservationUnitHierarchyLevel":true,"ObservationUnitHierarchyLevel_1":true,"ObservationUnitLevelRelationship":true,"ObservationUnitLevelRelationship_1":true,"ObservationUnitLevelRelationship_2":true}},"documentationLinks":{"type":"MethodBaseClass_ontologyReference_documentationLinks[]","description":"links to various ontology documentation","example":"","calls":[],"data_types":{"OntologyReference":true,"MethodBaseClass_ontologyReference":true,"Method_ontologyReference":true,"GermplasmAttribute_method_ontologyReference":true}},"ontologyDbId":{"type":"string","description":"Ontology database unique identifier","example":"6b071868","calls":{"\/ontologies":true},"data_types":{"OntologyReference":true,"MethodBaseClass_ontologyReference":true,"Ontology":true,"Method_ontologyReference":true,"GermplasmAttribute_method_ontologyReference":true}},"ontologyName":{"type":"string","description":"Ontology name","example":"The Crop Ontology","calls":[],"data_types":{"OntologyReference":true,"MethodBaseClass_ontologyReference":true,"Ontology":true,"Method_ontologyReference":true,"GermplasmAttribute_method_ontologyReference":true}},"emailAddress":{"type":"string","description":"email address for this person","example":"bob@bob.com","calls":[],"data_types":{"Person":true,"PersonNewRequest":true}},"firstName":{"type":"string","description":"Persons first name","example":"Bob","calls":{"\/people":true},"data_types":{"Person":true,"PersonNewRequest":true}},"lastName":{"type":"string","description":"Persons last name","example":"Robertson","calls":{"\/people":true},"data_types":{"Person":true,"PersonNewRequest":true}},"mailingAddress":{"type":"string","description":"physical address of this person","example":"123 Street Ave, City, State, Country","calls":[],"data_types":{"Person":true,"PersonNewRequest":true}},"middleName":{"type":"string","description":"Persons middle name","example":"Danger","calls":[],"data_types":{"Person":true,"PersonNewRequest":true}},"personDbId":{"type":"string","description":"Unique ID for a person","example":"14340a54","calls":{"\/people":true,"\/people\/{personDbId}":true},"data_types":{"Person":true}},"phoneNumber":{"type":"string","description":"phone number of this person","example":"+1-555-555-5555","calls":[],"data_types":{"Person":true,"PersonNewRequest":true}},"userID":{"type":"string","description":"A systems user ID associated with this person. Different from personDbId because you could have a person who is not a user of the system.","example":"bob-23","calls":{"\/people":true},"data_types":{"Person":true,"PersonNewRequest":true}},"emailAddresses":{"type":"string[]","description":"email address for this person","example":["bob@bob.com","rob@bob.com"],"calls":[],"data_types":{"PersonSearchRequest":true}},"firstNames":{"type":"string[]","description":"Persons first name","example":["Bob","Rob"],"calls":[],"data_types":{"PersonSearchRequest":true}},"lastNames":{"type":"string[]","description":"Persons last name","example":["Robertson","Smith"],"calls":[],"data_types":{"PersonSearchRequest":true}},"mailingAddresses":{"type":"string[]","description":"physical address of this person","example":["123 Main Street","456 Side Street"],"calls":[],"data_types":{"PersonSearchRequest":true}},"middleNames":{"type":"string[]","description":"Persons middle name","example":["Danger","Fight"],"calls":[],"data_types":{"PersonSearchRequest":true}},"personDbIds":{"type":"string[]","description":"Unique ID for this person","example":["1e7731ab","bc28cff8"],"calls":[],"data_types":{"PersonSearchRequest":true}},"phoneNumbers":{"type":"string[]","description":"phone number of this person","example":["9995555555","8884444444"],"calls":[],"data_types":{"PersonSearchRequest":true}},"userIDs":{"type":"string[]","description":"A systems user ID associated with this person. Different from personDbId because you could have a person who is not a user of the system.","example":["bob","rob"],"calls":[],"data_types":{"PersonSearchRequest":true}},"commonCropName":{"type":"string","description":"Common name for the crop which this program is for","example":"Tomatillo","calls":{"\/programs":true,"\/studies":true,"\/trials":true,"\/maps":true,"\/germplasm":true},"data_types":{"Program":true,"ProgramNewRequest":true,"Study":true,"StudyNewRequest":true,"Trial":true,"TrialNewRequest":true,"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GenomeMap":true,"CrossingProject":true,"CrossingProjectNewRequest":true,"Germplasm":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmMCPD":true,"GermplasmNewRequest":true}},"leadPersonDbId":{"type":"string","description":"The unique identifier of the program leader","example":"fe6f5c50","calls":[],"data_types":{"Program":true,"ProgramNewRequest":true}},"leadPersonName":{"type":"string","description":"The name of the program leader","example":"Bob Robertson","calls":[],"data_types":{"Program":true,"ProgramNewRequest":true}},"objective":{"type":"string","description":"The primary objective of the program","example":"Make a better tomatillo","calls":[],"data_types":{"Program":true,"ProgramNewRequest":true}},"programDbId":{"type":"string","description":"The ID which uniquely identifies the program","example":"f60f15b2","calls":{"\/programs":true,"\/programs\/{programDbId}":true,"\/studies":true,"\/trials":true,"\/observationlevels":true,"\/observations":true,"\/observations\/table":true,"\/observationunits":true,"\/observationunits\/table":true,"\/maps":true},"data_types":{"Program":true,"Trial":true,"TrialNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"Sample":true,"SampleNewRequest":true,"CrossingProject":true,"CrossingProjectNewRequest":true,"SeedLot":true,"SeedLotNewRequest":true}},"programName":{"type":"string","description":"Human readable name of the program","example":"Tomatillo_Breeding_Program","calls":{"\/programs":true},"data_types":{"Program":true,"ProgramNewRequest":true,"Trial":true,"TrialNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"CrossingProject":true,"CrossingProjectNewRequest":true}},"commonCropNames":{"type":"string[]","description":"Common name for the crop which this program is for","example":["Tomatillo","Paw Paw"],"calls":[],"data_types":{"ProgramSearchRequest":true,"SearchRequestParametersCommonCropNames":true,"StudySearchRequest":true,"TrialSearchRequest":true,"GermplasmSearchRequest":true}},"leadPersonDbIds":{"type":"string[]","description":"The person DbIds of the program leader to search for","example":["d8bd96c7","a2b9c8e7"],"calls":[],"data_types":{"ProgramSearchRequest":true}},"leadPersonNames":{"type":"string[]","description":"The names of the program leader to search for","example":["Bob Robertson","Rob Robertson"],"calls":[],"data_types":{"ProgramSearchRequest":true}},"objectives":{"type":"string[]","description":"A program objective to search for","example":["Objective Code One","This is a longer objective search query"],"calls":[],"data_types":{"ProgramSearchRequest":true}},"programDbIds":{"type":"string[]","description":"A program identifier to search for","example":["8f5de35b","0e2d4a13"],"calls":[],"data_types":{"ProgramSearchRequest":true,"SearchRequestParametersPrograms":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true}},"programNames":{"type":"string[]","description":"A name of a program to search for","example":["Better Breeding Program","Best Breeding Program"],"calls":[],"data_types":{"ProgramSearchRequest":true,"SearchRequestParametersPrograms":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true}},"dataType":{"type":"string","description":"<p>Class of the scale, entries can be<\/p>\n<p>\"Code\" -  This scale class is exceptionally used to express complex traits. Code is a nominal scale that combines the expressions of the different traits composing the complex trait. For example a severity trait might be expressed by a 2 digit and 2 character code. The first 2 digits are the percentage of the plant covered by a fungus and the 2 characters refer to the delay in development, e.g. \"75VD\" means \"75 %\" of the plant is infected and the plant is very delayed.<\/p>\n<p>\"Date\" - The date class is for events expressed in a time format, See ISO 8601<\/p>\n<p>\"Duration\" - The Duration class is for time elapsed between two events expressed in a time format, e.g. days, hours, months<\/p>\n<p>\"Nominal\" - Categorical scale that can take one of a limited and fixed number of categories. There is no intrinsic ordering to the categories<\/p>\n<p>\"Numerical\" - Numerical scales express the trait with real numbers. The numerical scale defines the unit e.g. centimeter, ton per hectare, branches<\/p>\n<p>\"Ordinal\" - Ordinal scales are scales composed of ordered categories<\/p>\n<p>\"Text\" - A free text is used to express the trait.<\/p>","example":"Numerical","calls":[],"data_types":{"ScaleBaseClass":true,"VariableBaseClass_scale":true,"Scale":true,"ObservationVariable_scale":true,"GermplasmAttribute_scale":true}},"decimalPlaces":{"type":"integer","description":"For numerical, number of decimal places to be reported","example":2,"calls":[],"data_types":{"ScaleBaseClass":true,"VariableBaseClass_scale":true,"Scale":true,"ObservationVariable_scale":true,"GermplasmAttribute_scale":true}},"scaleName":{"type":"string","description":"Name of the scale\n\nMIAPPE V1.1 (DM-92) Scale Name of the scale associated with the variable","example":"Meters","calls":[],"data_types":{"ScaleBaseClass":true,"VariableBaseClass_scale":true,"Scale":true,"ObservationVariable_scale":true,"GermplasmAttribute_scale":true}},"validValues":{"type":"ScaleBaseClass_validValues","description":"","example":"","calls":[],"data_types":{"ScaleBaseClass":true,"VariableBaseClass_scale":true,"Scale":true,"ObservationVariable_scale":true,"GermplasmAttribute_scale":true}},"germplasmDbIds":{"type":"string[]","description":"List of IDs which uniquely identify germplasm to search for","example":["e9c6edd7","1b1df4a6"],"calls":[],"data_types":{"SearchRequestParametersGermplasm":true,"StudySearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"SampleSearchRequest":true,"callSetsSearchRequest":true,"GermplasmAttributeValueSearchRequest":true,"GermplasmSearchRequest":true}},"germplasmNames":{"type":"string[]","description":"List of human readable names to identify germplasm to search for","example":["A0000003","A0000477"],"calls":[],"data_types":{"SearchRequestParametersGermplasm":true,"StudySearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"SampleSearchRequest":true,"callSetsSearchRequest":true,"GermplasmAttributeValueSearchRequest":true,"GermplasmSearchRequest":true}},"observationVariableDbIds":{"type":"string[]","description":"The DbIds of Variables to search for","example":["a646187d","6d23513b"],"calls":[],"data_types":{"SearchRequestParametersObservationVariables":true,"StudySearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"ObservationVariableSearchRequest":true}},"observationVariableNames":{"type":"string[]","description":"The names of Variables to search for","example":["Plant Height in meters","Wheat rust score 1-5"],"calls":[],"data_types":{"SearchRequestParametersObservationVariables":true,"StudySearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"ObservationVariableSearchRequest":true}},"studyDbIds":{"type":"string[]","description":"List of study identifiers to search for","example":["cf6c4bd4","691e69d6"],"calls":[],"data_types":{"SearchRequestParametersStudies":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"SampleSearchRequest":true,"VariantSetsExtractRequest":true,"VariantSetsSearchRequest":true,"GermplasmSearchRequest":true}},"studyNames":{"type":"string[]","description":"List of study names to filter search results","example":["The First Bob Study 2017","Wheat Yield Trial 246"],"calls":[],"data_types":{"SearchRequestParametersStudies":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"SampleSearchRequest":true,"VariantSetsExtractRequest":true,"VariantSetsSearchRequest":true,"GermplasmSearchRequest":true}},"pageToken":{"type":"string","description":"Used to request a specific page of data to be returned.\n\nTokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively. ","example":"33c27874","calls":{"\/calls":true,"\/callsets\/{callSetDbId}\/calls":true,"\/references\/{referenceDbId}\/bases":true,"\/search\/calls\/{searchResultsDbId}":true,"\/search\/variants\/{searchResultsDbId}":true,"\/variants":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/variants":true},"data_types":{"SearchRequestParametersTokenPaging":true,"CallsSearchRequest":true,"variantsSearchRequest":true}},"trialDbIds":{"type":"string[]","description":"The ID which uniquely identifies a trial to search for","example":["d2593dc2","9431a731"],"calls":[],"data_types":{"SearchRequestParametersTrials":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true}},"trialNames":{"type":"string[]","description":"The human readable name of a trial to search for","example":["All Yield Trials 2016","Disease Resistance Study Comparison Group"],"calls":[],"data_types":{"SearchRequestParametersTrials":true,"StudySearchRequest":true,"TrialSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true}},"seasonDbId":{"type":"string","description":"The ID which uniquely identifies a season. For backward compatibility it can be a string like '2012', '1957-2004'","example":"Spring_2018","calls":{"\/seasons":true,"\/seasons\/{seasonDbId}":true,"\/studies":true,"\/observations":true,"\/observations\/table":true,"\/observationunits":true,"\/observationunits\/table":true},"data_types":{"Season":true,"Observation_season":true}},"seasonName":{"type":"string","description":"Name of the season. ex. 'Spring', 'Q2', 'Season A', etc.","example":"Spring","calls":[],"data_types":{"Season":true}},"year":{"type":"integer","description":"The 4 digit year of the season.","example":2018,"calls":{"\/seasons":true},"data_types":{"Season":true,"Observation_season":true}},"calls":{"type":"Service[]","description":"Array of available calls on this server","example":"","calls":[],"data_types":{"ServerInfo":true}},"contactEmail":{"type":"string","description":"A contact email address for this server management","example":"contact@institute.org","calls":[],"data_types":{"ServerInfo":true}},"location":{"type":"string","description":"Physical location of this server (ie. City, Country)","example":"USA","calls":[],"data_types":{"ServerInfo":true}},"organizationName":{"type":"string","description":"The name of the organization that manages this server and data","example":"The Institute","calls":[],"data_types":{"ServerInfo":true}},"organizationURL":{"type":"string","description":"The URL of the organization that manages this server and data","example":"institute.org\/home","calls":[],"data_types":{"ServerInfo":true}},"serverDescription":{"type":"string","description":"A description of this server","example":"The BrAPI Test Server\nWeb Server - Apache Tomcat 7.0.32\nDatabase - Postgres 10\nSupported BrAPI Version - V2.0","calls":[],"data_types":{"ServerInfo":true}},"serverName":{"type":"string","description":"The name of this server","example":"The BrAPI Test Server","calls":[],"data_types":{"ServerInfo":true}},"dataTypes":{"type":"WSMIMEDataTypes[]","description":"The possible data formats returned by the available call","example":["application\/json"],"calls":[],"data_types":{"Service":true,"ObservationVariableSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"methods":{"type":"string[]","description":"The possible HTTP Methods to be used with the available call","example":["GET","POST"],"calls":[],"data_types":{"Service":true}},"service":{"type":"string","description":"The name of the available call as recorded in the documentation","example":"germplasm\/{germplasmDbId}\/pedigree","calls":[],"data_types":{"Service":true}},"versions":{"type":"string[]","description":"The supported versions of a particular call","example":["2.0","2.1"],"calls":[],"data_types":{"Service":true}},"active":{"type":"boolean","description":"Is this study currently active","example":true,"calls":{"\/studies":true,"\/trials":true},"data_types":{"Study":true,"StudyNewRequest":true,"StudySearchRequest":true,"Trial":true,"TrialNewRequest":true,"TrialSearchRequest":true}},"contacts":{"type":"Study_contacts[]","description":"List of contact entities associated with this study","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true,"Trial":true,"TrialNewRequest":true}},"culturalPractices":{"type":"string","description":"MIAPPE V1.1 (DM-28) Cultural practices - General description of the cultural practices of the study.","example":"Irrigation was applied according needs during summer to prevent water stress.","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"dataLinks":{"type":"Study_dataLinks[]","description":"List of links to extra data files associated with this study. Extra data could include notes, images, and reference data.","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"endDate":{"type":"string","description":"The date the study ends\n\nMIAPPE V1.1 (DM-15) End date of study - Date and, if relevant, time when the experiment ended","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true,"Trial":true,"TrialNewRequest":true}},"environmentParameters":{"type":"Study_environmentParameters[]","description":"Environmental parameters that were kept constant throughout the study and did not change between observation units.\n\nMIAPPE V1.1 (DM-57) Environment - Environmental parameters that were kept constant throughout the study and did not change between observation units or assays. Environment characteristics that vary over time, i.e. environmental variables, should be recorded as Observed Variables (see below).","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"experimentalDesign":{"type":"Study_experimentalDesign","description":"","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"growthFacility":{"type":"Study_growthFacility","description":"","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"lastUpdate":{"type":"Study_lastUpdate","description":"","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"license":{"type":"string","description":"The usage license associated with the study data","example":"MIT License","calls":[],"data_types":{"Study":true,"StudyNewRequest":true,"Trial_datasetAuthorships":true}},"observationLevels":{"type":"ObservationUnitHierarchyLevel_1[]","description":"Observation levels indicate the granularity level at which the measurements are taken. `levelName` defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6). ","example":[{"levelName":"field","levelOrder":0},{"levelName":"block","levelOrder":1},{"levelName":"plot","levelOrder":2}],"calls":[],"data_types":{"Study":true,"StudyNewRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true}},"observationUnitsDescription":{"type":"string","description":"MIAPPE V1.1 (DM-25) Observation unit description - General description of the observation units in the study.","example":"Observation units consisted in individual plots themselves consisting of a row of 15 plants at a density of approximately six plants per square meter.","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"seasons":{"type":"string[]","description":"List of seasons over which this study was performed.","example":["Spring_2018"],"calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"startDate":{"type":"string","description":"The date this study started\n\nMIAPPE V1.1 (DM-14) Start date of study - Date and, if relevant, time when the experiment started","example":"","calls":[],"data_types":{"Study":true,"StudyNewRequest":true,"Trial":true,"TrialNewRequest":true}},"studyCode":{"type":"string","description":"A short human readable code for a study","example":"Grape_Yield_Spring_2018","calls":{"\/studies":true},"data_types":{"Study":true,"StudyNewRequest":true}},"studyDbId":{"type":"string","description":"The ID which uniquely identifies a study within the given database server\n\nMIAPPE V1.1 (DM-11) Study unique ID - Unique identifier comprising the name or identifier for the institution\/database hosting the submission of the study data, and the identifier of the study in that institution.","example":"175ac75a","calls":{"\/studies":true,"\/studies\/{studyDbId}":true,"\/trials":true,"\/events":true,"\/observationlevels":true,"\/observations":true,"\/observations\/table":true,"\/observationunits":true,"\/observationunits\/table":true,"\/variables":true,"\/maps":true,"\/samples":true,"\/variantsets":true,"\/germplasm":true},"data_types":{"Study":true,"Event":true,"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"ObservationVariableSearchRequest":true,"ObservationUnit_observations":true,"CallSet":true,"Sample":true,"SampleNewRequest":true,"VariantSet":true,"GermplasmAttributeSearchRequest":true}},"studyDescription":{"type":"string","description":"The description of this study\n\nMIAPPE V1.1 (DM-13) Study description - Human-readable text describing the study","example":"This is a yield study for Spring 2018","calls":[],"data_types":{"Study":true,"StudyNewRequest":true}},"studyName":{"type":"string","description":"The human readable name for a study\n\nMIAPPE V1.1 (DM-12) Study title - Human-readable text summarising the study","example":"INRA's Walnut Genetic Resources Observation at Kenya","calls":{"\/studies":true,"\/variantsets":true},"data_types":{"Study":true,"StudyNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true}},"studyPUI":{"type":"string","description":"A permanent unique identifier associated with this study data. For example, a URI or DOI","example":"doi:10.155454\/12349537312","calls":{"\/studies":true},"data_types":{"Study":true,"StudyNewRequest":true}},"studyType":{"type":"string","description":"The type of study being performed. ex. \"Yield Trial\", etc","example":"Phenotyping","calls":{"\/studies":true},"data_types":{"Study":true,"StudyNewRequest":true}},"trialDbId":{"type":"string","description":"The ID which uniquely identifies a trial","example":"48b327ea","calls":{"\/studies":true,"\/trials":true,"\/trials\/{trialDbId}":true,"\/observationlevels":true,"\/observations":true,"\/observations\/table":true,"\/observationunits":true,"\/observationunits\/table":true,"\/maps":true},"data_types":{"Study":true,"StudyNewRequest":true,"Trial":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"Sample":true,"SampleNewRequest":true}},"trialName":{"type":"string","description":"The human readable name of a trial","example":"Grape_Yield_Trial","calls":{"\/trials":true},"data_types":{"Study":true,"StudyNewRequest":true,"Trial":true,"TrialNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true}},"seasonDbIds":{"type":"string[]","description":"The ID which uniquely identifies a season","example":["Harvest Two 2017","Summer 2018"],"calls":[],"data_types":{"StudySearchRequest":true,"ObservationSearchRequest":true}},"sortBy":{"type":"string","description":"Name of one of the fields within the study object on which results can be sorted","example":"","calls":{"\/studies":true,"\/trials":true},"data_types":{"StudySearchRequest":true}},"sortOrder":{"type":"string","description":"Order results should be sorted. ex. \"ASC\" or \"DESC\"","example":"","calls":{"\/studies":true,"\/trials":true},"data_types":{"StudySearchRequest":true}},"studyCodes":{"type":"string[]","description":"A short human readable code for a study","example":["Grape_Yield_Spring_2018","Walnut_Kenya"],"calls":[],"data_types":{"StudySearchRequest":true}},"studyPUIs":{"type":"string[]","description":"Permanent unique identifier associated with study data. For example, a URI or DOI","example":["doi:10.155454\/12349537312","https:\/\/pui.per\/d8dd35e1"],"calls":[],"data_types":{"StudySearchRequest":true}},"studyTypes":{"type":"string[]","description":"The type of study being performed. ex. \"Yield Trial\", etc","example":["Yield Trial","Disease Resistance Trial"],"calls":[],"data_types":{"StudySearchRequest":true}},"alternativeAbbreviations":{"type":"string[]","description":"Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention","example":["H","PH","H1"],"calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"attribute":{"type":"string","description":"A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\"","example":"height","calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"entity":{"type":"string","description":"A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\"","example":"Stalk","calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"mainAbbreviation":{"type":"string","description":"Main abbreviation for trait name. (examples: \"Carotenoid content\" => \"CC\")","example":"PH","calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"status":{"type":"string","description":"Trait status (examples: \"recommended\", \"obsolete\", \"legacy\", etc.)","example":"recommended","calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass":true,"metadata":true,"metadataBase":true,"metadataTokenPagination":true,"VariableBaseClass_trait":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Trait":true,"ObservationVariable_trait":true,"VendorOrderStatusResponse_result":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmAttribute_trait":true}},"synonyms":{"type":"string[]","description":"Other trait names","example":["Height","Plant Height","Stalk Height","Canopy Height"],"calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass":true,"VariableBaseClass_trait":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"Trait":true,"ObservationVariable_trait":true,"Germplasm":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmNewRequest":true,"GermplasmSearchRequest":true,"GermplasmAttribute_trait":true}},"traitClass":{"type":"string","description":"Trait class. (examples: \"morphological\", \"phenological\", \"agronomical\", \"physiological\", \"abiotic stress\", \"biotic stress\", \"biochemical\", \"quality traits\", \"fertility\", etc.)","example":"phenological","calls":{"\/variables":true},"data_types":{"TraitBaseClass":true,"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"traitDescription":{"type":"string","description":"The description of a trait","example":"The height of the plant","calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"traitName":{"type":"string","description":"The human readable name of a trait\n\nMIAPPE V1.1 (DM-86) Trait - Name of the (plant or environmental) trait under observation","example":"Height","calls":[],"data_types":{"TraitBaseClass":true,"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"datasetAuthorships":{"type":"Trial_datasetAuthorships[]","description":"License and citation information for the data in this trial","example":"","calls":[],"data_types":{"Trial":true,"TrialNewRequest":true}},"publications":{"type":"Trial_publications[]","description":"MIAPPE V1.1 (DM-9) Associated publication - An identifier for a literature publication where the investigation is described. Use of DOIs is recommended.","example":"","calls":[],"data_types":{"Trial":true,"TrialNewRequest":true}},"trialDescription":{"type":"string","description":"The human readable description of a trial\n\nMIAPPE V1.1 (DM-4) Investigation description - Human-readable text describing the investigation in more detail.","example":"General drought resistance trial initiated in Peru before duplication in Africa","calls":[],"data_types":{"Trial":true,"TrialNewRequest":true}},"trialPUI":{"type":"string","description":"A permanent identifier for a trial. Could be DOI or other URI formatted identifier.","example":"https:\/\/doi.org\/101093190","calls":{"\/trials":true},"data_types":{"Trial":true,"TrialNewRequest":true}},"contactDbIds":{"type":"string[]","description":"List of contact entities associated with this trial","example":["e0f70c2a","b82f0967"],"calls":[],"data_types":{"TrialSearchRequest":true}},"searchDateRangeEnd":{"type":"string","description":"The end of the overlapping search date range. `searchDateRangeStart` must be before `searchDateRangeEnd`.\n\nReturn a Trial entity if any of the following cases are true\n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is null \n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is after `trial.startDate`\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is null\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is before `trial.endDate`","example":"","calls":{"\/trials":true},"data_types":{"TrialSearchRequest":true}},"searchDateRangeStart":{"type":"string","description":"The start of the overlapping search date range. `searchDateRangeStart` must be before `searchDateRangeEnd`.\n\nReturn a Trial entity if any of the following cases are true\n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is null \n\n- `searchDateRangeStart` is before `trial.endDate` AND `searchDateRangeEnd` is after `trial.startDate`\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is null\n\n- `searchDateRangeEnd` is after `trial.startDate` AND `searchDateRangeStart` is before `trial.endDate`","example":"","calls":{"\/trials":true},"data_types":{"TrialSearchRequest":true}},"trialPUIs":{"type":"string[]","description":"A permanent identifier for a trial. Could be DOI or other URI formatted identifier.","example":["https:\/\/doi.org\/01093190","https:\/\/doi.org\/11192409"],"calls":[],"data_types":{"TrialSearchRequest":true}},"contextOfUse":{"type":"string[]","description":"Indication of how trait is routinely used. (examples: [\"Trial evaluation\", \"Nursery evaluation\"])","example":["Trial evaluation","Nursery evaluation"],"calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"defaultValue":{"type":"string","description":"Variable default value. (examples: \"red\", \"2.3\", etc.)","example":"2.0","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"growthStage":{"type":"string","description":"Growth stage at which measurement is made (examples: \"flowering\")","example":"flowering","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"institution":{"type":"string","description":"Name of institution submitting the variable","example":"The BrAPI Institute","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"language":{"type":"string","description":"2 letter ISO 639-1 code for the language of submission of the variable.","example":"en","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"method":{"type":"VariableBaseClass_method","description":"","example":"","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"scale":{"type":"VariableBaseClass_scale","description":"","example":"","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"scientist":{"type":"string","description":"Name of scientist submitting the variable.","example":"Dr. Bob Robertson","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"submissionTimestamp":{"type":"string","description":"Timestamp when the Variable was added (ISO 8601)","example":"","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"trait":{"type":"VariableBaseClass_trait","description":"","example":"","calls":[],"data_types":{"VariableBaseClass":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"totalCount":{"type":"integer","description":"The total number of elements that are available on the server and match the requested query parameters.","example":10,"calls":[],"data_types":{"basePagination":true,"indexPagination":true,"tokenPagination":true,"metadata_pagination":true,"metadataTokenPagination_pagination":true}},"totalPages":{"type":"integer","description":"The total number of pages of elements available on the server. This should be calculated with the following formula. \n\ntotalPages = CEILING( totalCount \/ requested_page_size)","example":1,"calls":[],"data_types":{"basePagination":true,"indexPagination":true,"tokenPagination":true,"metadata_pagination":true,"metadataTokenPagination_pagination":true}},"fileDescription":{"type":"string","description":"A human readable description of the file contents","example":"This is an Excel data file","calls":[],"data_types":{"dataFile":true,"metadata_datafiles":true,"ShipmentForm":true}},"fileMD5Hash":{"type":"string","description":"The MD5 Hash of the file contents to be used as a check sum","example":"c2365e900c81a89cf74d83dab60df146","calls":[],"data_types":{"dataFile":true,"metadata_datafiles":true}},"fileName":{"type":"string","description":"The name of the file","example":"datafile.xlsx","calls":[],"data_types":{"dataFile":true,"metadata_datafiles":true,"VendorResultFile":true,"ShipmentForm":true}},"fileSize":{"type":"integer","description":"The size of the file in bytes","example":4398,"calls":[],"data_types":{"dataFile":true,"metadata_datafiles":true}},"fileType":{"type":"string","description":"The type or format of the file. Preferably MIME Type.","example":"application\/vnd.ms-excel","calls":[],"data_types":{"dataFile":true,"metadata_datafiles":true,"VendorResultFile":true}},"fileURL":{"type":"string","description":"The absolute URL where the file is located","example":"https:\/\/wiki.brapi.org\/examples\/datafile.xlsx","calls":[],"data_types":{"dataFile":true,"metadata_datafiles":true,"VendorResultFile":true,"VariantSet_availableFormats":true,"ShipmentForm":true}},"geometry":{"type":"object","description":"A geometry as defined by GeoJSON (RFC 7946). In this context, only Point or Polygon geometry are allowed.","example":{"coordinates":[-76.506042,42.417373,123],"type":"Point"},"calls":[],"data_types":{"geoJSON":true,"geoJSONSearchArea":true,"GeoJSON":true,"GeoJSONSearchArea":true}},"currentPage":{"type":"integer","description":"The index number for the returned page of data. This should always match the requested page number or the default page (0).","example":0,"calls":[],"data_types":{"indexPagination":true,"metadata_pagination":true}},"datafiles":{"type":"metadata_datafiles[]","description":"The datafiles contains a list of file URLs and metadata. \nThese files contain additional information related to the returned object and can be retrieved by a subsequent call. \nThis could be a supplementary data file, an informational file, the uploaded file where the data originated from, a generated file representing the whole dataset in a particular format, or any other related file. ","example":"","calls":[],"data_types":{"metadata":true,"metadataBase":true,"metadataTokenPagination":true}},"pagination":{"type":"metadata_pagination","description":"","example":"","calls":[],"data_types":{"metadata":true,"metadataTokenPagination":true}},"message":{"type":"string","description":"A short message concerning the status of this request\/response","example":"Request accepted, response successful","calls":[],"data_types":{"status":true,"metadata_status":true}},"messageType":{"type":"string","description":"The logging level for the attached message","example":"INFO","calls":[],"data_types":{"status":true,"metadata_status":true}},"currentPageToken":{"type":"string","description":"The string token used to query the current page of data.","example":"48bc6ac1","calls":[],"data_types":{"tokenPagination":true,"metadataTokenPagination_pagination":true}},"nextPageToken":{"type":"string","description":"The string token used to query the next page of data.","example":"cb668f63","calls":[],"data_types":{"tokenPagination":true,"metadataTokenPagination_pagination":true,"ReferenceBases":true}},"prevPageToken":{"type":"string","description":"The string token used to query the previous page of data.","example":"9659857e","calls":[],"data_types":{"tokenPagination":true,"metadataTokenPagination_pagination":true}},"referenceID":{"type":"string","description":"The external reference ID. Could be a simple string or a URI.","example":"","calls":[],"data_types":{"ExternalReferences_inner":true,"ListBaseFields_externalReferences":true,"Image_externalReferences":true,"MethodBaseClass_externalReferences":true,"Cross_externalReferences":true}},"referenceSource":{"type":"string","description":"An identifier for the source system or database of this reference","example":"","calls":[],"data_types":{"ExternalReferences_inner":true,"ListBaseFields_externalReferences":true,"Image_externalReferences":true,"MethodBaseClass_externalReferences":true,"Cross_externalReferences":true}},"URL":{"type":"string","description":"","example":"http:\/\/purl.obolibrary.org\/obo\/ro.owl","calls":[],"data_types":{"MethodBaseClass_ontologyReference_documentationLinks":true,"Method_ontologyReference_documentationLinks":true,"GermplasmAttribute_method_ontologyReference_documentationLinks":true}},"label":{"type":"string","description":"A text label for a category","example":"","calls":[],"data_types":{"ScaleBaseClass_validValues_categories":true,"ObservationVariable_scale_validValues_categories":true,"GermplasmAttribute_scale_validValues_categories":true}},"categories":{"type":"ScaleBaseClass_validValues_categories[]","description":"List of possible values with optional labels","example":[{"label":"low","value":"0"},{"label":"medium","value":"5"},{"label":"high","value":"10"}],"calls":[],"data_types":{"ScaleBaseClass_validValues":true,"ObservationVariable_scale_validValues":true,"GermplasmAttribute_scale_validValues":true}},"max":{"type":"integer","description":"Maximum value (used for field data capture control).","example":9999,"calls":[],"data_types":{"ScaleBaseClass_validValues":true,"ObservationVariable_scale_validValues":true,"GermplasmAttribute_scale_validValues":true}},"min":{"type":"integer","description":"Minimum value (used for data capture control) for numerical and date scales","example":2,"calls":[],"data_types":{"ScaleBaseClass_validValues":true,"ObservationVariable_scale_validValues":true,"GermplasmAttribute_scale_validValues":true}},"PUI":{"type":"string","description":"MIAPPE V1.1 (DM-23) Type of experimental design - Type of experimental  design of the study, in the form of an accession number from the Crop Ontology.","example":"CO_715:0000145","calls":[],"data_types":{"Study_experimentalDesign":true,"Study_growthFacility":true}},"timestamp":{"type":"string","description":"","example":"","calls":[],"data_types":{"Study_lastUpdate":true}},"datasetPUI":{"type":"string","description":"","example":"doi:10.15454\/312953986E3","calls":[],"data_types":{"Trial_datasetAuthorships":true}},"publicReleaseDate":{"type":"string","description":"MIAPPE V1.1 (DM-6) Public release date - Date of first public release of the dataset presently being described.","example":"","calls":[],"data_types":{"Trial_datasetAuthorships":true}},"submissionDate":{"type":"string","description":"MIAPPE V1.1 (DM-5) Submission date - Date of submission of the dataset presently being described to a host repository.","example":"","calls":[],"data_types":{"Trial_datasetAuthorships":true}},"publicationPUI":{"type":"string","description":"","example":"doi:10.15454\/312953986E3","calls":[],"data_types":{"Trial_publications":true}},"publicationReference":{"type":"string","description":"","example":"Selby, BrAPI - An application programming interface for plant breeding applications, Bioinformatics, https:\/\/doi.org\/10.1093\/bioinformatics\/190","calls":[],"data_types":{"Trial_publications":true}},"methodDbId":{"type":"string","description":"Method unique identifier","example":"0adb2764","calls":{"\/methods":true,"\/methods\/{methodDbId}":true},"data_types":{"VariableBaseClass_method":true,"Method":true,"ObservationVariable_method":true,"GermplasmAttribute_method":true}},"scaleDbId":{"type":"string","description":"Unique identifier of the scale. If left blank, the upload system will automatically generate a scale ID.","example":"af730171","calls":{"\/scales":true,"\/scales\/{scaleDbId}":true},"data_types":{"VariableBaseClass_scale":true,"Scale":true,"ObservationVariable_scale":true,"GermplasmAttribute_scale":true}},"traitDbId":{"type":"string","description":"The ID which uniquely identifies a trait","example":"9b2e34f5","calls":{"\/traits":true,"\/traits\/{traitDbId}":true},"data_types":{"VariableBaseClass_trait":true,"Trait":true,"ObservationVariable_trait":true,"GermplasmAttribute_trait":true}},"searchResultsDbId":{"type":"string","description":"","example":"551ae08c","calls":{"\/search\/lists\/{searchResultsDbId}":true,"\/search\/locations\/{searchResultsDbId}":true,"\/search\/people\/{searchResultsDbId}":true,"\/search\/programs\/{searchResultsDbId}":true,"\/search\/studies\/{searchResultsDbId}":true,"\/search\/trials\/{searchResultsDbId}":true,"\/observations\/table":true,"\/search\/images\/{searchResultsDbId}":true,"\/search\/observations\/{searchResultsDbId}":true,"\/search\/observationunits\/{searchResultsDbId}":true,"\/search\/variables\/{searchResultsDbId}":true,"\/search\/calls\/{searchResultsDbId}":true,"\/search\/callsets\/{searchResultsDbId}":true,"\/search\/markerpositions\/{searchResultsDbId}":true,"\/search\/references\/{searchResultsDbId}":true,"\/search\/referencesets\/{searchResultsDbId}":true,"\/search\/samples\/{searchResultsDbId}":true,"\/search\/variants\/{searchResultsDbId}":true,"\/search\/variantsets\/{searchResultsDbId}":true,"\/search\/attributes\/{searchResultsDbId}":true,"\/search\/attributevalues\/{searchResultsDbId}":true,"\/search\/germplasm\/{searchResultsDbId}":true},"data_types":{"202AcceptedSearchResponse_result":true}},"Authorization":{"type":"","description":"HTTP HEADER - Token used for Authorization \n\n<strong> Bearer {token_string} <\/strong>","example":"Bearer XXXX","calls":{"\/commoncropnames":true,"\/lists":true,"\/lists\/{listDbId}":true,"\/lists\/{listDbId}\/items":true,"\/locations":true,"\/locations\/{locationDbId}":true,"\/people":true,"\/people\/{personDbId}":true,"\/programs":true,"\/programs\/{programDbId}":true,"\/search\/lists":true,"\/search\/lists\/{searchResultsDbId}":true,"\/search\/locations":true,"\/search\/locations\/{searchResultsDbId}":true,"\/search\/people":true,"\/search\/people\/{searchResultsDbId}":true,"\/search\/programs":true,"\/search\/programs\/{searchResultsDbId}":true,"\/search\/studies":true,"\/search\/studies\/{searchResultsDbId}":true,"\/search\/trials":true,"\/search\/trials\/{searchResultsDbId}":true,"\/seasons":true,"\/seasons\/{seasonDbId}":true,"\/serverinfo":true,"\/studies":true,"\/studies\/{studyDbId}":true,"\/studytypes":true,"\/trials":true,"\/trials\/{trialDbId}":true,"\/events":true,"\/images":true,"\/images\/{imageDbId}":true,"\/images\/{imageDbId}\/imagecontent":true,"\/methods":true,"\/methods\/{methodDbId}":true,"\/observationlevels":true,"\/observations":true,"\/observations\/table":true,"\/observations\/{observationDbId}":true,"\/observationunits":true,"\/observationunits\/table":true,"\/observationunits\/{observationUnitDbId}":true,"\/ontologies":true,"\/scales":true,"\/scales\/{scaleDbId}":true,"\/search\/images":true,"\/search\/images\/{searchResultsDbId}":true,"\/search\/observations":true,"\/search\/observations\/{searchResultsDbId}":true,"\/search\/observationunits":true,"\/search\/observationunits\/{searchResultsDbId}":true,"\/search\/variables":true,"\/search\/variables\/{searchResultsDbId}":true,"\/traits":true,"\/traits\/{traitDbId}":true,"\/variables":true,"\/variables\/{observationVariableDbId}":true,"\/calls":true,"\/callsets":true,"\/callsets\/{callSetDbId}":true,"\/callsets\/{callSetDbId}\/calls":true,"\/maps":true,"\/maps\/{mapDbId}":true,"\/maps\/{mapDbId}\/linkagegroups":true,"\/markerpositions":true,"\/references":true,"\/references\/{referenceDbId}":true,"\/references\/{referenceDbId}\/bases":true,"\/referencesets":true,"\/referencesets\/{referenceSetDbId}":true,"\/samples":true,"\/samples\/{sampleDbId}":true,"\/search\/calls":true,"\/search\/calls\/{searchResultsDbId}":true,"\/search\/callsets":true,"\/search\/callsets\/{searchResultsDbId}":true,"\/search\/markerpositions":true,"\/search\/markerpositions\/{searchResultsDbId}":true,"\/search\/references":true,"\/search\/references\/{searchResultsDbId}":true,"\/search\/referencesets":true,"\/search\/referencesets\/{searchResultsDbId}":true,"\/search\/samples":true,"\/search\/samples\/{searchResultsDbId}":true,"\/search\/variants":true,"\/search\/variants\/{searchResultsDbId}":true,"\/search\/variantsets":true,"\/search\/variantsets\/{searchResultsDbId}":true,"\/variants":true,"\/variants\/{variantDbId}":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets":true,"\/variantsets\/extract":true,"\/variantsets\/{variantSetDbId}":true,"\/variantsets\/{variantSetDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/callsets":true,"\/variantsets\/{variantSetDbId}\/variants":true,"\/vendor\/orders":true,"\/vendor\/orders\/{orderId}\/plates":true,"\/vendor\/orders\/{orderId}\/results":true,"\/vendor\/orders\/{orderId}\/status":true,"\/vendor\/plates":true,"\/vendor\/plates\/{submissionId}":true,"\/vendor\/specifications":true,"\/attributes":true,"\/attributes\/categories":true,"\/attributes\/{attributeDbId}":true,"\/attributevalues":true,"\/attributevalues\/{attributeValueDbId}":true,"\/breedingmethods":true,"\/breedingmethods\/{breedingMethodDbId}":true,"\/crosses":true,"\/crossingprojects":true,"\/crossingprojects\/{crossingProjectDbId}":true,"\/germplasm":true,"\/germplasm\/{germplasmDbId}":true,"\/germplasm\/{germplasmDbId}\/mcpd":true,"\/germplasm\/{germplasmDbId}\/pedigree":true,"\/germplasm\/{germplasmDbId}\/progeny":true,"\/plannedcrosses":true,"\/search\/attributes":true,"\/search\/attributes\/{searchResultsDbId}":true,"\/search\/attributevalues":true,"\/search\/attributevalues\/{searchResultsDbId}":true,"\/search\/germplasm":true,"\/search\/germplasm\/{searchResultsDbId}":true,"\/seedlots":true,"\/seedlots\/transactions":true,"\/seedlots\/{seedLotDbId}":true,"\/seedlots\/{seedLotDbId}\/transactions":true},"data_types":[]},"externalReferenceID":{"type":"","description":"An external reference ID. Could be a simple string or a URI. (use with `externalReferenceSource` parameter)","example":"","calls":{"\/lists":true,"\/locations":true,"\/people":true,"\/programs":true,"\/studies":true,"\/trials":true,"\/images":true,"\/methods":true,"\/observations":true,"\/observationunits":true,"\/scales":true,"\/traits":true,"\/variables":true,"\/samples":true,"\/attributes":true,"\/attributevalues":true,"\/crosses":true,"\/crossingprojects":true,"\/germplasm":true,"\/plannedcrosses":true,"\/seedlots":true,"\/seedlots\/transactions":true},"data_types":[]},"externalReferenceSource":{"type":"","description":"An identifier for the source system or database of an external reference (use with `externalReferenceID` parameter)","example":"","calls":{"\/lists":true,"\/locations":true,"\/people":true,"\/programs":true,"\/studies":true,"\/trials":true,"\/images":true,"\/methods":true,"\/observations":true,"\/observationunits":true,"\/scales":true,"\/traits":true,"\/variables":true,"\/samples":true,"\/attributes":true,"\/attributevalues":true,"\/crosses":true,"\/crossingprojects":true,"\/germplasm":true,"\/plannedcrosses":true,"\/seedlots":true,"\/seedlots\/transactions":true},"data_types":[]},"season":{"type":"Observation_season","description":"","example":"","calls":{"\/seasons":true},"data_types":{"Observation":true,"ObservationNewRequest":true,"Season":true,"Observation_season":true,"ObservationUnit_observations":true}},"germplasmDbId":{"type":"string","description":"The ID which uniquely identifies a germplasm","example":"2408ab11","calls":{"\/studies":true,"\/observations":true,"\/observations\/table":true,"\/observationunits":true,"\/observationunits\/table":true,"\/callsets":true,"\/samples":true,"\/attributes":true,"\/attributevalues":true,"\/germplasm":true,"\/germplasm\/{germplasmDbId}":true,"\/germplasm\/{germplasmDbId}\/mcpd":true,"\/germplasm\/{germplasmDbId}\/pedigree":true,"\/germplasm\/{germplasmDbId}\/progeny":true,"\/seedlots":true,"\/seedlots\/transactions":true},"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"ObservationUnit_observations":true,"Sample":true,"SampleNewRequest":true,"CrossParent":true,"Germplasm":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true,"GermplasmMCPD":true,"PedigreeNode":true,"ProgenyNode":true,"SeedLot":true,"SeedLotNewRequest":true,"Cross_parent1":true,"PedigreeNode_parents":true,"PedigreeNode_siblings":true,"ProgenyNode_progeny":true}},"observationVariableDbId":{"type":"string","description":"The ID which uniquely identifies an observation variable","example":"c403d107","calls":{"\/studies":true,"\/methods":true,"\/observations":true,"\/observations\/table":true,"\/observationunits\/table":true,"\/scales":true,"\/traits":true,"\/variables":true,"\/variables\/{observationVariableDbId}":true},"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationVariable":true,"ObservationTable_observationVariables":true,"ObservationUnit_observations":true}},"date":{"type":"string[]","description":"A list of dates when the event occurred\n\nMIAPPE V1.1 (DM-68) Event date - Date and time of the event.","example":["2018-10-08T18:15:11Z","2018-11-09T18:16:12Z"],"calls":[],"data_types":{"Event":true}},"eventDbId":{"type":"string","description":"Internal database identifier","example":"8566d4cb","calls":{"\/events":true},"data_types":{"Event":true}},"eventDescription":{"type":"string","description":"A detailed, human-readable description of this event\n\nMIAPPE V1.1 (DM-67) Event description - Description of the event, including details such as amount applied and possibly duration of the event. ","example":"A set of plots was watered","calls":[],"data_types":{"Event":true}},"eventParameters":{"type":"Event_eventParameters[]","description":"A list of objects describing additional event parameters. Each of the following accepts a human-readable value or URI","example":[{"key":"http:\/\/www.example.fr\/vocabulary\/2018#hasContact,","value":"http:\/\/www.example.fr\/id\/agent\/marie,","valueRdfType":"http:\/\/xmlns.com\/foaf\/0.1\/Agent,"},{"key":"fertilizer","value":"nitrogen"}],"calls":[],"data_types":{"Event":true}},"eventType":{"type":"string","description":"General category for this event (e.g. Sowing, Watering, Rain). Each eventType should correspond to exactly one eventTypeDbId, if provided.\n\nMIAPPE V1.1 (DM-65) Event type - Short name of the event.","example":"Watering","calls":{"\/events":true},"data_types":{"Event":true}},"eventTypeDbId":{"type":"string","description":"An identifier for this event type, in the form of an ontology class reference\n\nMIAPPE V1.1 (DM-66) Event accession number - Accession number of the event type in a suitable controlled vocabulary (Crop Ontology).","example":"4e7d691e","calls":[],"data_types":{"Event":true}},"observationUnitDbIds":{"type":"string[]","description":"A list of the affected observation units. If this parameter is not given, it is understood that the event affected all units in the study","example":["8439eaff","d7682e7a","305ae51c"],"calls":[],"data_types":{"Event":true,"ImageSearchRequest":true,"ObservationSearchRequest":true,"ObservationUnitSearchRequest":true,"SampleSearchRequest":true}},"copyright":{"type":"string","description":"The copyright information of this image. Example 'Copyright 2018 Bob Robertson'","example":"Copyright 2018 Bob Robertson","calls":[],"data_types":{"Image":true,"ImageNewRequest":true,"Ontology":true}},"descriptiveOntologyTerms":{"type":"string[]","description":"A list of terms to formally describe the image. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL.","example":["doi:10.1002\/0470841559","Red","ncbi:0300294"],"calls":[],"data_types":{"Image":true,"ImageNewRequest":true,"ImageSearchRequest":true}},"imageDbId":{"type":"string","description":"The unique identifier of an image","example":"a55efb9c","calls":{"\/images":true,"\/images\/{imageDbId}":true,"\/images\/{imageDbId}\/imagecontent":true},"data_types":{"Image":true}},"imageFileName":{"type":"string","description":"The name of the image file. Might be the same as 'imageName', but could be different.","example":"image_0000231.jpg","calls":[],"data_types":{"Image":true,"ImageNewRequest":true}},"imageFileSize":{"type":"integer","description":"The size of the image in Bytes.","example":50000,"calls":[],"data_types":{"Image":true,"ImageNewRequest":true}},"imageHeight":{"type":"integer","description":"The height of the image in Pixels.","example":550,"calls":[],"data_types":{"Image":true,"ImageNewRequest":true}},"imageLocation":{"type":"GeoJSON","description":"","example":"","calls":[],"data_types":{"Image":true,"ImageNewRequest":true,"ImageSearchRequest":true}},"imageName":{"type":"string","description":"The human readable name of an image. Might be the same as 'imageFileName', but could be different.","example":"Tomato Image 1","calls":{"\/images":true},"data_types":{"Image":true,"ImageNewRequest":true}},"imageTimeStamp":{"type":"string","description":"The date and time the image was taken","example":"","calls":[],"data_types":{"Image":true,"ImageNewRequest":true}},"imageURL":{"type":"string","description":"The complete, absolute URI path to the image file. Images might be stored on a different host or path than the BrAPI web server.","example":"https:\/\/wiki.brapi.org\/images\/tomato","calls":[],"data_types":{"Image":true,"ImageNewRequest":true}},"imageWidth":{"type":"integer","description":"The width of the image in Pixels.","example":700,"calls":[],"data_types":{"Image":true,"ImageNewRequest":true}},"mimeType":{"type":"string","description":"The file type of the image. Examples 'image\/jpeg', 'image\/png', 'image\/svg', etc","example":"image\/jpeg","calls":[],"data_types":{"Image":true,"ImageNewRequest":true}},"observationDbIds":{"type":"string[]","description":"A list of observation Ids this image is associated with, if applicable.","example":["d05dd235","8875177d","c08e81b6"],"calls":[],"data_types":{"Image":true,"ImageNewRequest":true,"ImageSearchRequest":true,"ObservationSearchRequest":true}},"observationUnitDbId":{"type":"string","description":"The related observation unit identifier, if relevant.","example":"b7e690b6","calls":{"\/events":true,"\/images":true,"\/observations":true,"\/observations\/table":true,"\/observationunits":true,"\/observationunits\/table":true,"\/observationunits\/{observationUnitDbId}":true,"\/samples":true},"data_types":{"Image":true,"ImageNewRequest":true,"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnit_observations":true,"Sample":true,"SampleNewRequest":true,"CrossParent":true,"Cross_parent1":true}},"imageDbIds":{"type":"string[]","description":"A list of image Ids to search for","example":["564b64a6","0d122d1d"],"calls":[],"data_types":{"ImageSearchRequest":true}},"imageFileNames":{"type":"string[]","description":"Image file names to search for.","example":["image_01032019.jpg","picture_field_1234.jpg"],"calls":[],"data_types":{"ImageSearchRequest":true}},"imageFileSizeMax":{"type":"integer","description":"A maximum image file size to search for.","example":20000000,"calls":[],"data_types":{"ImageSearchRequest":true}},"imageFileSizeMin":{"type":"integer","description":"A minimum image file size to search for.","example":1000,"calls":[],"data_types":{"ImageSearchRequest":true}},"imageHeightMax":{"type":"integer","description":"A maximum image height to search for.","example":1080,"calls":[],"data_types":{"ImageSearchRequest":true}},"imageHeightMin":{"type":"integer","description":"A minimum image height to search for.","example":720,"calls":[],"data_types":{"ImageSearchRequest":true}},"imageNames":{"type":"string[]","description":"Human readable names to search for.","example":["Image 43","Tractor in field"],"calls":[],"data_types":{"ImageSearchRequest":true}},"imageTimeStampRangeEnd":{"type":"string","description":"The latest timestamp to search for.","example":"","calls":[],"data_types":{"ImageSearchRequest":true}},"imageTimeStampRangeStart":{"type":"string","description":"The earliest timestamp to search for.","example":"","calls":[],"data_types":{"ImageSearchRequest":true}},"imageWidthMax":{"type":"integer","description":"A maximum image width to search for.","example":1920,"calls":[],"data_types":{"ImageSearchRequest":true}},"imageWidthMin":{"type":"integer","description":"A minimum image width to search for.","example":1280,"calls":[],"data_types":{"ImageSearchRequest":true}},"mimeTypes":{"type":"string[]","description":"A set of image file types to search for.","example":["image\/jpg","image\/jpeg","image\/gif"],"calls":[],"data_types":{"ImageSearchRequest":true}},"collector":{"type":"string","description":"The name or identifier of the entity which collected the observation","example":"917d3ae0","calls":[],"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationUnit_observations":true}},"germplasmName":{"type":"string","description":"Name of the germplasm. It can be the preferred name and does not have to be unique.","example":"A0000003","calls":{"\/germplasm":true},"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"ObservationUnit_observations":true,"CrossParent":true,"Germplasm":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true,"GermplasmNewRequest":true,"PedigreeNode":true,"ProgenyNode":true,"Cross_parent1":true,"PedigreeNode_parents":true,"PedigreeNode_siblings":true,"ProgenyNode_progeny":true}},"observationDbId":{"type":"string","description":"The ID which uniquely identifies an observation","example":"ef24b615","calls":{"\/images":true,"\/observations":true,"\/observations\/{observationDbId}":true},"data_types":{"Observation":true,"ObservationUnit_observations":true}},"observationTimeStamp":{"type":"string","description":"The date and time when this observation was made","example":"","calls":[],"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationUnit_observations":true}},"observationUnitName":{"type":"string","description":"A human readable name for an observation unit","example":"Plot 1","calls":[],"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationUnit":true,"ObservationUnitNewRequest":true,"ObservationUnit_observations":true,"CrossParent":true,"Cross_parent1":true}},"observationVariableName":{"type":"string","description":"A human readable name for an observation variable","example":"Plant Height in meters","calls":[],"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationVariable":true,"ObservationVariableNewRequest":true,"ObservationTable_observationVariables":true,"ObservationUnit_observations":true}},"uploadedBy":{"type":"string","description":"The name or id of the user who uploaded the observation to the database system","example":"a2f7f60b","calls":[],"data_types":{"Observation":true,"ObservationNewRequest":true,"ObservationUnit_observations":true}},"observationLevelRelationships":{"type":"ObservationUnitLevelRelationship_1[]","description":"Searches for values in ObservationUnit->observationUnitPosition->observationLevelRelationships","example":[{"levelCode":"Field_1","levelName":"field"}],"calls":[],"data_types":{"ObservationSearchRequest":true,"ObservationUnitPosition":true,"ObservationUnitSearchRequest":true,"ObservationUnit_observationUnitPosition":true}},"observationTimeStampRangeEnd":{"type":"string","description":"Timestamp range end","example":"","calls":{"\/observations":true,"\/observations\/table":true},"data_types":{"ObservationSearchRequest":true}},"observationTimeStampRangeStart":{"type":"string","description":"Timestamp range start","example":"","calls":{"\/observations":true,"\/observations\/table":true},"data_types":{"ObservationSearchRequest":true}},"headerRow":{"type":"string[]","description":"<p>The table is REQUIRED to have the following columns<\/p>\n<ul>\n  <li>observationUnitDbId - Each row is related to one Observation Unit<\/li>\n  <li>observationTimeStamp - Each row is has a time stamp for when the observation was taken<\/li>\n  <li>At least one column with an observationVariableDbId<\/li>\n<\/ul>\n<p>The table may have any or all of the following OPTIONAL columns. Included columns are decided by the server developer<\/p>\n<ul>\n  <li>observationUnitName<\/li>\n  <li>studyDbId<\/li>\n  <li>studyName<\/li>\n  <li>germplasmDbId<\/li>\n  <li>germplasmName<\/li>\n  <li>positionCoordinateX<\/li>\n  <li>positionCoordinateY<\/li>\n  <li>year<\/li>\n<\/ul>\n<p>The table also may have any number of Observation Unit Hierarchy Level columns. For example:<\/p>\n<ul>\n  <li>field<\/li>\n  <li>plot<\/li>\n  <li>sub-plot<\/li>\n  <li>plant<\/li>\n  <li>pot<\/li>\n  <li>block<\/li>\n  <li>entry<\/li>\n  <li>rep<\/li>\n<\/ul>\n<p>The JSON representation provides a pair of extra arrays for defining the headers of the table. \nThe first array \"headerRow\" will always contain \"observationUnitDbId\" and any or all of the OPTIONAL column header names. \nThe second array \"observationVariables\" contains the names and DbIds for the Observation Variables represented in the table. \nBy appending the two arrays, you can construct the complete header row of the table. <\/p>","example":["observationTimeStamp","observationUnitDbId","observationUnitName","studyDbId","studyName","germplasmDbId","germplasmName","positionCoordinateX","positionCoordinateY","year","field","plot","sub-plot","plant","pot","block","entry","rep"],"calls":[],"data_types":{"ObservationTable":true,"ObservationUnitTable":true}},"observationVariables":{"type":"ObservationTable_observationVariables[]","description":"The list of observation variables which have values recorded for them in the data matrix. Append to the 'headerRow' for complete header row of the table.","example":[{"observationVariableDbId":"367aa1a9","observationVariableName":"Plant height"},{"observationVariableDbId":"2acb934c","observationVariableName":"Carotenoid"},{"observationVariableDbId":"85a21ce1","observationVariableName":"Root color"},{"observationVariableDbId":"46f590e5","observationVariableName":"Virus severity"}],"calls":[],"data_types":{"ObservationTable":true,"ObservationUnitTable":true}},"factor":{"type":"string","description":"The type of treatment\/factor. ex. 'fertilizer', 'inoculation', 'irrigation', etc\n\nMIAPPE V1.1 (DM-61) Experimental Factor type - Name\/Acronym of the experimental factor.","example":"fertilizer","calls":[],"data_types":{"ObservationTreatment":true,"ObservationUnit_treatments":true}},"modality":{"type":"string","description":"The treatment\/factor description. ex. 'low fertilizer', 'yellow rust inoculation', 'high water', etc\n\nMIAPPE V1.1 (DM-62) Experimental Factor description - Free text description of the experimental factor. This includes all relevant treatments planned and protocol planned for all the plants targeted by a given experimental factor. ","example":"low fertilizer","calls":[],"data_types":{"ObservationTreatment":true,"ObservationUnit_treatments":true}},"observationUnitPUI":{"type":"string","description":"A Permanent Unique Identifier for an observation unit\n\nMIAPPE V1.1 (DM-72) External ID - Identifier for the observation unit in a persistent repository, comprises the name of the repository and the identifier of the observation unit therein. The EBI Biosamples repository can be used. URI are recommended when possible.","example":"http:\/\/pui.per\/plot\/1a9afc14","calls":[],"data_types":{"ObservationUnit":true,"ObservationUnitNewRequest":true}},"observationUnitPosition":{"type":"ObservationUnit_observationUnitPosition","description":"","example":"","calls":[],"data_types":{"ObservationUnit":true,"ObservationUnitNewRequest":true}},"observations":{"type":"ObservationUnit_observations[]","description":"All observations attached to this observation unit. \n\nDefault for this field is null or omitted. Do NOT include data in this field unless the 'includeObservations' flag is explicitly set to True.","example":"","calls":[],"data_types":{"ObservationUnit":true}},"seedLotDbId":{"type":"string","description":"The unique identifier for the originating Seed Lot","example":"261ecb09","calls":{"\/seedlots":true,"\/seedlots\/transactions":true,"\/seedlots\/{seedLotDbId}":true,"\/seedlots\/{seedLotDbId}\/transactions":true},"data_types":{"ObservationUnit":true,"ObservationUnitNewRequest":true,"SeedLot":true}},"treatments":{"type":"ObservationUnit_treatments[]","description":"List of treatments applied to an observation unit.\n\nMIAPPE V1.1 (DM-74) Observation Unit factor value - List of values for each factor applied to the observation unit.","example":"","calls":[],"data_types":{"ObservationUnit":true,"ObservationUnitNewRequest":true}},"levelCode":{"type":"string","description":"An ID code for this level tag. Identify this observation unit by each level of the hierarchy where it exists","example":"Plot_123","calls":[],"data_types":{"ObservationUnitLevelRelationship":true,"ObservationUnitLevelRelationship_1":true,"ObservationUnitLevelRelationship_2":true}},"entryType":{"type":"string","description":"The type of entry for this observation unit. ex. \"CHECK\", \"TEST\", \"FILLER\"","example":"TEST","calls":[],"data_types":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"geoCoordinates":{"type":"GeoJSON","description":"","example":"","calls":[],"data_types":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"observationLevel":{"type":"ObservationUnitLevelRelationship_2","description":"","example":"","calls":{"\/observations\/table":true,"\/observationunits\/table":true},"data_types":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"positionCoordinateX":{"type":"string","description":"The X position coordinate for an observation unit. Different systems may use different coordinate systems.","example":"74","calls":[],"data_types":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"positionCoordinateXType":{"type":"string","description":"The type of positional coordinate used. Must be one of the following values\n\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details\n\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details\n\nPLANTED_ROW - The physical planted row number \n\nPLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row\n\nGRID_ROW - The row index number of a square grid overlay\n\nGRID_COL - The column index number of a square grid overlay\n\nMEASURED_ROW - The distance in meters from a defined 0-th row\n\nMEASURED_COL - The distance in meters from a defined 0-th column","example":"GRID_COL","calls":[],"data_types":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"positionCoordinateY":{"type":"string","description":"The Y position coordinate for an observation unit. Different systems may use different coordinate systems.","example":"03","calls":[],"data_types":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"positionCoordinateYType":{"type":"string","description":"The type of positional coordinate used. Must be one of the following values\n\nLONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details\n\nLATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details\n\nPLANTED_ROW - The physical planted row number \n\nPLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row\n\nGRID_ROW - The row index number of a square grid overlay\n\nGRID_COL - The column index number of a square grid overlay\n\nMEASURED_ROW - The distance in meters from a defined 0-th row\n\nMEASURED_COL - The distance in meters from a defined 0-th column","example":"GRID_ROW","calls":[],"data_types":{"ObservationUnitPosition":true,"ObservationUnit_observationUnitPosition":true}},"includeObservations":{"type":"boolean","description":"Use this parameter to include a list of observations embedded in each ObservationUnit object. \n\nCAUTION - Use this parameter at your own risk. It may return large, unpaginated lists of observation data. Only set this value to True if you are sure you need to.","example":false,"calls":{"\/observationunits":true},"data_types":{"ObservationUnitSearchRequest":true}},"methodDbIds":{"type":"string[]","description":"List of methods to filter search results","example":["07e34f83","d3d5517a"],"calls":[],"data_types":{"ObservationVariableSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"ontologyDbIds":{"type":"string[]","description":"List of ontology IDs to search for","example":["f44f7b23","a26b576e"],"calls":[],"data_types":{"ObservationVariableSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"scaleDbIds":{"type":"string[]","description":"List of scales to filter search results","example":["a13ecffa","7e1afe4f"],"calls":[],"data_types":{"ObservationVariableSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"traitClasses":{"type":"string[]","description":"List of trait classes to filter search results","example":["morphological","phenological","agronomical"],"calls":[],"data_types":{"ObservationVariableSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"traitDbIds":{"type":"string[]","description":"List of trait unique ID to filter search results","example":["ef81147b","78d82fad"],"calls":[],"data_types":{"ObservationVariableSearchRequest":true,"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"authors":{"type":"string","description":"Ontology's list of authors (no specific format)","example":"Bob Robertson, Rob Robertson","calls":[],"data_types":{"Ontology":true}},"licence":{"type":"string","description":"Ontology licence","example":"MIT Open source licence","calls":[],"data_types":{"Ontology":true}},"key":{"type":"string","description":"Specifies the relationship between the event and the given property. E.g. fertilizer, operator","example":"operator","calls":[],"data_types":{"Event_eventParameters":true,"VendorSpecificationService_specificRequirements":true}},"rdfValue":{"type":"string","description":"The type of the value given above, e.g. http:\/\/xmlns.com\/foaf\/0.1\/Agent","example":"http:\/\/xmlns.com\/foaf\/0.1\/Agent","calls":[],"data_types":{"Event_eventParameters":true}},"dateRangeStart":{"type":"","description":"Filter based on an Date Range","example":"","calls":{"\/events":true},"data_types":[]},"dateRangeEnd":{"type":"","description":"Filter based on an Date Range","example":"","calls":{"\/events":true},"data_types":[]},"descriptiveOntologyTerm":{"type":"","description":"A descriptive term associated with an image","example":"","calls":{"\/images":true},"data_types":[]},"observationUnitLevelName":{"type":"","description":"The Observation Unit Level. Returns only the observation unit of the specified Level. References ObservationUnit->observationUnitPosition->observationLevel->levelName","example":"","calls":{"\/observations":true,"\/observationunits":true},"data_types":[]},"observationUnitLevelOrder":{"type":"","description":"The Observation Unit Level Order Number. Returns only the observation unit of the specified Level. References ObservationUnit->observationUnitPosition->observationLevel->levelOrder","example":"","calls":{"\/observations":true,"\/observationunits":true},"data_types":[]},"observationUnitLevelCode":{"type":"","description":"The Observation Unit Level Code. This parameter should be used together with `observationUnitLevelName` or `observationUnitLevelOrder`. References ObservationUnit->observationUnitPosition->observationLevel->levelCode","example":"","calls":{"\/observations":true,"\/observationunits":true},"data_types":[]},"analysisDbId":{"type":"string","description":"Unique identifier for this analysis description","example":"6191a6bd","calls":[],"data_types":{"Analysis":true}},"analysisName":{"type":"string","description":"A human readable name for this analysis","example":"Standard QC","calls":[],"data_types":{"Analysis":true}},"created":{"type":"string","description":"The time at which this record was created, in ISO 8601 format.","example":"","calls":[],"data_types":{"Analysis":true,"CallSet":true,"Variant":true}},"software":{"type":"string[]","description":"The software run to generate this analysis.","example":["https:\/\/github.com\/genotyping\/QC"],"calls":[],"data_types":{"Analysis":true}},"updated":{"type":"string","description":"The time at which this record was last updated, in ISO 8601 format.","example":"","calls":[],"data_types":{"Analysis":true,"CallSet":true,"Variant":true}},"callSetDbId":{"type":"string","description":"The ID of the call set this variant call belongs to.\n\nIf this field is not present, the ordering of the call sets from a `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match the ordering of the calls on this `Variant`. The number of results will also be the same.","example":"16466f55","calls":{"\/calls":true,"\/callsets":true,"\/callsets\/{callSetDbId}":true,"\/callsets\/{callSetDbId}\/calls":true,"\/variantsets":true,"\/variantsets\/{variantSetDbId}\/callsets":true},"data_types":{"Call":true,"CallSet":true}},"callSetName":{"type":"string","description":"The name of the call set this variant call belongs to. If this field is not present, the ordering of the call sets from a `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match the ordering of the calls on this `Variant`. The number of results will also be the same.","example":"Sample_123_DNA_Run_456","calls":{"\/callsets":true,"\/variantsets\/{variantSetDbId}\/callsets":true},"data_types":{"Call":true,"CallSet":true}},"genotype":{"type":"ListValue","description":"","example":"","calls":[],"data_types":{"Call":true}},"genotype_likelihood":{"type":"number[]","description":"The genotype likelihood for this variant call. Each array entry represents how likely a specific genotype is for this call as log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The value ordering is defined by the GL tag in the VCF spec.","example":[1],"calls":[],"data_types":{"Call":true}},"phaseSet":{"type":"string","description":"If this field is populated, this variant call's genotype ordering implies the phase of the bases and is consistent with any other variant calls on the same contig which have the same phase set string.","example":"6410afc5","calls":[],"data_types":{"Call":true}},"variantDbId":{"type":"string","description":"The ID of the variant this call belongs to.","example":"538c8ecf","calls":{"\/calls":true,"\/markerpositions":true,"\/variants":true,"\/variants\/{variantDbId}":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets":true,"\/variantsets\/{variantSetDbId}\/variants":true},"data_types":{"Call":true,"MarkerPosition":true,"Variant":true}},"variantName":{"type":"string","description":"The name of the variant this call belongs to.","example":"Marker A","calls":[],"data_types":{"Call":true,"MarkerPosition":true}},"sampleDbId":{"type":"string","description":"The Biosample entity the call set data was generated from.","example":"5e50e11d","calls":{"\/callsets":true,"\/samples":true,"\/samples\/{sampleDbId}":true},"data_types":{"CallSet":true,"Sample":true}},"variantSetDbIds":{"type":"string[]","description":"The IDs of the variant sets this call set has calls in.","example":["cfd3d60f","a4e8bfe9"],"calls":[],"data_types":{"CallSet":true,"CallsSearchRequest":true,"VariantSetsExtractRequest":true,"VariantSetsSearchRequest":true,"callSetsSearchRequest":true,"variantsSearchRequest":true}},"callSetDbIds":{"type":"string[]","description":"The CallSet to search.","example":["a03202ec","274e4f63"],"calls":[],"data_types":{"CallsSearchRequest":true,"VariantSetsExtractRequest":true,"VariantSetsSearchRequest":true,"callSetsSearchRequest":true,"variantsSearchRequest":true}},"expandHomozygotes":{"type":"boolean","description":"Should homozygotes be expanded (true) or collapsed into a single occurrence (false)","example":true,"calls":{"\/calls":true,"\/callsets\/{callSetDbId}\/calls":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/calls":true},"data_types":{"CallsSearchRequest":true,"VariantSetsExtractRequest":true}},"sepPhased":{"type":"string","description":"The string used as a separator for phased allele calls.","example":"~","calls":{"\/calls":true,"\/callsets\/{callSetDbId}\/calls":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/calls":true},"data_types":{"CallsSearchRequest":true,"VariantSetsExtractRequest":true}},"sepUnphased":{"type":"string","description":"The string used as a separator for unphased allele calls.","example":"|","calls":{"\/calls":true,"\/callsets\/{callSetDbId}\/calls":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/calls":true},"data_types":{"CallsSearchRequest":true,"VariantSetsExtractRequest":true}},"unknownString":{"type":"string","description":"The string used as a representation for missing data.","example":"-","calls":{"\/calls":true,"\/callsets\/{callSetDbId}\/calls":true,"\/variants\/{variantDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/calls":true},"data_types":{"CallsSearchRequest":true,"VariantSetsExtractRequest":true}},"variantDbIds":{"type":"string[]","description":"The Variant to search.","example":["bba0b258","ff97d4f0"],"calls":[],"data_types":{"CallsSearchRequest":true,"MarkerPositionSearchRequest":true,"VariantSetsExtractRequest":true,"VariantSetsSearchRequest":true,"variantsSearchRequest":true}},"comments":{"type":"string","description":"Additional comments","example":"Comments about this map","calls":[],"data_types":{"GenomeMap":true,"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"linkageGroupCount":{"type":"integer","description":"The number of linkage groups present in this genomic map","example":5,"calls":[],"data_types":{"GenomeMap":true}},"mapDbId":{"type":"string","description":"The ID which uniquely identifies this genomic map","example":"142cffd5","calls":{"\/maps":true,"\/maps\/{mapDbId}":true,"\/maps\/{mapDbId}\/linkagegroups":true,"\/markerpositions":true},"data_types":{"GenomeMap":true,"MarkerPosition":true}},"mapName":{"type":"string","description":"A human readable name for this genomic map","example":"Genome Map 1","calls":[],"data_types":{"GenomeMap":true,"MarkerPosition":true}},"mapPUI":{"type":"string","description":"The DOI or other permanent identifier for this genomic map","example":"doi:10.3207\/2959859860","calls":{"\/maps":true},"data_types":{"GenomeMap":true}},"markerCount":{"type":"integer","description":"The number of markers present in this genomic map","example":1100,"calls":[],"data_types":{"GenomeMap":true,"LinkageGroup":true}},"publishedDate":{"type":"string","description":"The date this genome was published","example":"","calls":[],"data_types":{"GenomeMap":true}},"scientificName":{"type":"string","description":"Full scientific binomial format name. This includes Genus, Species, and Sub-species","example":"Zea mays","calls":{"\/maps":true},"data_types":{"GenomeMap":true}},"linkageGroupName":{"type":"string","description":"The Uniquely Identifiable name of this linkage group","example":"Chromosome 3","calls":{"\/markerpositions":true},"data_types":{"LinkageGroup":true,"MarkerPosition":true}},"maxPosition":{"type":"integer","description":"The maximum position of a marker within this linkage group","example":2500,"calls":{"\/markerpositions":true},"data_types":{"LinkageGroup":true,"MarkerPositionSearchRequest":true}},"values":{"type":"array","description":"Repeated field of dynamically typed values.","example":["AA"],"calls":[],"data_types":{"ListValue":true}},"position":{"type":"integer","description":"The position of a marker within a linkage group","example":2390,"calls":[],"data_types":{"MarkerPosition":true}},"linkageGroupNames":{"type":"string[]","description":"The Uniquely Identifiable name of this linkage group","example":["Chromosome 2","Chromosome 3"],"calls":[],"data_types":{"MarkerPositionSearchRequest":true}},"mapDbIds":{"type":"string[]","description":"The unique ID of the map","example":["7e6fa8aa","bedc418c"],"calls":[],"data_types":{"MarkerPositionSearchRequest":true}},"minPosition":{"type":"integer","description":"The minimum position","example":250,"calls":{"\/markerpositions":true},"data_types":{"MarkerPositionSearchRequest":true}},"units":{"type":"string","description":"Units (example: \"ng\/ul\")","example":"ng\/ul","calls":[],"data_types":{"Measurement":true,"VendorOrderSubmissionRequest_concentration":true,"SeedLot":true,"SeedLotNewRequest":true,"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true}},"term":{"type":"string","description":"Ontology term - the label of the ontology term the termId is pointing to.","example":"sonic hedgehog","calls":[],"data_types":{"OntologyTerm":true}},"termURI":{"type":"string","description":"Ontology term identifier - the CURIE for an ontology term. It differs from the standard GA4GH schema's :ref:`id ` in that it is a CURIE pointing to an information resource outside of the scope of the schema or its resource implementation.","example":"MGI:MGI:98297","calls":[],"data_types":{"OntologyTerm":true}},"isDerived":{"type":"boolean","description":"A sequence X is said to be derived from source sequence Y, if X and Y are of the same length and the per-base sequence divergence at A\/C\/G\/T bases is sufficiently small. Two sequences derived from the same official sequence share the same coordinates and annotations, and can be replaced with the official sequence for certain use cases.","example":false,"calls":{"\/references":true},"data_types":{"Reference":true,"ReferenceSet":true,"ReferencesSearchRequest":true}},"length":{"type":"integer","description":"The length of this reference's sequence.","example":50000000,"calls":[],"data_types":{"Reference":true}},"md5checksum":{"type":"string","description":"The MD5 checksum uniquely representing this `Reference` as a lower-case hexadecimal string, calculated as the MD5 of the upper-case sequence excluding all whitespace characters (this is equivalent to SQ:M5 in SAM).","example":"c2365e900c81a89cf74d83dab60df146","calls":{"\/references":true,"\/referencesets":true},"data_types":{"Reference":true,"ReferenceSet":true}},"referenceDbId":{"type":"string","description":"The reference ID. Unique within the repository.","example":"fc0a81d0","calls":{"\/references":true,"\/references\/{referenceDbId}":true,"\/references\/{referenceDbId}\/bases":true},"data_types":{"Reference":true,"variantsSearchRequest":true}},"referenceName":{"type":"string","description":"The unique name of this reference within the Reference Set.","example":"Chromosome 2","calls":[],"data_types":{"Reference":true,"Variant":true}},"referenceSetDbId":{"type":"string","description":"The reference ID. Unique within the repository.","example":"c1ecfef1","calls":{"\/references":true,"\/referencesets":true,"\/referencesets\/{referenceSetDbId}":true},"data_types":{"Reference":true,"ReferenceSet":true,"VariantSet":true}},"sourceAccessions":{"type":"string[]","description":"All known corresponding accession IDs in INSDC (GenBank\/ENA\/DDBJ) which must include a version number, e.g. `GCF_000001405.26`.","example":["GCF_000001405.26"],"calls":[],"data_types":{"Reference":true,"ReferenceSet":true}},"sourceDivergence":{"type":"number","description":"The `sourceDivergence` is the fraction of non-indel bases that do not match the reference this message was derived from.","example":0.01,"calls":[],"data_types":{"Reference":true}},"sourceURI":{"type":"string","description":"The URI from which the sequence was obtained. Specifies a FASTA format file\/string with one name, sequence pair. In most cases, clients should call the `getReferenceBases()` method to obtain sequence bases for a `Reference` instead of attempting to retrieve this URI.","example":"https:\/\/wiki.brapi.org\/files\/demo.fast","calls":[],"data_types":{"Reference":true,"ReferenceSet":true}},"species":{"type":"OntologyTerm","description":"","example":"","calls":{"\/germplasm":true},"data_types":{"Reference":true,"ReferenceSet":true,"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true,"GermplasmSearchRequest":true}},"offset":{"type":"integer","description":"The offset position (0-based) of the given sequence from the start of this `Reference`. This value will differ for each page in a request.","example":20000,"calls":[],"data_types":{"ReferenceBases":true}},"sequence":{"type":"string","description":"A sub-string of the bases that make up this reference. Bases are represented as IUPAC-IUB codes; this string matches the regular expression `[ACGTMRWSYKVHDBN]*`.","example":"TAGGATTGAGCTCTATATTAGGATTGAGCTCTATATTAGGATTGAGCTCTATATTAGGATTGAGCTCTATATTAGGATTGAGCTCTATATTAGGATTGAGCTCTATATTAGGATTGAGCTCTATATTAGGATTGAGCTCTATATTAGGATTGAGCTCTATAT","calls":[],"data_types":{"ReferenceBases":true}},"assemblyPUI":{"type":"string","description":"The remaining information is about the source of the sequences Public id of this reference set, such as `GRCH_37`.","example":"doi:\/\/10.12345\/fake\/9876","calls":{"\/referencesets":true},"data_types":{"ReferenceSet":true}},"referenceSetName":{"type":"string","description":"The reference set name.","example":"The Best Assembly Ever","calls":[],"data_types":{"ReferenceSet":true}},"accessions":{"type":"string[]","description":"If set, return the reference sets for which the `accession` matches this string (case-sensitive, exact match).","example":["A0009283","A0006657"],"calls":[],"data_types":{"ReferenceSetsSearchRequest":true,"ReferencesSearchRequest":true}},"assemblyPUIs":{"type":"string[]","description":"If set, return the reference sets for which the `assemblyId` matches this string (case-sensitive, exact match).","example":["doi:10.15454\/312953986E3","doi:10.15454\/312953986E3"],"calls":[],"data_types":{"ReferenceSetsSearchRequest":true}},"md5checksums":{"type":"string[]","description":"If set, return the reference sets for which the `md5checksum` matches this string (case-sensitive, exact match).","example":["c2365e900c81a89cf74d83dab60df146"],"calls":[],"data_types":{"ReferenceSetsSearchRequest":true,"ReferencesSearchRequest":true}},"referenceSetDbIds":{"type":"string[]","description":"The `ReferenceSets` to search.","example":["32a19dd7","2c182c18"],"calls":[],"data_types":{"ReferenceSetsSearchRequest":true,"ReferencesSearchRequest":true}},"maxLength":{"type":"integer","description":"The minimum length of this reference's sequence.","example":90000,"calls":{"\/references":true},"data_types":{"ReferencesSearchRequest":true}},"minLength":{"type":"integer","description":"The minimum length of this reference's sequence.","example":4000,"calls":{"\/references":true},"data_types":{"ReferencesSearchRequest":true}},"referenceDbIds":{"type":"string[]","description":"The `References` to search.","example":["04c83ea7","d0998a34"],"calls":[],"data_types":{"ReferencesSearchRequest":true}},"column":{"type":"integer","description":"The Column identifier for this samples location in the plate","example":6,"calls":[],"data_types":{"Sample":true,"SampleNewRequest":true,"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"plateDbId":{"type":"string","description":"The ID which uniquely identifies a plate of samples","example":"2dce16d1","calls":{"\/samples":true},"data_types":{"Sample":true,"SampleNewRequest":true}},"plateName":{"type":"string","description":"The human readable name of a plate","example":"Plate_alpha_20191022","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"row":{"type":"string","description":"The Row identifier for this samples location in the plate","example":"B","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true,"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"sampleBarcode":{"type":"string","description":"A unique identifier physically attached to the sample","example":"3a027b59","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"sampleDescription":{"type":"string","description":"Description of a sample\n\nMIAPPE V1.1 (DM-79) Sample description - Any information not captured by the other sample fields, including quantification, sample treatments and processing.","example":"This sample was taken from the root of a tree","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"sampleGroupDbId":{"type":"string","description":"The ID which uniquely identifies a group of samples","example":"8524b436","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"sampleName":{"type":"string","description":"The name of the sample","example":"Sample_alpha_20191022","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"samplePUI":{"type":"string","description":"A permanent unique identifier for the sample (DOI, URL, UUID, etc)\n\nMIAPPE V1.1 (DM-81) External ID - An identifier for the sample in a persistent repository, comprising the name of the repository and the accession number of the observation unit therein. Submission to the EBI Biosamples repository is recommended. URI are recommended when possible. ","example":"doi:10.15454\/312953986E3","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"sampleTimestamp":{"type":"string","description":"The date and time a sample was collected from the field\n\nMIAPPE V1.1 (DM-80) Collection date - The date and time when the sample was collected \/ harvested","example":"","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"sampleType":{"type":"string","description":"The type of sample taken. ex. 'DNA', 'RNA', 'Tissue', etc","example":"Tissue","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true,"VendorOrderSubmissionRequest":true,"VendorPlateSubmissionRequest":true}},"takenBy":{"type":"string","description":"The name or identifier of the entity which took the sample from the field","example":"Bob","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true}},"tissueType":{"type":"string","description":"The type of tissue sampled. ex. 'Leaf', 'Root', etc.\n\nMIAPPE V1.1 (DM-78) Plant anatomical entity - A description of  the plant part (e.g. leaf) or the plant product (e.g. resin) from which the sample was taken, in the form of an accession number to a suitable controlled vocabulary (Plant Ontology).","example":"Root","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true,"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"well":{"type":"string","description":"The Well identifier for this samples location in the plate. Usually a concatenation of Row and Column, or just a number if the samples are not part of an ordered plate.","example":"B6","calls":[],"data_types":{"Sample":true,"SampleNewRequest":true,"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"plateDbIds":{"type":"string[]","description":"The ID which uniquely identifies a plate of samples","example":["0cac98b8","b96125fb"],"calls":[],"data_types":{"SampleSearchRequest":true}},"sampleDbIds":{"type":"string[]","description":"The ID which uniquely identifies a sample","example":["3bece2ca","dd286cc6"],"calls":[],"data_types":{"SampleSearchRequest":true,"callSetsSearchRequest":true}},"alternate_bases":{"type":"string[]","description":"The bases that appear instead of the reference bases. Multiple alternate alleles are possible.","example":["TAGGATTGAGCTCTATAT"],"calls":[],"data_types":{"Variant":true}},"ciend":{"type":"integer[]","description":"Similar to \"cipos\", but for the variant's end position (which is derived from start + svlen).","example":[-1000,0],"calls":[],"data_types":{"Variant":true}},"cipos":{"type":"integer[]","description":"In the case of structural variants, start and end of the variant may not\nbe known with an exact base position. \"cipos\" provides an interval with\nhigh confidence for the start position. The interval is provided by 0 or\n2 signed integers which are added to the start position.\nBased on the use in VCF v4.2","example":[-12000,1000],"calls":[],"data_types":{"Variant":true}},"end":{"type":"integer","description":"This field is optional and may be ignored if there is no relevant map or reference to be associated with.\n\nThe end position (exclusive), resulting in [start, end) closed-open interval. This is typically calculated \nby `start + referenceBases.length`.","example":518,"calls":{"\/references\/{referenceDbId}\/bases":true},"data_types":{"Variant":true,"variantsSearchRequest":true}},"filtersApplied":{"type":"boolean","description":"True if filters were applied for this variant. VCF column 7 \"FILTER\" any value other than the missing value.","example":true,"calls":[],"data_types":{"Variant":true}},"filtersFailed":{"type":"string[]","description":"Zero or more filters that failed for this variant. VCF column 7 \"FILTER\" shared across all alleles in the same VCF record.","example":["d629a669","3f14f578"],"calls":[],"data_types":{"Variant":true}},"filtersPassed":{"type":"boolean","description":"True if all filters for this variant passed. VCF column 7 \"FILTER\" value PASS.","example":true,"calls":[],"data_types":{"Variant":true}},"referenceBases":{"type":"string","description":"The reference bases for this variant. They start at the given start position.","example":"TAGGATTGAGCTCTATAT","calls":[],"data_types":{"Variant":true}},"start":{"type":"integer","description":"This field is optional and may be ignored if there is no relevant map or reference to be associated with.\n\nThe start position at which this variant occurs (0-based). This corresponds to the first base of the string \nof reference bases. Genomic positions are non-negative integers less than reference length. Variants spanning \nthe join of circular genomes are represented as two variants one on each side of the join (position 0).","example":500,"calls":{"\/references\/{referenceDbId}\/bases":true},"data_types":{"Variant":true,"variantsSearchRequest":true}},"svlen":{"type":"integer","description":"Length of the - if labeled as such in variant_type - structural variation. Based on the use in VCF v4.2","example":1500,"calls":[],"data_types":{"Variant":true}},"variantNames":{"type":"string[]","description":"Names for the variant, for example a RefSNP ID.","example":["RefSNP_ID_1","06ea312e"],"calls":[],"data_types":{"Variant":true}},"variantSetDbId":{"type":"string[]","description":"An array of `VariantSet` IDs this variant belongs to. This also defines the `ReferenceSet` against which the `Variant` is to be interpreted.","example":["c8ae400b","ef2c204b"],"calls":{"\/calls":true,"\/callsets":true,"\/variants":true,"\/variantsets":true,"\/variantsets\/{variantSetDbId}":true,"\/variantsets\/{variantSetDbId}\/calls":true,"\/variantsets\/{variantSetDbId}\/callsets":true,"\/variantsets\/{variantSetDbId}\/variants":true},"data_types":{"Variant":true,"VariantSet":true}},"variantType":{"type":"string","description":"The \"variant_type\" is used to denote e.g. structural variants.\nExamples:\n  DUP  : duplication of sequence following \"start\"\n  DEL  : deletion of sequence following \"start\"","example":"DUP","calls":[],"data_types":{"Variant":true}},"analysis":{"type":"Analysis[]","description":"Set of Analysis descriptors for this VariantSet","example":"","calls":[],"data_types":{"VariantSet":true}},"availableFormats":{"type":"VariantSet_availableFormats[]","description":"When the data for a VariantSet is retrieved, it can be retrieved in a variety of data formats and file formats. \n\ndataFormat defines the structure of the data within a file (ie DartSeq, VCF, Hapmap, tabular, etc)\n\nfileFormat defines the MIME type of the file (ie text\/csv, application\/excel, application\/zip). This should also be reflected in the Accept and ContentType HTTP headers for every relevant request and response.","example":[{"dataFormat":"VCF","fileFormat":"application\/excel","fileURL":"https:\/\/brapi.org\/example\/VCF_1.xlsx"},{"dataFormat":"VCF","fileFormat":"text\/csv","fileURL":"https:\/\/brapi.org\/example\/VCF_2.csv"}],"calls":[],"data_types":{"VariantSet":true}},"callSetCount":{"type":"integer","description":"The number of CallSets included in this VariantSet","example":341,"calls":[],"data_types":{"VariantSet":true}},"variantCount":{"type":"integer","description":"The number of Variants included in this VariantSet","example":250,"calls":[],"data_types":{"VariantSet":true}},"variantSetName":{"type":"string","description":"The variant set name.","example":"Maize QC DataSet 002334","calls":[],"data_types":{"VariantSet":true}},"vendorAddress":{"type":"string","description":"The street address of the vendor","example":"123 Main Street","calls":[],"data_types":{"VendorContact":true}},"vendorCity":{"type":"string","description":"The name of the city where the vendor is located","example":"Townsville","calls":[],"data_types":{"VendorContact":true}},"vendorContactName":{"type":"string","description":"The name or identifier of the primary vendor contact","example":"Bob Robertson","calls":[],"data_types":{"VendorContact":true}},"vendorCountry":{"type":"string","description":"The name of the country where the vendor is located","example":"USA","calls":[],"data_types":{"VendorContact":true}},"vendorDescription":{"type":"string","description":"A description of the vendor","example":"This is a sequencing vendor. Sequencing happens here.","calls":[],"data_types":{"VendorContact":true}},"vendorEmail":{"type":"string","description":"The primary email address used to contact the vendor","example":"bob@bob.org","calls":[],"data_types":{"VendorContact":true}},"vendorName":{"type":"string","description":"The human readable name of the vendor","example":"The Example Vendor Lab","calls":[],"data_types":{"VendorContact":true}},"vendorPhone":{"type":"string","description":"The primary phone number used to contact the vendor","example":"+1-800-555-5555","calls":[],"data_types":{"VendorContact":true}},"vendorURL":{"type":"string","description":"The primary URL for the vendor","example":"https:\/\/sequencing.org\/vendor","calls":[],"data_types":{"VendorContact":true}},"clientId":{"type":"string","description":"A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the correct billing and contact info.","example":"7b51ad15","calls":[],"data_types":{"VendorOrder":true,"VendorOrderSubmissionRequest":true,"VendorPlateSubmission":true,"VendorPlateSubmissionRequest":true}},"numberOfSamples":{"type":"integer","description":"The total number of samples contained in this request. Used for billing and basic validation of the request.","example":180,"calls":[],"data_types":{"VendorOrder":true,"VendorOrderSubmissionRequest":true,"VendorPlateSubmission":true,"VendorPlateSubmissionRequest":true}},"orderId":{"type":"string","description":"The order id returned by the vendor when the order was successfully submitted.","example":"96ba0ca3","calls":{"\/vendor\/orders":true,"\/vendor\/orders\/{orderId}\/plates":true,"\/vendor\/orders\/{orderId}\/results":true,"\/vendor\/orders\/{orderId}\/status":true},"data_types":{"VendorOrder":true,"VendorOrderSubmission":true}},"requiredServiceInfo":{"type":"object","description":"A map of additional data required by the requested service. This includes things like Volume and Concentration.","example":{"extractDNA":"true","genus":"Zea","species":"mays","volumePerWell":"2.3 ml"},"calls":[],"data_types":{"VendorOrder":true,"VendorOrderSubmissionRequest":true}},"serviceIds":{"type":"string[]","description":"A list of unique, alpha-numeric ID which identify the requested services to be applied to this order. \nA Vendor Service defines what platform, technology, and markers will be used. \nA list of available service IDs can be retrieved from the Vendor Specs.","example":["e8f60f64","05bd925a","b698fb5e"],"calls":[],"data_types":{"VendorOrder":true,"VendorOrderSubmissionRequest":true}},"shipmentForms":{"type":"ShipmentForm[]","description":"Array of paper forms which need to be printed and included with the physical shipment","example":"","calls":[],"data_types":{"VendorOrderSubmission":true}},"plates":{"type":"VendorOrderSubmissionRequest_plates[]","description":"Array of new plates to be submitted to a vendor","example":"","calls":[],"data_types":{"VendorOrderSubmissionRequest":true,"VendorPlateSubmission":true,"VendorPlateSubmissionRequest":true}},"clientPlateBarcode":{"type":"string","description":"(Optional) The value of the bar code attached to this plate","example":"31dd5787","calls":[],"data_types":{"VendorPlate":true,"VendorOrderSubmissionRequest_plates":true,"VendorPlateSubmission_plates":true}},"clientPlateId":{"type":"string","description":"The ID which uniquely identifies this plate to the client making the request","example":"0ad6c0ef","calls":[],"data_types":{"VendorPlate":true,"VendorOrderSubmissionRequest_plates":true,"VendorPlateSubmission_plates":true}},"sampleSubmissionFormat":{"type":"PlateFormat","description":"","example":"","calls":[],"data_types":{"VendorPlate":true,"VendorOrderSubmissionRequest_plates":true,"VendorPlateSubmission_plates":true}},"samples":{"type":"VendorSample[]","description":"","example":"","calls":[],"data_types":{"VendorPlate":true,"VendorOrderSubmissionRequest_plates":true,"VendorPlateSubmission_plates":true}},"submissionId":{"type":"string","description":"A unique, alpha-numeric ID which identifies a set of plates which have been successfully submitted.","example":"f8f409e0","calls":{"\/vendor\/orders":true,"\/vendor\/plates\/{submissionId}":true},"data_types":{"VendorPlateSubmissionId":true}},"clientSampleIds":{"type":"string[]","description":"The list of sampleDbIds included in the file","example":["3968733e","e0de6391","66854172"],"calls":[],"data_types":{"VendorResultFile":true}},"md5sum":{"type":"string","description":"MD5 Hash Check Sum for the file to confirm download without error","example":"c2365e900c81a89cf74d83dab60df146","calls":[],"data_types":{"VendorResultFile":true}},"clientSampleBarCode":{"type":"string","description":"(Optional) The value of the bar code attached to this sample","example":"7c07e527","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"clientSampleId":{"type":"string","description":"The ID which uniquely identifies this sample to the client making the request","example":"bd96bd69","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"concentration":{"type":"VendorOrderSubmissionRequest_concentration","description":"","example":"","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"organismName":{"type":"string","description":"Scientific organism name","example":"Aspergillus fructus","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"speciesName":{"type":"string","description":"Scientific species name","example":"Aspergillus fructus","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"taxonomyOntologyReference":{"type":"MethodBaseClass_ontologyReference","description":"","example":"","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"tissueTypeOntologyReference":{"type":"MethodBaseClass_ontologyReference","description":"","example":"","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"volume":{"type":"VendorOrderSubmissionRequest_concentration","description":"","example":"","calls":[],"data_types":{"VendorSample":true,"VendorOrderSubmissionRequest_samples":true}},"services":{"type":"VendorSpecificationService[]","description":"List of platform specifications available at the vendor","example":"","calls":[],"data_types":{"VendorSpecification":true}},"vendorContact":{"type":"VendorContact","description":"","example":"","calls":[],"data_types":{"VendorSpecification":true}},"serviceDescription":{"type":"string","description":"Description of the vendor platform","example":"A combined DNA extract and Sequencing process using technology and science. Lots of automated pipet machines.","calls":[],"data_types":{"VendorSpecificationService":true}},"serviceId":{"type":"string","description":"Unique identifier for this service","example":"085d298f","calls":[],"data_types":{"VendorSpecificationService":true}},"serviceName":{"type":"string","description":"The human readable name of a platform","example":"The Deluxe Service","calls":[],"data_types":{"VendorSpecificationService":true}},"servicePlatformMarkerType":{"type":"string","description":"The type of markers used in this services platform","example":"FIXED","calls":[],"data_types":{"VendorSpecificationService":true}},"servicePlatformName":{"type":"string","description":"The technology platform used by this service","example":"RNA-seq","calls":[],"data_types":{"VendorSpecificationService":true}},"specificRequirements":{"type":"VendorSpecificationService_specificRequirements[]","description":"Additional arbitrary requirements for a particular platform","example":[{"description":"The genus of the samples","key":"genus"},{"description":"The species of the samples","key":"species"},{"description":"Approximate volume of each sample (ex 2.3 ml)","key":"volumePerWell"},{"description":"Does DNA extraction need to happen before sequencing (ex true)","key":"extractDNA"}],"calls":[],"data_types":{"VendorSpecificationService":true}},"callSetNames":{"type":"string[]","description":"Only return call sets with these names (case-sensitive, exact match).","example":["Sample_123_DNA_Run_456","Sample_789_DNA_Run_101"],"calls":[],"data_types":{"callSetsSearchRequest":true}},"sampleNames":{"type":"string[]","description":"Return only call sets generated from the provided Biosample human readable names.","example":["Sample_123","Sample_789"],"calls":[],"data_types":{"callSetsSearchRequest":true}},"accession":{"type":"","description":"If set, return the reference sets for which the `accession` matches this string (case-sensitive, exact match).","example":"","calls":{"\/references":true,"\/referencesets":true},"data_types":[]},"breedingMethodDbId":{"type":"string","description":"the unique identifier for this breeding method","example":"ffcce7ef","calls":{"\/breedingmethods\/{breedingMethodDbId}":true},"data_types":{"BreedingMethod":true,"Germplasm":true,"GermplasmNewRequest":true}},"breedingMethodName":{"type":"string","description":"human readable name of the breeding method","example":"Male Backcross","calls":[],"data_types":{"BreedingMethod":true}},"crossAttributes":{"type":"Cross_crossAttributes[]","description":"Set of custom attributes associated with a cross","example":"","calls":[],"data_types":{"Cross":true,"CrossNewRequest":true}},"crossDbId":{"type":"string","description":"the unique identifier for a cross","example":"d105fd6f","calls":{"\/crosses":true},"data_types":{"Cross":true}},"crossName":{"type":"string","description":"the human readable name for a cross","example":"my_Crosses_2018_01","calls":[],"data_types":{"Cross":true,"CrossNewRequest":true}},"crossType":{"type":"string","description":"the type of cross","example":"BIPARENTAL","calls":[],"data_types":{"Cross":true,"CrossNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true}},"crossingProjectDbId":{"type":"string","description":"the unique identifier for a crossing project","example":"696d7c92","calls":{"\/crosses":true,"\/crossingprojects":true,"\/crossingprojects\/{crossingProjectDbId}":true,"\/plannedcrosses":true},"data_types":{"Cross":true,"CrossNewRequest":true,"CrossingProject":true,"PedigreeNode":true,"PlannedCross":true,"PlannedCrossNewRequest":true}},"crossingProjectName":{"type":"string","description":"the human readable name for a crossing project","example":"my_Crosses_2018","calls":[],"data_types":{"Cross":true,"CrossNewRequest":true,"CrossingProject":true,"CrossingProjectNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true}},"parent1":{"type":"Cross_parent1","description":"","example":"","calls":[],"data_types":{"Cross":true,"CrossNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true}},"parent2":{"type":"Cross_parent1","description":"","example":"","calls":[],"data_types":{"Cross":true,"CrossNewRequest":true,"PlannedCross":true,"PlannedCrossNewRequest":true}},"pollinationTimeStamp":{"type":"string","description":"the timestamp when the pollination took place","example":"","calls":[],"data_types":{"Cross":true,"CrossNewRequest":true}},"parentType":{"type":"string","description":"The type of parent ex. 'MALE', 'FEMALE', 'SELF', 'POPULATION', etc.","example":"MALE","calls":[],"data_types":{"CrossParent":true,"Cross_parent1":true,"PedigreeNode_parents":true,"ProgenyNode_progeny":true}},"crossingProjectDescription":{"type":"string","description":"the description for a crossing project","example":"Crosses between germplasm X and germplasm Y in male nursery study X_2018 and female nursery study Y_2018","calls":[],"data_types":{"CrossingProject":true,"CrossingProjectNewRequest":true}},"accessionNumber":{"type":"string","description":"This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection\n\nMCPD (v2.1) (ACCENUMB) 2. This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection (e.g. \"PI 113869\").","example":"A0000003","calls":{"\/germplasm":true},"data_types":{"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true}},"acquisitionDate":{"type":"string","description":"The date this germplasm was acquired by the genebank \n\nMCPD (v2.1) (ACQDATE) 12. Date on which the accession entered the collection [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \"00\" [double zero].","example":"","calls":[],"data_types":{"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true}},"biologicalStatusOfAccessionCode":{"type":"string","description":"MCPD (v2.1) (SAMPSTAT) 19. The coding scheme proposed can be used at 3 different levels of detail: either by using the general codes such as 100, 200, 300, 400, or by using the more specific codes such as 110, 120, etc. \n\n100) Wild \n110) Natural \n120) Semi-natural\/wild \n130) Semi-natural\/sown \n200) Weedy \n300) Traditional cultivar\/landrace \n400) Breeding\/research material \n410) Breeders line \n411) Synthetic population \n412) Hybrid \n413) Founder stock\/base population \n414) Inbred line (parent of hybrid cultivar) \n415) Segregating population \n416) Clonal selection \n420) Genetic stock \n421) Mutant (e.g. induced\/insertion mutants, tilling populations) \n422) Cytogenetic stocks (e.g. chromosome addition\/substitution, aneuploids,  amphiploids) \n423) Other genetic stocks (e.g. mapping populations) \n500) Advanced or improved cultivar (conventional breeding methods) \n600) GMO (by genetic engineering) \n999) Other (Elaborate in REMARKS field)","example":"420","calls":[],"data_types":{"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true}},"biologicalStatusOfAccessionDescription":{"type":"string","description":"Supplemental text description for 'biologicalStatusOfAccessionCode'","example":"Genetic stock","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"collection":{"type":"string","description":"A specific panel\/collection\/population name this germplasm belongs to.","example":"Rice Diversity Panel 1 (RDP1)","calls":{"\/germplasm":true},"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"countryOfOriginCode":{"type":"string","description":"3-letter ISO 3166-1 code of the country in which the sample was originally collected \n\nMCPD (v2.1) (ORIGCTY) 13. 3-letter ISO 3166-1 code of the country in which the sample was originally collected (e.g. landrace, crop wild relative, farmers variety), bred or selected (breeding lines, GMOs, segregating populations, hybrids, modern cultivars, etc.). Note- Descriptors 14 to 16 below should be completed accordingly only if it was \"collected\".","example":"BES","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"defaultDisplayName":{"type":"string","description":"Human readable name used for display purposes","example":"A0000003","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"donors":{"type":"Germplasm_donors[]","description":"List of donor institutes","example":"","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"genus":{"type":"string","description":"Genus name for taxon. Initial uppercase letter required.\n\nMCPD (v2.1) (GENUS) 5. Genus name for taxon. Initial uppercase letter required.\n\nMIAPPE V1.1 (DM-43) Genus - Genus name for the organism under study, according to standard scientific nomenclature.","example":"Aspergillus","calls":{"\/germplasm":true},"data_types":{"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true,"GermplasmSearchRequest":true}},"germplasmOrigin":{"type":"Germplasm_germplasmOrigin[]","description":"Information for material (orchard, natural sites, ...). Geographic identification of the plants from which seeds or cutting have been taken to produce that germplasm.","example":"","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"germplasmPUI":{"type":"string","description":"The Permanent Unique Identifier which represents a germplasm\n\nMIAPPE V1.1 (DM-41) Biological material ID - Code used to identify the biological material in the data file. Should be unique within the Investigation. Can correspond to experimental plant ID, seed lot ID, etc This material identification is different from a BiosampleID which corresponds to Observation Unit or Samples sections below.\n\nMCPD (v2.1) (PUID) 0. Any persistent, unique identifier assigned to the accession so it can be unambiguously referenced at the global level and the information associated with it harvested through automated means. Report one PUID for each accession. The Secretariat of the International Treaty on Plant Genetic Resources for Food and Agriculture (PGRFA) is facilitating the assignment of a persistent unique identifier (PUID), in the form of a DOI, to PGRFA at the accession level. Genebanks not applying a true PUID to their accessions should use, and request recipients to use, the concatenation of INSTCODE, ACCENUMB, and GENUS as a globally unique identifier similar in most respects to the PUID whenever they exchange information on accessions with third parties.","example":"http:\/\/pui.per\/accession\/A0000003","calls":{"\/germplasm":true},"data_types":{"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true,"Germplasm_donors":true}},"germplasmPreprocessing":{"type":"string","description":"Description of any process or treatment applied uniformly to the germplasm, prior to the study itself. Can be provided as free text or as an accession number from a suitable controlled vocabulary.","example":"EO:0007210; transplanted from study 2351 observation unit ID: pot:894","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"instituteCode":{"type":"string","description":"The code for the institute that maintains the material. \n\nMCPD (v2.1) (INSTCODE) 1. FAO WIEWS code of the institute where the accession is maintained. The codes consist of the 3-letter ISO 3166 country code of the country where the institute is located plus a number (e.g. PER001). The current set of institute codes is available from http:\/\/www.fao.org\/wiews. For those institutes not yet having an FAO Code, or for those with \"obsolete\" codes, see \"Common formatting rules (v)\".","example":"PER001","calls":[],"data_types":{"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true,"GermplasmMCPD_breedingInstitutes":true,"GermplasmMCPD_collectingInfo_collectingInstitutes":true,"GermplasmMCPD_donorInfo_donorInstitute":true,"GermplasmMCPD_safetyDuplicateInstitutes":true}},"pedigree":{"type":"string","description":"The cross name and optional selection history.\n\nMCPD (v2.1) (ANCEST) 20. Information about either pedigree or other description of ancestral information (e.g. parent variety in case of mutant or selection). For example a pedigree 'Hanna\/7*Atlas\/\/Turk\/8*Atlas' or a description 'mutation found in Hanna', 'selection from Irene' or 'cross involving amongst others Hanna and Irene'.","example":"A0000001\/A0000002","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true,"PedigreeNode":true}},"seedSource":{"type":"string","description":"The source of the seed ","example":"A0000001\/A0000002","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"seedSourceDescription":{"type":"string","description":"Description of the material source\n\nMIAPPE V1.1 (DM-56) Material source description - Description of the material source","example":"Branches were collected from a 10-year-old tree growing in a progeny trial established in a loamy brown earth soil.","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"speciesAuthority":{"type":"string","description":"The authority organization responsible for tracking and maintaining the species name \n\nMCPD (v2.1) (SPAUTHOR) 7. Provide the authority for the species name.","example":"Smith, 1822","calls":[],"data_types":{"Germplasm":true,"GermplasmMCPD":true,"GermplasmNewRequest":true}},"storageTypes":{"type":"Germplasm_storageTypes[]","description":"The type of storage this germplasm is kept in at a genebank.","example":[{"code":"20","description":"Field collection"},{"code":"11","description":"Short term"}],"calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"subtaxa":{"type":"string","description":"Subtaxon can be used to store any additional taxonomic identifier.\n\nMCPD (v2.1) (SUBTAXA) 8. Subtaxon can be used to store any additional taxonomic identifier. The following abbreviations are allowed: \"subsp.\" (for subspecies); \"convar.\" (for convariety); \"var.\" (for variety); \"f.\" (for form); \"Group\" (for \"cultivar group\").\n\nMIAPPE V1.1 (DM-44) Infraspecific name - Name of any subtaxa level, including variety, crossing name, etc. It can be used to store any additional taxonomic identifier. Either free text description or key-value pair list format (the key is the name of the rank and the value is the value of  the rank). Ranks can be among the following terms: subspecies, cultivar, variety, subvariety, convariety, group, subgroup, hybrid, line, form, subform. For MCPD compliance, the following abbreviations are allowed: subsp. (subspecies); convar. (convariety); var. (variety); f. (form); Group (cultivar group).","example":"Aspergillus fructus A","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"subtaxaAuthority":{"type":"string","description":"The authority organization responsible for tracking and maintaining the subtaxon information\n\nMCPD (v2.1) (SUBTAUTHOR) 9. Provide the subtaxon authority at the most detailed taxonomic level.","example":"Smith, 1822","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"taxonIds":{"type":"Germplasm_taxonIds[]","description":"The list of IDs for this SPECIES from different sources. If present, NCBI Taxon should be always listed as \"ncbiTaxon\" preferably with a purl. The rank of this ID should be species.\n\nMIAPPE V1.1 (DM-42) Organism - An identifier for the organism at the species level. Use of the NCBI taxon ID is recommended.","example":"","calls":[],"data_types":{"Germplasm":true,"GermplasmNewRequest":true}},"attributeCategory":{"type":"string","description":"General category for the attribute. very similar to Trait class.","example":"Morphological","calls":{"\/attributes":true},"data_types":{"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"attributeDbId":{"type":"string","description":"The ID which uniquely identifies this attribute within the given database server","example":"2f08b902","calls":{"\/attributes":true,"\/attributes\/{attributeDbId}":true,"\/attributevalues":true},"data_types":{"GermplasmAttribute":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true}},"attributeDescription":{"type":"string","description":"A human readable description of this attribute","example":"Height of the plant measured in meters by a tape","calls":[],"data_types":{"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true}},"attributeName":{"type":"string","description":"A human readable name for this attribute","example":"Plant Height 1","calls":{"\/attributes":true,"\/attributevalues":true},"data_types":{"GermplasmAttribute":true,"GermplasmAttributeNewRequest":true,"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true}},"attributeDbIds":{"type":"string[]","description":"List of Germplasm Attribute IDs to search for","example":["2ef15c9f","318e7f7d"],"calls":[],"data_types":{"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"attributeNames":{"type":"string[]","description":"List of human readable Germplasm Attribute names to search for","example":["Plant Height 1","Root Color"],"calls":[],"data_types":{"GermplasmAttributeSearchRequest":true,"GermplasmAttributeValueSearchRequest":true}},"attributeValueDbId":{"type":"string","description":"The ID which uniquely identifies this attribute value within the given database server","example":"33edbab7","calls":{"\/attributevalues":true,"\/attributevalues\/{attributeValueDbId}":true},"data_types":{"GermplasmAttributeValue":true}},"determinedDate":{"type":"string","description":"The date the value of this attribute was determined for a given germplasm","example":"","calls":[],"data_types":{"GermplasmAttributeValue":true,"GermplasmAttributeValueNewRequest":true}},"attributeValueDbIds":{"type":"string[]","description":"List of Germplasm Attribute Value IDs to search for","example":["ca4636d0","c8a92409"],"calls":[],"data_types":{"GermplasmAttributeValueSearchRequest":true}},"accessionNames":{"type":"string[]","description":"MCPD (v2.1) (ACCENAME) 11. Either a registered or other designation given to the material received, other than the donors accession number (23) or collecting number (3). First letter uppercase. Multiple names are separated by a semicolon without space.","example":["Symphony","Emma"],"calls":[],"data_types":{"GermplasmMCPD":true}},"acquisitionSourceCode":{"type":"string","description":"MCPD (v2.1) (COLLSRC) 21. The coding scheme proposed can be used at 2 different levels of detail: either by using the general codes (in bold-face) such as 10, 20, 30, 40, etc., or by using the more specific codes, such as 11, 12, etc. \n\n10) Wild habitat \n11) Forest or woodland \n12) Shrubland \n13) Grassland \n14) Desert or tundra \n15) Aquatic habitat \n20) Farm or cultivated habitat \n21) Field \n22) Orchard \n23) Backyard, kitchen or home garden (urban, peri-urban or rural) \n24) Fallow land \n25) Pasture \n26) Farm store \n27) Threshing floor \n28) Park \n30) Market or shop \n40) Institute, Experimental station, Research organization, Genebank \n50) Seed company \n60) Weedy, disturbed or ruderal habitat \n61) Roadside \n62) Field margin \n99) Other (Elaborate in REMARKS field)","example":"26","calls":[],"data_types":{"GermplasmMCPD":true}},"alternateIDs":{"type":"string[]","description":"MCPD (v2.1) (OTHERNUMB) 24. Any other identifiers known to exist in other collections for this accession. Use the following format: INSTCODE:ACCENUMB;INSTCODE:identifier;INSTCODE and identifier are separated by a colon without space. Pairs of INSTCODE and identifier are separated by a semicolon without space. When the institute is not known, the identifier should be preceded by a colon. ","example":["3","http:\/\/pui.per\/accession\/A0000003","A0000003"],"calls":[],"data_types":{"GermplasmMCPD":true}},"ancestralData":{"type":"string","description":"MCPD (v2.1) (ANCEST) 20. Information about either pedigree or other description of ancestral information (e.g. parent variety in case of mutant or selection). For example a pedigree 'Hanna\/7*Atlas\/\/Turk\/8*Atlas' or a description 'mutation found in Hanna', 'selection from Irene' or 'cross involving amongst others Hanna and Irene'.","example":"A0000001\/A0000002","calls":[],"data_types":{"GermplasmMCPD":true}},"breedingInstitutes":{"type":"GermplasmMCPD_breedingInstitutes[]","description":"","example":"","calls":[],"data_types":{"GermplasmMCPD":true}},"collectingInfo":{"type":"GermplasmMCPD_collectingInfo","description":"","example":"","calls":[],"data_types":{"GermplasmMCPD":true}},"countryOfOrigin":{"type":"string","description":"MCPD (v2.1) (ORIGCTY) 13. 3-letter ISO 3166-1 code of the country in which the sample was originally collected (e.g. landrace, crop wild relative, farmers\" variety), bred or selected (breeding lines, GMOs, segregating populations, hybrids, modern cultivars, etc.). Note: Descriptors 14 to 16 below should be completed accordingly only if it was \"collected\".","example":"Peru","calls":[],"data_types":{"GermplasmMCPD":true}},"donorInfo":{"type":"GermplasmMCPD_donorInfo","description":"","example":"","calls":[],"data_types":{"GermplasmMCPD":true}},"mlsStatus":{"type":"string","description":"MCPD (v2.1) (MLSSTAT) 27. The status of an accession with regards to the Multilateral System (MLS) of the International Treaty on Plant Genetic Resources for Food and Agriculture. Leave the value empty if the status is not known 0 No (not included) 1 Yes (included) 99 Other (elaborate in REMARKS field, e.g. \"under development\")","example":"0","calls":[],"data_types":{"GermplasmMCPD":true}},"remarks":{"type":"string","description":"MCPD (v2.1) (REMARKS) 28. The remarks field is used to add notes or to elaborate on descriptors with value 99 or 999 (= Other). Prefix remarks with the field name they refer to and a colon (:) without space (e.g. COLLSRC:riverside). Distinct remarks referring to different fields are separated by semi-colons without space.","example":"This is an example remark to demonstrate that any notable information can be put here","calls":[],"data_types":{"GermplasmMCPD":true}},"safetyDuplicateInstitutes":{"type":"GermplasmMCPD_safetyDuplicateInstitutes[]","description":"","example":"","calls":[],"data_types":{"GermplasmMCPD":true}},"storageTypeCodes":{"type":"string[]","description":"MCPD (v2.1) (STORAGE) 26. If germplasm is maintained under different types of storage, multiple choices are allowed, separated by a semicolon (e.g. 20;30). (Refer to FAO\/IPGRI Genebank Standards 1994 for details on storage type.) 10) Seed collection 11) Short term 12) Medium term 13) Long term 20) Field collection 30) In vitro collection 40) Cryo-preserved collection 50) DNA collection 99) Other (elaborate in REMARKS field)","example":["11","13"],"calls":[],"data_types":{"GermplasmMCPD":true}},"subtaxon":{"type":"string","description":"MCPD (v2.1) (SUBTAXA) 8. Subtaxon can be used to store any additional taxonomic identifier. The following abbreviations are allowed: \"subsp.\" (for subspecies); \"convar.\" (for convariety); \"var.\" (for variety); \"f.\" (for form); \"Group\" (for \"cultivar group\").","example":"Aspergillus fructus A","calls":[],"data_types":{"GermplasmMCPD":true}},"subtaxonAuthority":{"type":"string","description":"MCPD (v2.1) (SUBTAUTHOR) 9. Provide the subtaxon authority at the most detailed taxonomic level.","example":"Smith, 1822","calls":[],"data_types":{"GermplasmMCPD":true}},"accessionNumbers":{"type":"string[]","description":"List unique identifiers for accessions within a genebank","example":["A0000003","A0000477"],"calls":[],"data_types":{"GermplasmSearchRequest":true}},"collections":{"type":"string[]","description":"A specific panel\/collection\/population name this germplasm belongs to.","example":["RDP1","MDP1"],"calls":[],"data_types":{"GermplasmSearchRequest":true}},"germplasmPUIs":{"type":"string[]","description":"List of Permanent Unique Identifiers to identify germplasm","example":["http:\/\/pui.per\/accession\/A0000003","http:\/\/pui.per\/accession\/A0000477"],"calls":[],"data_types":{"GermplasmSearchRequest":true}},"parentDbIds":{"type":"string[]","description":"Search for Germplasm with these parents","example":["72c1001f","7346c553"],"calls":[],"data_types":{"GermplasmSearchRequest":true}},"progenyDbIds":{"type":"string[]","description":"Search for Germplasm with these children","example":["16e16a7e","ce06cf9e"],"calls":[],"data_types":{"GermplasmSearchRequest":true}},"crossingYear":{"type":"integer","description":"The year the parents were originally crossed","example":2005,"calls":[],"data_types":{"PedigreeNode":true}},"familyCode":{"type":"string","description":"The code representing the family","example":"F0000203","calls":[],"data_types":{"PedigreeNode":true}},"parents":{"type":"PedigreeNode_parents[]","description":"List of parent nodes in the pedigree tree.","example":[{"germplasmDbId":"b66958de","germplasmName":"A0000592","parentType":"MALE"},{"germplasmDbId":"a55847ed","germplasmName":"A0000592","parentType":"FEMALE"}],"calls":[],"data_types":{"PedigreeNode":true}},"siblings":{"type":"PedigreeNode_siblings[]","description":"List of sibling germplasm","example":[{"germplasmDbId":"334f53a3","germplasmName":"A0021005"},{"germplasmDbId":"7bbbda8c","germplasmName":"A0021006"},{"germplasmDbId":"ab1d9b26","germplasmName":"A0021007"}],"calls":[],"data_types":{"PedigreeNode":true}},"plannedCrossDbId":{"type":"string","description":"the unique identifier for a cross","example":"c8905568","calls":{"\/plannedcrosses":true},"data_types":{"PlannedCross":true}},"plannedCrossName":{"type":"string","description":"the human readable name for a cross","example":"my_Crosses_2018_01","calls":[],"data_types":{"PlannedCross":true,"PlannedCrossNewRequest":true}},"progeny":{"type":"ProgenyNode_progeny[]","description":"List of germplasm entities which are direct children of this germplasm","example":[{"germplasmDbId":"e8d5dad7","germplasmName":"A0021011","parentType":"FEMALE"},{"germplasmDbId":"ac07fbd8","germplasmName":"A0021012","parentType":"FEMALE"},{"germplasmDbId":"07f45f67","germplasmName":"A0021013","parentType":"FEMALE"}],"calls":[],"data_types":{"ProgenyNode":true}},"amount":{"type":"number","description":"Current balance of seeds in this lot. Could be a count (seeds, bulbs, etc) or a weight (kg of seed).","example":561,"calls":[],"data_types":{"SeedLot":true,"SeedLotNewRequest":true,"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true}},"createdDate":{"type":"string","description":"The time stamp for when this seed lot was created","example":"","calls":[],"data_types":{"SeedLot":true,"SeedLotNewRequest":true}},"lastUpdated":{"type":"string","description":"The timestamp for the last update to this Seed Lot (including transactions)","example":"","calls":[],"data_types":{"SeedLot":true,"SeedLotNewRequest":true}},"seedLotDescription":{"type":"string","description":"A general description of this Seed Lot","example":"This is a description of a seed lot","calls":[],"data_types":{"SeedLot":true,"SeedLotNewRequest":true}},"seedLotName":{"type":"string","description":"A human readable name for this Seed Lot","example":"Seed Lot Alpha","calls":[],"data_types":{"SeedLot":true,"SeedLotNewRequest":true}},"sourceCollection":{"type":"string","description":"The description of the source where this material was originally collected (wild, nursery, etc)","example":"nursery","calls":[],"data_types":{"SeedLot":true,"SeedLotNewRequest":true}},"storageLocation":{"type":"string","description":"Description the storage location","example":"The storage location is an massive, underground, bunker.","calls":[],"data_types":{"SeedLot":true,"SeedLotNewRequest":true}},"fromSeedLotDbId":{"type":"string","description":"The identifier for the Seed Lot being transfered out of","example":"11eef13b","calls":[],"data_types":{"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true}},"toSeedLotDbId":{"type":"string","description":"The identifier for the Seed Lot being transfered into","example":"59339b90","calls":[],"data_types":{"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true}},"transactionDescription":{"type":"string","description":"A general description of this Seed Lot Transaction","example":"f9cd88d2","calls":[],"data_types":{"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true}},"transactionTimestamp":{"type":"string","description":"The time stamp for when the transaction occurred","example":"","calls":[],"data_types":{"SeedLotNewTransactionRequest":true,"SeedLotTransaction":true}},"transactionDbId":{"type":"string","description":"Unique DbId for the Seed Lot Transaction","example":"28e46db9","calls":{"\/seedlots\/transactions":true,"\/seedlots\/{seedLotDbId}\/transactions":true},"data_types":{"SeedLotTransaction":true}},"sourceName":{"type":"string","description":"The human readable name of the taxonomy provider","example":"NCBI","calls":[],"data_types":{"TaxonID":true,"Germplasm_taxonIds":true}},"taxonId":{"type":"string","description":"The identifier (name, ID, URI) of a particular taxonomy within the source provider","example":"2026747","calls":[],"data_types":{"TaxonID":true,"Germplasm_taxonIds":true}},"crossAttributeName":{"type":"string","description":"the human readable name of a cross attribute","example":"Humidity Percentage","calls":[],"data_types":{"Cross_crossAttributes":true}},"crossAttributeValue":{"type":"string","description":"the value of a cross attribute","example":"45","calls":[],"data_types":{"Cross_crossAttributes":true}},"donorAccessionNumber":{"type":"string","description":"The accession number assigned by the donor\n\nMIAPPE V1.1 (DM-50) Material source ID (Holding institute\/stock centre, accession) - An identifier for the source of the biological material, in the form of a key-value pair comprising the name\/identifier of the repository from which the material was sourced plus the accession number of the repository for that material. Where an accession number has not been assigned, but the material has been derived from the crossing of known accessions, the material can be defined as follows: \"mother_accession X father_accession\", or, if father is unknown, as \"mother_accession X UNKNOWN\". For in situ material, the region of provenance may be used when an accession is not available.\n                  \nMCPD (v2.1) (DONORNUMB) 23. Identifier assigned to an accession by the donor. Follows ACCENUMB standard.","example":"A0000123","calls":[],"data_types":{"Germplasm_donors":true,"GermplasmMCPD_donorInfo":true}},"donorInstituteCode":{"type":"string","description":"The institute code for the donor institute\n\nMIAPPE V1.1 (DM-50) Material source ID (Holding institute\/stock centre, accession) - An identifier for the source of the biological material, in the form of a key-value pair comprising the name\/identifier of the repository from which the material was sourced plus the accession number of the repository for that material. Where an accession number has not been assigned, but the material has been derived from the crossing of known accessions, the material can be defined as follows: \"mother_accession X father_accession\", or, if father is unknown, as \"mother_accession X UNKNOWN\". For in situ material, the region of provenance may be used when an accession is not available.\n\nMCPD (v2.1) (DONORCODE) 22. FAO WIEWS code of the donor institute. Follows INSTCODE standard.","example":"PER001","calls":[],"data_types":{"Germplasm_donors":true}},"code":{"type":"string","description":"The 2 digit code representing the type of storage this germplasm is kept in at a genebank. \n\nMCPD (v2.1) (STORAGE) 26. If germplasm is maintained under different types of storage, multiple choices are allowed, separated by a semicolon (e.g. 20;30). (Refer to FAO\/IPGRI Genebank Standards 1994 for details on storage type.) \n\n10) Seed collection \n11) Short term \n12) Medium term \n13) Long term \n20) Field collection \n30) In vitro collection \n40) Cryo-preserved collection \n50) DNA collection \n99) Other (elaborate in REMARKS field)","example":"11","calls":[],"data_types":{"Germplasm_storageTypes":true}},"synonym":{"type":"string","description":"Alternative name or ID used to reference this germplasm","example":"variety_1","calls":{"\/germplasm":true},"data_types":{"Germplasm_synonyms":true}},"elevation":{"type":"string","description":"MCPD (v2.1) (ELEVATION) 16. Elevation of collecting site expressed in metres above sea level. Negative values are allowed.","example":"35","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"georeferencingMethod":{"type":"string","description":"MCPD (v2.1) (GEOREFMETH) 15.7  The georeferencing method used (GPS, determined from map, gazetteer, or estimated using software). Leave the value empty if georeferencing method is not known.","example":"WGS84","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"latitudeDecimal":{"type":"string","description":"MCPD (v2.1) (DECLATITUDE) 15.1 Latitude expressed in decimal degrees. Positive values are North of the Equator; negative values are South of the Equator (e.g. -44.6975).","example":"+42.445295","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"latitudeDegrees":{"type":"string","description":"MCPD (v2.1) (LATITUDE) 15.2 Degrees (2 digits) minutes (2 digits), and seconds (2 digits) followed by N (North) or S (South) (e.g. 103020S). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 10","example":"42 26 43.1 N","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"locationDescription":{"type":"string","description":"MCPD (v2.1) (COLLSITE) 14. Location information below the country level that describes where the accession was collected, preferable in English. This might include the distance in kilometres and direction from the nearest town, village or map grid reference point, (e.g. 7 km south of Townsville).","example":"South east hill near institute buildings","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"longitudeDecimal":{"type":"string","description":"MCPD (v2.1) (DECLONGITUDE) 15.3 Longitude expressed in decimal degrees. Positive values are East of the Greenwich Meridian; negative values are West of the Greenwich Meridian (e.g. +120.9123).","example":"-076.471934","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"longitudeDegrees":{"type":"string","description":"MCPD (v2.1) (LONGITUDE) 15.4 Degrees (3 digits), minutes (2 digits), and seconds (2 digits) followed by E (East) or W (West) (e.g. 0762510W). Every missing digit (minutes or seconds) should be indicated with a hyphen. Leading zeros are required (e.g. 076","example":"76 28 19.0 W","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"spatialReferenceSystem":{"type":"string","description":"MCPD (v2.1) (COORDDATUM) 15.6 The geodetic datum or spatial reference system upon which the coordinates given in decimal latitude and decimal longitude are based (e.g. WGS84). The GPS uses the WGS84 datum.","example":"WGS84","calls":[],"data_types":{"GermplasmMCPD_collectingInfo_collectingSite":true}},"collectingDate":{"type":"string","description":"MCPD (v2.1) (COLLDATE) 17. Collecting date of the sample [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \"00\" [double zero].","example":"","calls":[],"data_types":{"GermplasmMCPD_collectingInfo":true}},"collectingInstitutes":{"type":"GermplasmMCPD_collectingInfo_collectingInstitutes[]","description":"Institutes which collected the sample","example":"","calls":[],"data_types":{"GermplasmMCPD_collectingInfo":true}},"collectingMissionIdentifier":{"type":"string","description":"MCPD (v2.1) (COLLMISSID) 4.2 Identifier of the collecting mission used by the Collecting Institute (4 or 4.1) (e.g. \"CIATFOR_052\", \"CN_426\").","example":"CIATFOR_052","calls":[],"data_types":{"GermplasmMCPD_collectingInfo":true}},"collectingNumber":{"type":"string","description":"MCPD (v2.1) (COLLNUMB) 3. Original identifier assigned by the collector(s) of the sample, normally composed of the name or initials of the collector(s) followed by a number (e.g. \"ab109909\"). This identifier is essential for identifying duplicates held in different collections.","example":"ab109909","calls":[],"data_types":{"GermplasmMCPD_collectingInfo":true}},"collectingSite":{"type":"GermplasmMCPD_collectingInfo_collectingSite","description":"","example":"","calls":[],"data_types":{"GermplasmMCPD_collectingInfo":true}},"donorAccessionPui":{"type":"string","description":"PUI (DOI mostly) of the accession in the donor system.","example":"http:\/\/pui.per\/accession\/A0010025","calls":[],"data_types":{"GermplasmMCPD_donorInfo":true}},"donorInstitute":{"type":"GermplasmMCPD_donorInfo_donorInstitute","description":"","example":"","calls":[],"data_types":{"GermplasmMCPD_donorInfo":true}},"parentDbId":{"type":"","description":"Search for Germplasm with this parent","example":"","calls":{"\/germplasm":true},"data_types":[]},"progenyDbId":{"type":"","description":"Search for Germplasm with this child","example":"","calls":{"\/germplasm":true},"data_types":[]},"notation":{"type":"","description":"text representation of the pedigree","example":"","calls":{"\/germplasm\/{germplasmDbId}\/pedigree":true},"data_types":[]},"includeSiblings":{"type":"","description":"include array of siblings in response","example":"","calls":{"\/germplasm\/{germplasmDbId}\/pedigree":true},"data_types":[]},"transactionDirection":{"type":"","description":"Filter results to only include transactions directed to the specific Seed Lot (TO), away from the specific Seed Lot (FROM), or both (BOTH). The default value for this parameter is BOTH","example":"","calls":{"\/seedlots\/{seedLotDbId}\/transactions":true},"data_types":[]}}}